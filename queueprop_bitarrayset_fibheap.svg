<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="949.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="949.00"> </text><svg id="frames" x="10" width="1180" total_samples="26410"><g><title>[unknown] (4 samples, 0.02%)</title><rect x="0.0000%" y="885" width="0.0151%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4"/><text x="0.2500%" y="895.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (4 samples, 0.02%)</title><rect x="0.0000%" y="869" width="0.0151%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="4"/><text x="0.2500%" y="879.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (4 samples, 0.02%)</title><rect x="0.0000%" y="853" width="0.0151%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="4"/><text x="0.2500%" y="863.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (4 samples, 0.02%)</title><rect x="0.0000%" y="837" width="0.0151%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="4"/><text x="0.2500%" y="847.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (3 samples, 0.01%)</title><rect x="0.0303%" y="581" width="0.0114%" height="15" fill="rgb(208,68,35)" fg:x="8" fg:w="3"/><text x="0.2803%" y="591.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="0.0417%" y="581" width="0.0114%" height="15" fill="rgb(232,128,0)" fg:x="11" fg:w="3"/><text x="0.2917%" y="591.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="0.0530%" y="565" width="0.0114%" height="15" fill="rgb(207,160,47)" fg:x="14" fg:w="3"/><text x="0.3030%" y="575.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::as_mut_slices (3 samples, 0.01%)</title><rect x="0.0530%" y="549" width="0.0114%" height="15" fill="rgb(228,23,34)" fg:x="14" fg:w="3"/><text x="0.3030%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;(usize,usize,usize)&gt;&gt; (7 samples, 0.03%)</title><rect x="0.0530%" y="581" width="0.0265%" height="15" fill="rgb(218,30,26)" fg:x="14" fg:w="7"/><text x="0.3030%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize,usize)&gt;&gt; (4 samples, 0.02%)</title><rect x="0.0644%" y="565" width="0.0151%" height="15" fill="rgb(220,122,19)" fg:x="17" fg:w="4"/><text x="0.3144%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="0.0644%" y="549" width="0.0151%" height="15" fill="rgb(250,228,42)" fg:x="17" fg:w="4"/><text x="0.3144%" y="559.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.05%)</title><rect x="0.1704%" y="421" width="0.0454%" height="15" fill="rgb(240,193,28)" fg:x="45" fg:w="12"/><text x="0.4204%" y="431.50"></text></g><g><title>&lt;u8 as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.01%)</title><rect x="0.3559%" y="389" width="0.0114%" height="15" fill="rgb(216,20,37)" fg:x="94" fg:w="3"/><text x="0.6059%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (51 samples, 0.19%)</title><rect x="0.2158%" y="421" width="0.1931%" height="15" fill="rgb(206,188,39)" fg:x="57" fg:w="51"/><text x="0.4658%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (41 samples, 0.16%)</title><rect x="0.2537%" y="405" width="0.1552%" height="15" fill="rgb(217,207,13)" fg:x="67" fg:w="41"/><text x="0.5037%" y="415.50"></text></g><g><title>core::mem::replace (9 samples, 0.03%)</title><rect x="0.3749%" y="389" width="0.0341%" height="15" fill="rgb(231,73,38)" fg:x="99" fg:w="9"/><text x="0.6249%" y="399.50"></text></g><g><title>core::ptr::read (4 samples, 0.02%)</title><rect x="0.3938%" y="373" width="0.0151%" height="15" fill="rgb(225,20,46)" fg:x="104" fg:w="4"/><text x="0.6438%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (171 samples, 0.65%)</title><rect x="0.0871%" y="437" width="0.6475%" height="15" fill="rgb(210,31,41)" fg:x="23" fg:w="171"/><text x="0.3371%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (86 samples, 0.33%)</title><rect x="0.4089%" y="421" width="0.3256%" height="15" fill="rgb(221,200,47)" fg:x="108" fg:w="86"/><text x="0.6589%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (69 samples, 0.26%)</title><rect x="0.4733%" y="405" width="0.2613%" height="15" fill="rgb(226,26,5)" fg:x="125" fg:w="69"/><text x="0.7233%" y="415.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::items::{{closure}} (59 samples, 0.22%)</title><rect x="0.5112%" y="389" width="0.2234%" height="15" fill="rgb(249,33,26)" fg:x="135" fg:w="59"/><text x="0.7612%" y="399.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::contains (56 samples, 0.21%)</title><rect x="0.5225%" y="373" width="0.2120%" height="15" fill="rgb(235,183,28)" fg:x="138" fg:w="56"/><text x="0.7725%" y="383.50"></text></g><g><title>core::num::&lt;impl u128&gt;::pow (54 samples, 0.20%)</title><rect x="0.5301%" y="357" width="0.2045%" height="15" fill="rgb(221,5,38)" fg:x="140" fg:w="54"/><text x="0.7801%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (174 samples, 0.66%)</title><rect x="0.0795%" y="469" width="0.6588%" height="15" fill="rgb(247,18,42)" fg:x="21" fg:w="174"/><text x="0.3295%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (174 samples, 0.66%)</title><rect x="0.0795%" y="453" width="0.6588%" height="15" fill="rgb(241,131,45)" fg:x="21" fg:w="174"/><text x="0.3295%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (180 samples, 0.68%)</title><rect x="0.0795%" y="501" width="0.6816%" height="15" fill="rgb(249,31,29)" fg:x="21" fg:w="180"/><text x="0.3295%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (180 samples, 0.68%)</title><rect x="0.0795%" y="485" width="0.6816%" height="15" fill="rgb(225,111,53)" fg:x="21" fg:w="180"/><text x="0.3295%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="0.7497%" y="469" width="0.0114%" height="15" fill="rgb(238,160,17)" fg:x="198" fg:w="3"/><text x="0.9997%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="0.7497%" y="453" width="0.0114%" height="15" fill="rgb(214,148,48)" fg:x="198" fg:w="3"/><text x="0.9997%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.01%)</title><rect x="0.7497%" y="437" width="0.0114%" height="15" fill="rgb(232,36,49)" fg:x="198" fg:w="3"/><text x="0.9997%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="0.7497%" y="421" width="0.0114%" height="15" fill="rgb(209,103,24)" fg:x="198" fg:w="3"/><text x="0.9997%" y="431.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::items (182 samples, 0.69%)</title><rect x="0.0795%" y="581" width="0.6891%" height="15" fill="rgb(229,88,8)" fg:x="21" fg:w="182"/><text x="0.3295%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (182 samples, 0.69%)</title><rect x="0.0795%" y="565" width="0.6891%" height="15" fill="rgb(213,181,19)" fg:x="21" fg:w="182"/><text x="0.3295%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (182 samples, 0.69%)</title><rect x="0.0795%" y="549" width="0.6891%" height="15" fill="rgb(254,191,54)" fg:x="21" fg:w="182"/><text x="0.3295%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (182 samples, 0.69%)</title><rect x="0.0795%" y="533" width="0.6891%" height="15" fill="rgb(241,83,37)" fg:x="21" fg:w="182"/><text x="0.3295%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (182 samples, 0.69%)</title><rect x="0.0795%" y="517" width="0.6891%" height="15" fill="rgb(233,36,39)" fg:x="21" fg:w="182"/><text x="0.3295%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="0.7914%" y="549" width="0.0151%" height="15" fill="rgb(226,3,54)" fg:x="209" fg:w="4"/><text x="1.0414%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="0.8141%" y="533" width="0.0151%" height="15" fill="rgb(245,192,40)" fg:x="215" fg:w="4"/><text x="1.0641%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="0.8141%" y="549" width="0.0189%" height="15" fill="rgb(238,167,29)" fg:x="215" fg:w="5"/><text x="1.0641%" y="559.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (3 samples, 0.01%)</title><rect x="0.8368%" y="501" width="0.0114%" height="15" fill="rgb(232,182,51)" fg:x="221" fg:w="3"/><text x="1.0868%" y="511.50"></text></g><g><title>core::cell::BorrowRef::new (3 samples, 0.01%)</title><rect x="0.8368%" y="485" width="0.0114%" height="15" fill="rgb(231,60,39)" fg:x="221" fg:w="3"/><text x="1.0868%" y="495.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (4 samples, 0.02%)</title><rect x="0.8368%" y="517" width="0.0151%" height="15" fill="rgb(208,69,12)" fg:x="221" fg:w="4"/><text x="1.0868%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (8 samples, 0.03%)</title><rect x="0.8330%" y="549" width="0.0303%" height="15" fill="rgb(235,93,37)" fg:x="220" fg:w="8"/><text x="1.0830%" y="559.50"></text></g><g><title>wfc::wfc::fib_heap::FibHeap::pop_min::{{closure}} (8 samples, 0.03%)</title><rect x="0.8330%" y="533" width="0.0303%" height="15" fill="rgb(213,116,39)" fg:x="220" fg:w="8"/><text x="1.0830%" y="543.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="0.8633%" y="549" width="0.0114%" height="15" fill="rgb(222,207,29)" fg:x="228" fg:w="3"/><text x="1.1133%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.01%)</title><rect x="0.8747%" y="549" width="0.0114%" height="15" fill="rgb(206,96,30)" fg:x="231" fg:w="3"/><text x="1.1247%" y="559.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (9 samples, 0.03%)</title><rect x="0.8936%" y="533" width="0.0341%" height="15" fill="rgb(218,138,4)" fg:x="236" fg:w="9"/><text x="1.1436%" y="543.50"></text></g><g><title>core::cell::BorrowRef::new (6 samples, 0.02%)</title><rect x="0.9050%" y="517" width="0.0227%" height="15" fill="rgb(250,191,14)" fg:x="239" fg:w="6"/><text x="1.1550%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.01%)</title><rect x="0.9163%" y="501" width="0.0114%" height="15" fill="rgb(239,60,40)" fg:x="242" fg:w="3"/><text x="1.1663%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.01%)</title><rect x="0.9163%" y="485" width="0.0114%" height="15" fill="rgb(206,27,48)" fg:x="242" fg:w="3"/><text x="1.1663%" y="495.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (11 samples, 0.04%)</title><rect x="0.8898%" y="549" width="0.0417%" height="15" fill="rgb(225,35,8)" fg:x="235" fg:w="11"/><text x="1.1398%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;wfc::wfc::fib_heap::FibHeapNode&gt;&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="0.9390%" y="549" width="0.0114%" height="15" fill="rgb(250,213,24)" fg:x="248" fg:w="3"/><text x="1.1890%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="0.9390%" y="533" width="0.0114%" height="15" fill="rgb(247,123,22)" fg:x="248" fg:w="3"/><text x="1.1890%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;wfc::wfc::fib_heap::FibHeapNode&gt;&gt; (10 samples, 0.04%)</title><rect x="0.9504%" y="549" width="0.0379%" height="15" fill="rgb(231,138,38)" fg:x="251" fg:w="10"/><text x="1.2004%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (9 samples, 0.03%)</title><rect x="0.9542%" y="533" width="0.0341%" height="15" fill="rgb(231,145,46)" fg:x="252" fg:w="9"/><text x="1.2042%" y="543.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="0.9580%" y="517" width="0.0303%" height="15" fill="rgb(251,118,11)" fg:x="253" fg:w="8"/><text x="1.2080%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (6 samples, 0.02%)</title><rect x="0.9655%" y="501" width="0.0227%" height="15" fill="rgb(217,147,25)" fg:x="255" fg:w="6"/><text x="1.2155%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.02%)</title><rect x="0.9655%" y="485" width="0.0227%" height="15" fill="rgb(247,81,37)" fg:x="255" fg:w="6"/><text x="1.2155%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;wfc::wfc::fib_heap::FibHeapNode&gt;&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="0.9883%" y="549" width="0.0114%" height="15" fill="rgb(209,12,38)" fg:x="261" fg:w="3"/><text x="1.2383%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;wfc::wfc::fib_heap::FibHeapNode&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="0.9883%" y="533" width="0.0114%" height="15" fill="rgb(227,1,9)" fg:x="261" fg:w="3"/><text x="1.2383%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="0.9996%" y="501" width="0.0227%" height="15" fill="rgb(248,47,43)" fg:x="264" fg:w="6"/><text x="1.2496%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="0.9996%" y="485" width="0.0227%" height="15" fill="rgb(221,10,30)" fg:x="264" fg:w="6"/><text x="1.2496%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.02%)</title><rect x="1.0072%" y="469" width="0.0151%" height="15" fill="rgb(210,229,1)" fg:x="266" fg:w="4"/><text x="1.2572%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B,C)&gt;::hash (4 samples, 0.02%)</title><rect x="1.0072%" y="453" width="0.0151%" height="15" fill="rgb(222,148,37)" fg:x="266" fg:w="4"/><text x="1.2572%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (4 samples, 0.02%)</title><rect x="1.0072%" y="437" width="0.0151%" height="15" fill="rgb(234,67,33)" fg:x="266" fg:w="4"/><text x="1.2572%" y="447.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.01%)</title><rect x="1.0110%" y="421" width="0.0114%" height="15" fill="rgb(247,98,35)" fg:x="267" fg:w="3"/><text x="1.2610%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="1.0110%" y="405" width="0.0114%" height="15" fill="rgb(247,138,52)" fg:x="267" fg:w="3"/><text x="1.2610%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="1.0110%" y="389" width="0.0114%" height="15" fill="rgb(213,79,30)" fg:x="267" fg:w="3"/><text x="1.2610%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="1.0110%" y="373" width="0.0114%" height="15" fill="rgb(246,177,23)" fg:x="267" fg:w="3"/><text x="1.2610%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.02%)</title><rect x="1.0223%" y="485" width="0.0189%" height="15" fill="rgb(230,62,27)" fg:x="270" fg:w="5"/><text x="1.2723%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.02%)</title><rect x="1.0223%" y="469" width="0.0189%" height="15" fill="rgb(216,154,8)" fg:x="270" fg:w="5"/><text x="1.2723%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (16 samples, 0.06%)</title><rect x="0.9996%" y="549" width="0.0606%" height="15" fill="rgb(244,35,45)" fg:x="264" fg:w="16"/><text x="1.2496%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (16 samples, 0.06%)</title><rect x="0.9996%" y="533" width="0.0606%" height="15" fill="rgb(251,115,12)" fg:x="264" fg:w="16"/><text x="1.2496%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (16 samples, 0.06%)</title><rect x="0.9996%" y="517" width="0.0606%" height="15" fill="rgb(240,54,50)" fg:x="264" fg:w="16"/><text x="1.2496%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (10 samples, 0.04%)</title><rect x="1.0223%" y="501" width="0.0379%" height="15" fill="rgb(233,84,52)" fg:x="270" fg:w="10"/><text x="1.2723%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (5 samples, 0.02%)</title><rect x="1.0413%" y="485" width="0.0189%" height="15" fill="rgb(207,117,47)" fg:x="275" fg:w="5"/><text x="1.2913%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (4 samples, 0.02%)</title><rect x="1.0451%" y="469" width="0.0151%" height="15" fill="rgb(249,43,39)" fg:x="276" fg:w="4"/><text x="1.2951%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::erase (3 samples, 0.01%)</title><rect x="1.0488%" y="453" width="0.0114%" height="15" fill="rgb(209,38,44)" fg:x="277" fg:w="3"/><text x="1.2988%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="1.0678%" y="533" width="0.0189%" height="15" fill="rgb(236,212,23)" fg:x="282" fg:w="5"/><text x="1.3178%" y="543.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (3 samples, 0.01%)</title><rect x="1.0754%" y="517" width="0.0114%" height="15" fill="rgb(242,79,21)" fg:x="284" fg:w="3"/><text x="1.3254%" y="527.50"></text></g><g><title>&lt;core::cell::Ref&lt;T&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.02%)</title><rect x="1.0867%" y="533" width="0.0227%" height="15" fill="rgb(211,96,35)" fg:x="287" fg:w="6"/><text x="1.3367%" y="543.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="1.1094%" y="533" width="0.0189%" height="15" fill="rgb(253,215,40)" fg:x="293" fg:w="5"/><text x="1.3594%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="1.1094%" y="517" width="0.0189%" height="15" fill="rgb(211,81,21)" fg:x="293" fg:w="5"/><text x="1.3594%" y="527.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (5 samples, 0.02%)</title><rect x="1.1094%" y="501" width="0.0189%" height="15" fill="rgb(208,190,38)" fg:x="293" fg:w="5"/><text x="1.3594%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.01%)</title><rect x="1.1170%" y="485" width="0.0114%" height="15" fill="rgb(235,213,38)" fg:x="295" fg:w="3"/><text x="1.3670%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.01%)</title><rect x="1.1170%" y="469" width="0.0114%" height="15" fill="rgb(237,122,38)" fg:x="295" fg:w="3"/><text x="1.3670%" y="479.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (8 samples, 0.03%)</title><rect x="1.1435%" y="533" width="0.0303%" height="15" fill="rgb(244,218,35)" fg:x="302" fg:w="8"/><text x="1.3935%" y="543.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (7 samples, 0.03%)</title><rect x="1.1473%" y="517" width="0.0265%" height="15" fill="rgb(240,68,47)" fg:x="303" fg:w="7"/><text x="1.3973%" y="527.50"></text></g><g><title>core::cell::BorrowRef::new (6 samples, 0.02%)</title><rect x="1.1511%" y="501" width="0.0227%" height="15" fill="rgb(210,16,53)" fg:x="304" fg:w="6"/><text x="1.4011%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (5 samples, 0.02%)</title><rect x="1.1549%" y="485" width="0.0189%" height="15" fill="rgb(235,124,12)" fg:x="305" fg:w="5"/><text x="1.4049%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (5 samples, 0.02%)</title><rect x="1.1549%" y="469" width="0.0189%" height="15" fill="rgb(224,169,11)" fg:x="305" fg:w="5"/><text x="1.4049%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="1.1738%" y="437" width="0.0151%" height="15" fill="rgb(250,166,2)" fg:x="310" fg:w="4"/><text x="1.4238%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="1.1738%" y="469" width="0.0189%" height="15" fill="rgb(242,216,29)" fg:x="310" fg:w="5"/><text x="1.4238%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.02%)</title><rect x="1.1738%" y="453" width="0.0189%" height="15" fill="rgb(230,116,27)" fg:x="310" fg:w="5"/><text x="1.4238%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.03%)</title><rect x="1.1738%" y="533" width="0.0303%" height="15" fill="rgb(228,99,48)" fg:x="310" fg:w="8"/><text x="1.4238%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.03%)</title><rect x="1.1738%" y="517" width="0.0303%" height="15" fill="rgb(253,11,6)" fg:x="310" fg:w="8"/><text x="1.4238%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.03%)</title><rect x="1.1738%" y="501" width="0.0303%" height="15" fill="rgb(247,143,39)" fg:x="310" fg:w="8"/><text x="1.4238%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.03%)</title><rect x="1.1738%" y="485" width="0.0303%" height="15" fill="rgb(236,97,10)" fg:x="310" fg:w="8"/><text x="1.4238%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;wfc::wfc::fib_heap::FibHeapNode&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="1.2041%" y="533" width="0.0114%" height="15" fill="rgb(233,208,19)" fg:x="318" fg:w="3"/><text x="1.4541%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="1.2041%" y="517" width="0.0114%" height="15" fill="rgb(216,164,2)" fg:x="318" fg:w="3"/><text x="1.4541%" y="527.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (3 samples, 0.01%)</title><rect x="1.2041%" y="501" width="0.0114%" height="15" fill="rgb(220,129,5)" fg:x="318" fg:w="3"/><text x="1.4541%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;wfc::wfc::fib_heap::FibHeapNode&gt;&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="1.2154%" y="533" width="0.0114%" height="15" fill="rgb(242,17,10)" fg:x="321" fg:w="3"/><text x="1.4654%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="1.2154%" y="517" width="0.0114%" height="15" fill="rgb(242,107,0)" fg:x="321" fg:w="3"/><text x="1.4654%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::rc::Rc&lt;core::cell::RefCell&lt;wfc::wfc::fib_heap::FibHeapNode&gt;&gt;]&gt; (3 samples, 0.01%)</title><rect x="1.2154%" y="501" width="0.0114%" height="15" fill="rgb(251,28,31)" fg:x="321" fg:w="3"/><text x="1.4654%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;wfc::wfc::fib_heap::FibHeapNode&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="1.2154%" y="485" width="0.0114%" height="15" fill="rgb(233,223,10)" fg:x="321" fg:w="3"/><text x="1.4654%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="1.2154%" y="469" width="0.0114%" height="15" fill="rgb(215,21,27)" fg:x="321" fg:w="3"/><text x="1.4654%" y="479.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (3 samples, 0.01%)</title><rect x="1.2154%" y="453" width="0.0114%" height="15" fill="rgb(232,23,21)" fg:x="321" fg:w="3"/><text x="1.4654%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;wfc::wfc::fib_heap::FibHeapNode&gt;&gt; (12 samples, 0.05%)</title><rect x="1.2268%" y="533" width="0.0454%" height="15" fill="rgb(244,5,23)" fg:x="324" fg:w="12"/><text x="1.4768%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (11 samples, 0.04%)</title><rect x="1.2306%" y="517" width="0.0417%" height="15" fill="rgb(226,81,46)" fg:x="325" fg:w="11"/><text x="1.4806%" y="527.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="1.2382%" y="501" width="0.0341%" height="15" fill="rgb(247,70,30)" fg:x="327" fg:w="9"/><text x="1.4882%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (7 samples, 0.03%)</title><rect x="1.2457%" y="485" width="0.0265%" height="15" fill="rgb(212,68,19)" fg:x="329" fg:w="7"/><text x="1.4957%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (7 samples, 0.03%)</title><rect x="1.2457%" y="469" width="0.0265%" height="15" fill="rgb(240,187,13)" fg:x="329" fg:w="7"/><text x="1.4957%" y="479.50"></text></g><g><title>core::mem::replace (3 samples, 0.01%)</title><rect x="1.2609%" y="453" width="0.0114%" height="15" fill="rgb(223,113,26)" fg:x="333" fg:w="3"/><text x="1.5109%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3 samples, 0.01%)</title><rect x="1.2722%" y="453" width="0.0114%" height="15" fill="rgb(206,192,2)" fg:x="336" fg:w="3"/><text x="1.5222%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3 samples, 0.01%)</title><rect x="1.2722%" y="437" width="0.0114%" height="15" fill="rgb(241,108,4)" fg:x="336" fg:w="3"/><text x="1.5222%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,alloc::rc::Rc&lt;core::cell::RefCell&lt;wfc::wfc::fib_heap::FibHeapNode&gt;&gt;)&gt; (3 samples, 0.01%)</title><rect x="1.2722%" y="421" width="0.0114%" height="15" fill="rgb(247,173,49)" fg:x="336" fg:w="3"/><text x="1.5222%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;wfc::wfc::fib_heap::FibHeapNode&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="1.2722%" y="405" width="0.0114%" height="15" fill="rgb(224,114,35)" fg:x="336" fg:w="3"/><text x="1.5222%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="1.2722%" y="389" width="0.0114%" height="15" fill="rgb(245,159,27)" fg:x="336" fg:w="3"/><text x="1.5222%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (4 samples, 0.02%)</title><rect x="1.2722%" y="469" width="0.0151%" height="15" fill="rgb(245,172,44)" fg:x="336" fg:w="4"/><text x="1.5222%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,alloc::rc::Rc&lt;core::cell::RefCell&lt;wfc::wfc::fib_heap::FibHeapNode&gt;&gt;&gt;&gt; (8 samples, 0.03%)</title><rect x="1.2722%" y="533" width="0.0303%" height="15" fill="rgb(236,23,11)" fg:x="336" fg:w="8"/><text x="1.5222%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;usize,alloc::rc::Rc&lt;core::cell::RefCell&lt;wfc::wfc::fib_heap::FibHeapNode&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt; (8 samples, 0.03%)</title><rect x="1.2722%" y="517" width="0.0303%" height="15" fill="rgb(205,117,38)" fg:x="336" fg:w="8"/><text x="1.5222%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(usize,alloc::rc::Rc&lt;core::cell::RefCell&lt;wfc::wfc::fib_heap::FibHeapNode&gt;&gt;)&gt;&gt; (8 samples, 0.03%)</title><rect x="1.2722%" y="501" width="0.0303%" height="15" fill="rgb(237,72,25)" fg:x="336" fg:w="8"/><text x="1.5222%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="1.2722%" y="485" width="0.0303%" height="15" fill="rgb(244,70,9)" fg:x="336" fg:w="8"/><text x="1.5222%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (4 samples, 0.02%)</title><rect x="1.2874%" y="469" width="0.0151%" height="15" fill="rgb(217,125,39)" fg:x="340" fg:w="4"/><text x="1.5374%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (3 samples, 0.01%)</title><rect x="1.3063%" y="533" width="0.0114%" height="15" fill="rgb(235,36,10)" fg:x="345" fg:w="3"/><text x="1.5563%" y="543.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (5 samples, 0.02%)</title><rect x="1.3518%" y="501" width="0.0189%" height="15" fill="rgb(251,123,47)" fg:x="357" fg:w="5"/><text x="1.6018%" y="511.50"></text></g><g><title>core::cell::BorrowRef::new (3 samples, 0.01%)</title><rect x="1.3593%" y="485" width="0.0114%" height="15" fill="rgb(221,13,13)" fg:x="359" fg:w="3"/><text x="1.6093%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.01%)</title><rect x="1.3593%" y="469" width="0.0114%" height="15" fill="rgb(238,131,9)" fg:x="359" fg:w="3"/><text x="1.6093%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.01%)</title><rect x="1.3593%" y="453" width="0.0114%" height="15" fill="rgb(211,50,8)" fg:x="359" fg:w="3"/><text x="1.6093%" y="463.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (9 samples, 0.03%)</title><rect x="1.3404%" y="517" width="0.0341%" height="15" fill="rgb(245,182,24)" fg:x="354" fg:w="9"/><text x="1.5904%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (3 samples, 0.01%)</title><rect x="1.3745%" y="517" width="0.0114%" height="15" fill="rgb(242,14,37)" fg:x="363" fg:w="3"/><text x="1.6245%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;wfc::wfc::fib_heap::FibHeapNode&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="1.3858%" y="517" width="0.0114%" height="15" fill="rgb(246,228,12)" fg:x="366" fg:w="3"/><text x="1.6358%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;wfc::wfc::fib_heap::FibHeapNode&gt;&gt; (7 samples, 0.03%)</title><rect x="1.3972%" y="517" width="0.0265%" height="15" fill="rgb(213,55,15)" fg:x="369" fg:w="7"/><text x="1.6472%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (6 samples, 0.02%)</title><rect x="1.4010%" y="501" width="0.0227%" height="15" fill="rgb(209,9,3)" fg:x="370" fg:w="6"/><text x="1.6510%" y="511.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="1.4048%" y="485" width="0.0189%" height="15" fill="rgb(230,59,30)" fg:x="371" fg:w="5"/><text x="1.6548%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.02%)</title><rect x="1.4086%" y="469" width="0.0151%" height="15" fill="rgb(209,121,21)" fg:x="372" fg:w="4"/><text x="1.6586%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.02%)</title><rect x="1.4086%" y="453" width="0.0151%" height="15" fill="rgb(220,109,13)" fg:x="372" fg:w="4"/><text x="1.6586%" y="463.50"></text></g><g><title>core::mem::replace (3 samples, 0.01%)</title><rect x="1.4123%" y="437" width="0.0114%" height="15" fill="rgb(232,18,1)" fg:x="373" fg:w="3"/><text x="1.6623%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;wfc::wfc::fib_heap::FibHeapNode&gt;&gt; (3 samples, 0.01%)</title><rect x="1.4237%" y="517" width="0.0114%" height="15" fill="rgb(215,41,42)" fg:x="376" fg:w="3"/><text x="1.6737%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.01%)</title><rect x="1.4616%" y="437" width="0.0114%" height="15" fill="rgb(224,123,36)" fg:x="386" fg:w="3"/><text x="1.7116%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.01%)</title><rect x="1.4616%" y="421" width="0.0114%" height="15" fill="rgb(240,125,3)" fg:x="386" fg:w="3"/><text x="1.7116%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.01%)</title><rect x="1.4616%" y="405" width="0.0114%" height="15" fill="rgb(205,98,50)" fg:x="386" fg:w="3"/><text x="1.7116%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.01%)</title><rect x="1.4616%" y="389" width="0.0114%" height="15" fill="rgb(205,185,37)" fg:x="386" fg:w="3"/><text x="1.7116%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.01%)</title><rect x="1.4729%" y="437" width="0.0114%" height="15" fill="rgb(238,207,15)" fg:x="389" fg:w="3"/><text x="1.7229%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.05%)</title><rect x="1.4464%" y="469" width="0.0530%" height="15" fill="rgb(213,199,42)" fg:x="382" fg:w="14"/><text x="1.6964%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.05%)</title><rect x="1.4540%" y="453" width="0.0454%" height="15" fill="rgb(235,201,11)" fg:x="384" fg:w="12"/><text x="1.7040%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.02%)</title><rect x="1.4843%" y="437" width="0.0151%" height="15" fill="rgb(207,46,11)" fg:x="392" fg:w="4"/><text x="1.7343%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (4 samples, 0.02%)</title><rect x="1.4843%" y="421" width="0.0151%" height="15" fill="rgb(241,35,35)" fg:x="392" fg:w="4"/><text x="1.7343%" y="431.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.01%)</title><rect x="1.4881%" y="405" width="0.0114%" height="15" fill="rgb(243,32,47)" fg:x="393" fg:w="3"/><text x="1.7381%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.02%)</title><rect x="1.5259%" y="421" width="0.0189%" height="15" fill="rgb(247,202,23)" fg:x="403" fg:w="5"/><text x="1.7759%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.02%)</title><rect x="1.5297%" y="405" width="0.0151%" height="15" fill="rgb(219,102,11)" fg:x="404" fg:w="4"/><text x="1.7797%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.01%)</title><rect x="1.5335%" y="389" width="0.0114%" height="15" fill="rgb(243,110,44)" fg:x="405" fg:w="3"/><text x="1.7835%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (31 samples, 0.12%)</title><rect x="1.4351%" y="517" width="0.1174%" height="15" fill="rgb(222,74,54)" fg:x="379" fg:w="31"/><text x="1.6851%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (29 samples, 0.11%)</title><rect x="1.4426%" y="501" width="0.1098%" height="15" fill="rgb(216,99,12)" fg:x="381" fg:w="29"/><text x="1.6926%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (29 samples, 0.11%)</title><rect x="1.4426%" y="485" width="0.1098%" height="15" fill="rgb(226,22,26)" fg:x="381" fg:w="29"/><text x="1.6926%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14 samples, 0.05%)</title><rect x="1.4994%" y="469" width="0.0530%" height="15" fill="rgb(217,163,10)" fg:x="396" fg:w="14"/><text x="1.7494%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.05%)</title><rect x="1.5032%" y="453" width="0.0492%" height="15" fill="rgb(213,25,53)" fg:x="397" fg:w="13"/><text x="1.7532%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.05%)</title><rect x="1.5070%" y="437" width="0.0454%" height="15" fill="rgb(252,105,26)" fg:x="398" fg:w="12"/><text x="1.7570%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.02%)</title><rect x="1.5600%" y="453" width="0.0189%" height="15" fill="rgb(220,39,43)" fg:x="412" fg:w="5"/><text x="1.8100%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.02%)</title><rect x="1.5600%" y="437" width="0.0189%" height="15" fill="rgb(229,68,48)" fg:x="412" fg:w="5"/><text x="1.8100%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.02%)</title><rect x="1.5600%" y="421" width="0.0189%" height="15" fill="rgb(252,8,32)" fg:x="412" fg:w="5"/><text x="1.8100%" y="431.50"></text></g><g><title>hashbrown::map::make_insert_hash (7 samples, 0.03%)</title><rect x="1.5562%" y="485" width="0.0265%" height="15" fill="rgb(223,20,43)" fg:x="411" fg:w="7"/><text x="1.8062%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="1.5600%" y="469" width="0.0227%" height="15" fill="rgb(229,81,49)" fg:x="412" fg:w="6"/><text x="1.8100%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10 samples, 0.04%)</title><rect x="1.5827%" y="485" width="0.0379%" height="15" fill="rgb(236,28,36)" fg:x="418" fg:w="10"/><text x="1.8327%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.03%)</title><rect x="1.5865%" y="469" width="0.0341%" height="15" fill="rgb(249,185,26)" fg:x="419" fg:w="9"/><text x="1.8365%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.03%)</title><rect x="1.5903%" y="453" width="0.0303%" height="15" fill="rgb(249,174,33)" fg:x="420" fg:w="8"/><text x="1.8403%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (7 samples, 0.03%)</title><rect x="1.5941%" y="437" width="0.0265%" height="15" fill="rgb(233,201,37)" fg:x="421" fg:w="7"/><text x="1.8441%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.03%)</title><rect x="1.5941%" y="421" width="0.0265%" height="15" fill="rgb(221,78,26)" fg:x="421" fg:w="7"/><text x="1.8441%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (4 samples, 0.02%)</title><rect x="1.6357%" y="405" width="0.0151%" height="15" fill="rgb(250,127,30)" fg:x="432" fg:w="4"/><text x="1.8857%" y="415.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (4 samples, 0.02%)</title><rect x="1.6357%" y="389" width="0.0151%" height="15" fill="rgb(230,49,44)" fg:x="432" fg:w="4"/><text x="1.8857%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.02%)</title><rect x="1.6357%" y="373" width="0.0151%" height="15" fill="rgb(229,67,23)" fg:x="432" fg:w="4"/><text x="1.8857%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="1.6357%" y="357" width="0.0151%" height="15" fill="rgb(249,83,47)" fg:x="432" fg:w="4"/><text x="1.8857%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (13 samples, 0.05%)</title><rect x="1.6206%" y="469" width="0.0492%" height="15" fill="rgb(215,43,3)" fg:x="428" fg:w="13"/><text x="1.8706%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.05%)</title><rect x="1.6206%" y="453" width="0.0492%" height="15" fill="rgb(238,154,13)" fg:x="428" fg:w="13"/><text x="1.8706%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (13 samples, 0.05%)</title><rect x="1.6206%" y="437" width="0.0492%" height="15" fill="rgb(219,56,2)" fg:x="428" fg:w="13"/><text x="1.8706%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (12 samples, 0.05%)</title><rect x="1.6244%" y="421" width="0.0454%" height="15" fill="rgb(233,0,4)" fg:x="429" fg:w="12"/><text x="1.8744%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (36 samples, 0.14%)</title><rect x="1.5524%" y="517" width="0.1363%" height="15" fill="rgb(235,30,7)" fg:x="410" fg:w="36"/><text x="1.8024%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (36 samples, 0.14%)</title><rect x="1.5524%" y="501" width="0.1363%" height="15" fill="rgb(250,79,13)" fg:x="410" fg:w="36"/><text x="1.8024%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (18 samples, 0.07%)</title><rect x="1.6206%" y="485" width="0.0682%" height="15" fill="rgb(211,146,34)" fg:x="428" fg:w="18"/><text x="1.8706%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (5 samples, 0.02%)</title><rect x="1.6698%" y="469" width="0.0189%" height="15" fill="rgb(228,22,38)" fg:x="441" fg:w="5"/><text x="1.9198%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.02%)</title><rect x="1.6963%" y="453" width="0.0227%" height="15" fill="rgb(235,168,5)" fg:x="448" fg:w="6"/><text x="1.9463%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.02%)</title><rect x="1.7001%" y="437" width="0.0189%" height="15" fill="rgb(221,155,16)" fg:x="449" fg:w="5"/><text x="1.9501%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.01%)</title><rect x="1.7077%" y="421" width="0.0114%" height="15" fill="rgb(215,215,53)" fg:x="451" fg:w="3"/><text x="1.9577%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (13 samples, 0.05%)</title><rect x="1.6888%" y="517" width="0.0492%" height="15" fill="rgb(223,4,10)" fg:x="446" fg:w="13"/><text x="1.9388%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (13 samples, 0.05%)</title><rect x="1.6888%" y="501" width="0.0492%" height="15" fill="rgb(234,103,6)" fg:x="446" fg:w="13"/><text x="1.9388%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (13 samples, 0.05%)</title><rect x="1.6888%" y="485" width="0.0492%" height="15" fill="rgb(227,97,0)" fg:x="446" fg:w="13"/><text x="1.9388%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (11 samples, 0.04%)</title><rect x="1.6963%" y="469" width="0.0417%" height="15" fill="rgb(234,150,53)" fg:x="448" fg:w="11"/><text x="1.9463%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (5 samples, 0.02%)</title><rect x="1.7190%" y="453" width="0.0189%" height="15" fill="rgb(228,201,54)" fg:x="454" fg:w="5"/><text x="1.9690%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (5 samples, 0.02%)</title><rect x="1.7190%" y="437" width="0.0189%" height="15" fill="rgb(222,22,37)" fg:x="454" fg:w="5"/><text x="1.9690%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::erase (4 samples, 0.02%)</title><rect x="1.7228%" y="421" width="0.0151%" height="15" fill="rgb(237,53,32)" fg:x="455" fg:w="4"/><text x="1.9728%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (3 samples, 0.01%)</title><rect x="1.7266%" y="405" width="0.0114%" height="15" fill="rgb(233,25,53)" fg:x="456" fg:w="3"/><text x="1.9766%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.01%)</title><rect x="1.7266%" y="389" width="0.0114%" height="15" fill="rgb(210,40,34)" fg:x="456" fg:w="3"/><text x="1.9766%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.01%)</title><rect x="1.7645%" y="453" width="0.0114%" height="15" fill="rgb(241,220,44)" fg:x="466" fg:w="3"/><text x="2.0145%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="1.7645%" y="437" width="0.0114%" height="15" fill="rgb(235,28,35)" fg:x="466" fg:w="3"/><text x="2.0145%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (9 samples, 0.03%)</title><rect x="1.7645%" y="501" width="0.0341%" height="15" fill="rgb(210,56,17)" fg:x="466" fg:w="9"/><text x="2.0145%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (9 samples, 0.03%)</title><rect x="1.7645%" y="485" width="0.0341%" height="15" fill="rgb(224,130,29)" fg:x="466" fg:w="9"/><text x="2.0145%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.03%)</title><rect x="1.7645%" y="469" width="0.0341%" height="15" fill="rgb(235,212,8)" fg:x="466" fg:w="9"/><text x="2.0145%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.02%)</title><rect x="1.7758%" y="453" width="0.0227%" height="15" fill="rgb(223,33,50)" fg:x="469" fg:w="6"/><text x="2.0258%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.02%)</title><rect x="1.7758%" y="437" width="0.0227%" height="15" fill="rgb(219,149,13)" fg:x="469" fg:w="6"/><text x="2.0258%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.02%)</title><rect x="1.7796%" y="421" width="0.0189%" height="15" fill="rgb(250,156,29)" fg:x="470" fg:w="5"/><text x="2.0296%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4 samples, 0.02%)</title><rect x="1.8023%" y="469" width="0.0151%" height="15" fill="rgb(216,193,19)" fg:x="476" fg:w="4"/><text x="2.0523%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.02%)</title><rect x="1.8023%" y="453" width="0.0151%" height="15" fill="rgb(216,135,14)" fg:x="476" fg:w="4"/><text x="2.0523%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.02%)</title><rect x="1.8023%" y="437" width="0.0151%" height="15" fill="rgb(241,47,5)" fg:x="476" fg:w="4"/><text x="2.0523%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.01%)</title><rect x="1.8061%" y="421" width="0.0114%" height="15" fill="rgb(233,42,35)" fg:x="477" fg:w="3"/><text x="2.0561%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (7 samples, 0.03%)</title><rect x="1.7986%" y="501" width="0.0265%" height="15" fill="rgb(231,13,6)" fg:x="475" fg:w="7"/><text x="2.0486%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.03%)</title><rect x="1.7986%" y="485" width="0.0265%" height="15" fill="rgb(207,181,40)" fg:x="475" fg:w="7"/><text x="2.0486%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.02%)</title><rect x="1.8364%" y="437" width="0.0227%" height="15" fill="rgb(254,173,49)" fg:x="485" fg:w="6"/><text x="2.0864%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.02%)</title><rect x="1.8402%" y="421" width="0.0189%" height="15" fill="rgb(221,1,38)" fg:x="486" fg:w="5"/><text x="2.0902%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (15 samples, 0.06%)</title><rect x="1.8251%" y="501" width="0.0568%" height="15" fill="rgb(206,124,46)" fg:x="482" fg:w="15"/><text x="2.0751%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (15 samples, 0.06%)</title><rect x="1.8251%" y="485" width="0.0568%" height="15" fill="rgb(249,21,11)" fg:x="482" fg:w="15"/><text x="2.0751%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (15 samples, 0.06%)</title><rect x="1.8251%" y="469" width="0.0568%" height="15" fill="rgb(222,201,40)" fg:x="482" fg:w="15"/><text x="2.0751%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (12 samples, 0.05%)</title><rect x="1.8364%" y="453" width="0.0454%" height="15" fill="rgb(235,61,29)" fg:x="485" fg:w="12"/><text x="2.0864%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (6 samples, 0.02%)</title><rect x="1.8591%" y="437" width="0.0227%" height="15" fill="rgb(219,207,3)" fg:x="491" fg:w="6"/><text x="2.1091%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (6 samples, 0.02%)</title><rect x="1.8591%" y="421" width="0.0227%" height="15" fill="rgb(222,56,46)" fg:x="491" fg:w="6"/><text x="2.1091%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::erase (6 samples, 0.02%)</title><rect x="1.8591%" y="405" width="0.0227%" height="15" fill="rgb(239,76,54)" fg:x="491" fg:w="6"/><text x="2.1091%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (3 samples, 0.01%)</title><rect x="1.8705%" y="389" width="0.0114%" height="15" fill="rgb(231,124,27)" fg:x="494" fg:w="3"/><text x="2.1205%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.01%)</title><rect x="1.8705%" y="373" width="0.0114%" height="15" fill="rgb(249,195,6)" fg:x="494" fg:w="3"/><text x="2.1205%" y="383.50"></text></g><g><title>wfc::wfc::fib_heap::FibHeap::consolidate (236 samples, 0.89%)</title><rect x="1.0602%" y="549" width="0.8936%" height="15" fill="rgb(237,174,47)" fg:x="280" fg:w="236"/><text x="1.3102%" y="559.50"></text></g><g><title>wfc::wfc::fib_heap::FibHeap::insert_or_merge (168 samples, 0.64%)</title><rect x="1.3177%" y="533" width="0.6361%" height="15" fill="rgb(206,201,31)" fg:x="348" fg:w="168"/><text x="1.5677%" y="543.50"></text></g><g><title>wfc::wfc::fib_heap::FibHeap::insert_or_merge (57 samples, 0.22%)</title><rect x="1.7380%" y="517" width="0.2158%" height="15" fill="rgb(231,57,52)" fg:x="459" fg:w="57"/><text x="1.9880%" y="527.50"></text></g><g><title>wfc::wfc::fib_heap::FibHeap::insert_or_merge (19 samples, 0.07%)</title><rect x="1.8819%" y="501" width="0.0719%" height="15" fill="rgb(248,177,22)" fg:x="497" fg:w="19"/><text x="2.1319%" y="511.50"></text></g><g><title>wfc::wfc::fib_heap::FibHeap::insert_or_merge (10 samples, 0.04%)</title><rect x="1.9159%" y="485" width="0.0379%" height="15" fill="rgb(215,211,37)" fg:x="506" fg:w="10"/><text x="2.1659%" y="495.50"></text></g><g><title>wfc::wfc::fib_heap::FibHeap::insert_or_merge (5 samples, 0.02%)</title><rect x="1.9349%" y="469" width="0.0189%" height="15" fill="rgb(241,128,51)" fg:x="511" fg:w="5"/><text x="2.1849%" y="479.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset_fibheap::QueuePropBitArraySetFibHeap::find_minimal (314 samples, 1.19%)</title><rect x="0.7724%" y="581" width="1.1889%" height="15" fill="rgb(227,165,31)" fg:x="204" fg:w="314"/><text x="1.0224%" y="591.50"></text></g><g><title>wfc::wfc::fib_heap::FibHeap::pop_min (314 samples, 1.19%)</title><rect x="0.7724%" y="565" width="1.1889%" height="15" fill="rgb(228,167,24)" fg:x="204" fg:w="314"/><text x="1.0224%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.02%)</title><rect x="1.9614%" y="565" width="0.0151%" height="15" fill="rgb(228,143,12)" fg:x="518" fg:w="4"/><text x="2.2114%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.01%)</title><rect x="1.9652%" y="549" width="0.0114%" height="15" fill="rgb(249,149,8)" fg:x="519" fg:w="3"/><text x="2.2152%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.01%)</title><rect x="1.9652%" y="533" width="0.0114%" height="15" fill="rgb(243,35,44)" fg:x="519" fg:w="3"/><text x="2.2152%" y="543.50"></text></g><g><title>&lt;wfc::wfc::vec3d::PosIter3D as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="1.9803%" y="565" width="0.0114%" height="15" fill="rgb(246,89,9)" fg:x="523" fg:w="3"/><text x="2.2303%" y="575.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (4 samples, 0.02%)</title><rect x="1.9955%" y="533" width="0.0151%" height="15" fill="rgb(233,213,13)" fg:x="527" fg:w="4"/><text x="2.2455%" y="543.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (4 samples, 0.02%)</title><rect x="1.9955%" y="517" width="0.0151%" height="15" fill="rgb(233,141,41)" fg:x="527" fg:w="4"/><text x="2.2455%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;u8&gt;&gt; (8 samples, 0.03%)</title><rect x="1.9955%" y="565" width="0.0303%" height="15" fill="rgb(239,167,4)" fg:x="527" fg:w="8"/><text x="2.2455%" y="575.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="1.9955%" y="549" width="0.0303%" height="15" fill="rgb(209,217,16)" fg:x="527" fg:w="8"/><text x="2.2455%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u8,alloc::alloc::Global&gt;&gt; (4 samples, 0.02%)</title><rect x="2.0106%" y="533" width="0.0151%" height="15" fill="rgb(219,88,35)" fg:x="531" fg:w="4"/><text x="2.2606%" y="543.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="2.0106%" y="517" width="0.0151%" height="15" fill="rgb(220,193,23)" fg:x="531" fg:w="4"/><text x="2.2606%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.02%)</title><rect x="2.0106%" y="501" width="0.0151%" height="15" fill="rgb(230,90,52)" fg:x="531" fg:w="4"/><text x="2.2606%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="2.0106%" y="485" width="0.0151%" height="15" fill="rgb(252,106,19)" fg:x="531" fg:w="4"/><text x="2.2606%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.01%)</title><rect x="2.0144%" y="469" width="0.0114%" height="15" fill="rgb(206,74,20)" fg:x="532" fg:w="3"/><text x="2.2644%" y="479.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (59 samples, 0.22%)</title><rect x="2.3703%" y="405" width="0.2234%" height="15" fill="rgb(230,138,44)" fg:x="626" fg:w="59"/><text x="2.6203%" y="415.50"></text></g><g><title>&lt;u8 as core::iter::range::Step&gt;::forward_unchecked (33 samples, 0.12%)</title><rect x="3.2336%" y="373" width="0.1250%" height="15" fill="rgb(235,182,43)" fg:x="854" fg:w="33"/><text x="3.4836%" y="383.50"></text></g><g><title>core::num::&lt;impl u8&gt;::unchecked_add (15 samples, 0.06%)</title><rect x="3.3018%" y="357" width="0.0568%" height="15" fill="rgb(242,16,51)" fg:x="872" fg:w="15"/><text x="3.5518%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (8 samples, 0.03%)</title><rect x="3.3624%" y="373" width="0.0303%" height="15" fill="rgb(248,9,4)" fg:x="888" fg:w="8"/><text x="3.6124%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (265 samples, 1.00%)</title><rect x="2.5975%" y="405" width="1.0034%" height="15" fill="rgb(210,31,22)" fg:x="686" fg:w="265"/><text x="2.8475%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (207 samples, 0.78%)</title><rect x="2.8171%" y="389" width="0.7838%" height="15" fill="rgb(239,54,39)" fg:x="744" fg:w="207"/><text x="3.0671%" y="399.50"></text></g><g><title>core::mem::replace (55 samples, 0.21%)</title><rect x="3.3927%" y="373" width="0.2083%" height="15" fill="rgb(230,99,41)" fg:x="896" fg:w="55"/><text x="3.6427%" y="383.50"></text></g><g><title>core::ptr::read (23 samples, 0.09%)</title><rect x="3.5138%" y="357" width="0.0871%" height="15" fill="rgb(253,106,12)" fg:x="928" fg:w="23"/><text x="3.7638%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (847 samples, 3.21%)</title><rect x="2.0409%" y="421" width="3.2071%" height="15" fill="rgb(213,46,41)" fg:x="539" fg:w="847"/><text x="2.2909%" y="431.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (435 samples, 1.65%)</title><rect x="3.6009%" y="405" width="1.6471%" height="15" fill="rgb(215,133,35)" fg:x="951" fg:w="435"/><text x="3.8509%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (350 samples, 1.33%)</title><rect x="3.9228%" y="389" width="1.3253%" height="15" fill="rgb(213,28,5)" fg:x="1036" fg:w="350"/><text x="4.1728%" y="399.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::items::{{closure}} (288 samples, 1.09%)</title><rect x="4.1575%" y="373" width="1.0905%" height="15" fill="rgb(215,77,49)" fg:x="1098" fg:w="288"/><text x="4.4075%" y="383.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::contains (265 samples, 1.00%)</title><rect x="4.2446%" y="357" width="1.0034%" height="15" fill="rgb(248,100,22)" fg:x="1121" fg:w="265"/><text x="4.4946%" y="367.50"></text></g><g><title>core::num::&lt;impl u128&gt;::pow (221 samples, 0.84%)</title><rect x="4.4112%" y="341" width="0.8368%" height="15" fill="rgb(208,67,9)" fg:x="1165" fg:w="221"/><text x="4.6612%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (850 samples, 3.22%)</title><rect x="2.0333%" y="485" width="3.2185%" height="15" fill="rgb(219,133,21)" fg:x="537" fg:w="850"/><text x="2.2833%" y="495.50">&lt;al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (850 samples, 3.22%)</title><rect x="2.0333%" y="469" width="3.2185%" height="15" fill="rgb(246,46,29)" fg:x="537" fg:w="850"/><text x="2.2833%" y="479.50">all..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (849 samples, 3.21%)</title><rect x="2.0371%" y="453" width="3.2147%" height="15" fill="rgb(246,185,52)" fg:x="538" fg:w="849"/><text x="2.2871%" y="463.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::find (849 samples, 3.21%)</title><rect x="2.0371%" y="437" width="3.2147%" height="15" fill="rgb(252,136,11)" fg:x="538" fg:w="849"/><text x="2.2871%" y="447.50">cor..</text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (30 samples, 0.11%)</title><rect x="5.4638%" y="437" width="0.1136%" height="15" fill="rgb(219,138,53)" fg:x="1443" fg:w="30"/><text x="5.7138%" y="447.50"></text></g><g><title>&lt;u8 as core::iter::range::Step&gt;::forward_unchecked (21 samples, 0.08%)</title><rect x="5.9106%" y="405" width="0.0795%" height="15" fill="rgb(211,51,23)" fg:x="1561" fg:w="21"/><text x="6.1606%" y="415.50"></text></g><g><title>core::num::&lt;impl u8&gt;::unchecked_add (11 samples, 0.04%)</title><rect x="5.9485%" y="389" width="0.0417%" height="15" fill="rgb(247,221,28)" fg:x="1571" fg:w="11"/><text x="6.1985%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (3 samples, 0.01%)</title><rect x="5.9939%" y="405" width="0.0114%" height="15" fill="rgb(251,222,45)" fg:x="1583" fg:w="3"/><text x="6.2439%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (147 samples, 0.56%)</title><rect x="5.5774%" y="437" width="0.5566%" height="15" fill="rgb(217,162,53)" fg:x="1473" fg:w="147"/><text x="5.8274%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (126 samples, 0.48%)</title><rect x="5.6569%" y="421" width="0.4771%" height="15" fill="rgb(229,93,14)" fg:x="1494" fg:w="126"/><text x="5.9069%" y="431.50"></text></g><g><title>core::mem::replace (34 samples, 0.13%)</title><rect x="6.0053%" y="405" width="0.1287%" height="15" fill="rgb(209,67,49)" fg:x="1586" fg:w="34"/><text x="6.2553%" y="415.50"></text></g><g><title>core::ptr::read (14 samples, 0.05%)</title><rect x="6.0810%" y="389" width="0.0530%" height="15" fill="rgb(213,87,29)" fg:x="1606" fg:w="14"/><text x="6.3310%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (460 samples, 1.74%)</title><rect x="5.2518%" y="453" width="1.7418%" height="15" fill="rgb(205,151,52)" fg:x="1387" fg:w="460"/><text x="5.5018%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (227 samples, 0.86%)</title><rect x="6.1340%" y="437" width="0.8595%" height="15" fill="rgb(253,215,39)" fg:x="1620" fg:w="227"/><text x="6.3840%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (180 samples, 0.68%)</title><rect x="6.3120%" y="421" width="0.6816%" height="15" fill="rgb(221,220,41)" fg:x="1667" fg:w="180"/><text x="6.5620%" y="431.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::items::{{closure}} (138 samples, 0.52%)</title><rect x="6.4710%" y="405" width="0.5225%" height="15" fill="rgb(218,133,21)" fg:x="1709" fg:w="138"/><text x="6.7210%" y="415.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::contains (127 samples, 0.48%)</title><rect x="6.5127%" y="389" width="0.4809%" height="15" fill="rgb(221,193,43)" fg:x="1720" fg:w="127"/><text x="6.7627%" y="399.50"></text></g><g><title>core::num::&lt;impl u128&gt;::pow (109 samples, 0.41%)</title><rect x="6.5808%" y="373" width="0.4127%" height="15" fill="rgb(240,128,52)" fg:x="1738" fg:w="109"/><text x="6.8308%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (461 samples, 1.75%)</title><rect x="5.2518%" y="485" width="1.7456%" height="15" fill="rgb(253,114,12)" fg:x="1387" fg:w="461"/><text x="5.5018%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (461 samples, 1.75%)</title><rect x="5.2518%" y="469" width="1.7456%" height="15" fill="rgb(215,223,47)" fg:x="1387" fg:w="461"/><text x="5.5018%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (4 samples, 0.02%)</title><rect x="6.9973%" y="485" width="0.0151%" height="15" fill="rgb(248,225,23)" fg:x="1848" fg:w="4"/><text x="7.2473%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (3 samples, 0.01%)</title><rect x="7.0011%" y="469" width="0.0114%" height="15" fill="rgb(250,108,0)" fg:x="1849" fg:w="3"/><text x="7.2511%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,322 samples, 5.01%)</title><rect x="2.0257%" y="549" width="5.0057%" height="15" fill="rgb(228,208,7)" fg:x="535" fg:w="1322"/><text x="2.2757%" y="559.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,322 samples, 5.01%)</title><rect x="2.0257%" y="533" width="5.0057%" height="15" fill="rgb(244,45,10)" fg:x="535" fg:w="1322"/><text x="2.2757%" y="543.50">&lt;alloc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,320 samples, 5.00%)</title><rect x="2.0333%" y="517" width="4.9981%" height="15" fill="rgb(207,125,25)" fg:x="537" fg:w="1320"/><text x="2.2833%" y="527.50">&lt;alloc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,320 samples, 5.00%)</title><rect x="2.0333%" y="501" width="4.9981%" height="15" fill="rgb(210,195,18)" fg:x="537" fg:w="1320"/><text x="2.2833%" y="511.50">&lt;alloc..</text></g><g><title>wfc::wfc::bits256_set::Bits256Set::items (1,323 samples, 5.01%)</title><rect x="2.0257%" y="565" width="5.0095%" height="15" fill="rgb(249,80,12)" fg:x="535" fg:w="1323"/><text x="2.2757%" y="575.50">wfc::w..</text></g><g><title>wfc::wfc::vec3d::Vec3D&lt;T&gt;::get (5 samples, 0.02%)</title><rect x="7.0352%" y="565" width="0.0189%" height="15" fill="rgb(221,65,9)" fg:x="1858" fg:w="5"/><text x="7.2852%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.01%)</title><rect x="7.0428%" y="549" width="0.0114%" height="15" fill="rgb(235,49,36)" fg:x="1860" fg:w="3"/><text x="7.2928%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.01%)</title><rect x="7.0428%" y="533" width="0.0114%" height="15" fill="rgb(225,32,20)" fg:x="1860" fg:w="3"/><text x="7.2928%" y="543.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset_fibheap::QueuePropBitArraySetFibHeap::format_solution (1,347 samples, 5.10%)</title><rect x="1.9614%" y="581" width="5.1003%" height="15" fill="rgb(215,141,46)" fg:x="518" fg:w="1347"/><text x="2.2114%" y="591.50">wfc::w..</text></g><g><title>wfc::wfc::fib_heap::FibHeap::insert (5 samples, 0.02%)</title><rect x="7.0617%" y="565" width="0.0189%" height="15" fill="rgb(250,160,47)" fg:x="1865" fg:w="5"/><text x="7.3117%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (4 samples, 0.02%)</title><rect x="7.0655%" y="549" width="0.0151%" height="15" fill="rgb(216,222,40)" fg:x="1866" fg:w="4"/><text x="7.3155%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.02%)</title><rect x="7.0655%" y="533" width="0.0151%" height="15" fill="rgb(234,217,39)" fg:x="1866" fg:w="4"/><text x="7.3155%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.01%)</title><rect x="7.0693%" y="517" width="0.0114%" height="15" fill="rgb(207,178,40)" fg:x="1867" fg:w="3"/><text x="7.3193%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="7.0693%" y="501" width="0.0114%" height="15" fill="rgb(221,136,13)" fg:x="1867" fg:w="3"/><text x="7.3193%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.01%)</title><rect x="7.0693%" y="485" width="0.0114%" height="15" fill="rgb(249,199,10)" fg:x="1867" fg:w="3"/><text x="7.3193%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (3 samples, 0.01%)</title><rect x="7.0693%" y="469" width="0.0114%" height="15" fill="rgb(249,222,13)" fg:x="1867" fg:w="3"/><text x="7.3193%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (3 samples, 0.01%)</title><rect x="7.0693%" y="453" width="0.0114%" height="15" fill="rgb(244,185,38)" fg:x="1867" fg:w="3"/><text x="7.3193%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (3 samples, 0.01%)</title><rect x="7.0693%" y="437" width="0.0114%" height="15" fill="rgb(236,202,9)" fg:x="1867" fg:w="3"/><text x="7.3193%" y="447.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (3 samples, 0.01%)</title><rect x="7.0693%" y="421" width="0.0114%" height="15" fill="rgb(250,229,37)" fg:x="1867" fg:w="3"/><text x="7.3193%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.01%)</title><rect x="7.0693%" y="405" width="0.0114%" height="15" fill="rgb(206,174,23)" fg:x="1867" fg:w="3"/><text x="7.3193%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="7.0693%" y="389" width="0.0114%" height="15" fill="rgb(211,33,43)" fg:x="1867" fg:w="3"/><text x="7.3193%" y="399.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset_fibheap::QueuePropBitArraySetFibHeap::prepare_map (6 samples, 0.02%)</title><rect x="7.0617%" y="581" width="0.0227%" height="15" fill="rgb(245,58,50)" fg:x="1865" fg:w="6"/><text x="7.3117%" y="591.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (3 samples, 0.01%)</title><rect x="7.0920%" y="565" width="0.0114%" height="15" fill="rgb(244,68,36)" fg:x="1873" fg:w="3"/><text x="7.3420%" y="575.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (3 samples, 0.01%)</title><rect x="7.1034%" y="565" width="0.0114%" height="15" fill="rgb(232,229,15)" fg:x="1876" fg:w="3"/><text x="7.3534%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (4 samples, 0.02%)</title><rect x="7.1299%" y="517" width="0.0151%" height="15" fill="rgb(254,30,23)" fg:x="1883" fg:w="4"/><text x="7.3799%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (3 samples, 0.01%)</title><rect x="7.1337%" y="501" width="0.0114%" height="15" fill="rgb(235,160,14)" fg:x="1884" fg:w="3"/><text x="7.3837%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="7.1337%" y="485" width="0.0114%" height="15" fill="rgb(212,155,44)" fg:x="1884" fg:w="3"/><text x="7.3837%" y="495.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (6 samples, 0.02%)</title><rect x="7.1261%" y="549" width="0.0227%" height="15" fill="rgb(226,2,50)" fg:x="1882" fg:w="6"/><text x="7.3761%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (5 samples, 0.02%)</title><rect x="7.1299%" y="533" width="0.0189%" height="15" fill="rgb(234,177,6)" fg:x="1883" fg:w="5"/><text x="7.3799%" y="543.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (14 samples, 0.05%)</title><rect x="7.1147%" y="565" width="0.0530%" height="15" fill="rgb(217,24,9)" fg:x="1879" fg:w="14"/><text x="7.3647%" y="575.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (3 samples, 0.01%)</title><rect x="7.1564%" y="549" width="0.0114%" height="15" fill="rgb(220,13,46)" fg:x="1890" fg:w="3"/><text x="7.4064%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.02%)</title><rect x="7.2056%" y="501" width="0.0189%" height="15" fill="rgb(239,221,27)" fg:x="1903" fg:w="5"/><text x="7.4556%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="7.2056%" y="485" width="0.0189%" height="15" fill="rgb(222,198,25)" fg:x="1903" fg:w="5"/><text x="7.4556%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.01%)</title><rect x="7.2132%" y="469" width="0.0114%" height="15" fill="rgb(211,99,13)" fg:x="1905" fg:w="3"/><text x="7.4632%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B,C)&gt;::hash (3 samples, 0.01%)</title><rect x="7.2132%" y="453" width="0.0114%" height="15" fill="rgb(232,111,31)" fg:x="1905" fg:w="3"/><text x="7.4632%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.01%)</title><rect x="7.2132%" y="437" width="0.0114%" height="15" fill="rgb(245,82,37)" fg:x="1905" fg:w="3"/><text x="7.4632%" y="447.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.01%)</title><rect x="7.2132%" y="421" width="0.0114%" height="15" fill="rgb(227,149,46)" fg:x="1905" fg:w="3"/><text x="7.4632%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="7.2132%" y="405" width="0.0114%" height="15" fill="rgb(218,36,50)" fg:x="1905" fg:w="3"/><text x="7.4632%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="7.2132%" y="389" width="0.0114%" height="15" fill="rgb(226,80,48)" fg:x="1905" fg:w="3"/><text x="7.4632%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="7.2132%" y="373" width="0.0114%" height="15" fill="rgb(238,224,15)" fg:x="1905" fg:w="3"/><text x="7.4632%" y="383.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.02%)</title><rect x="7.2283%" y="437" width="0.0227%" height="15" fill="rgb(241,136,10)" fg:x="1909" fg:w="6"/><text x="7.4783%" y="447.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (V,U,T)&gt;::eq (6 samples, 0.02%)</title><rect x="7.2283%" y="421" width="0.0227%" height="15" fill="rgb(208,32,45)" fg:x="1909" fg:w="6"/><text x="7.4783%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (6 samples, 0.02%)</title><rect x="7.2283%" y="405" width="0.0227%" height="15" fill="rgb(207,135,9)" fg:x="1909" fg:w="6"/><text x="7.4783%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (7 samples, 0.03%)</title><rect x="7.2283%" y="453" width="0.0265%" height="15" fill="rgb(206,86,44)" fg:x="1909" fg:w="7"/><text x="7.4783%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (4 samples, 0.02%)</title><rect x="7.2548%" y="453" width="0.0151%" height="15" fill="rgb(245,177,15)" fg:x="1916" fg:w="4"/><text x="7.5048%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4 samples, 0.02%)</title><rect x="7.2548%" y="437" width="0.0151%" height="15" fill="rgb(206,64,50)" fg:x="1916" fg:w="4"/><text x="7.5048%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="7.2548%" y="421" width="0.0151%" height="15" fill="rgb(234,36,40)" fg:x="1916" fg:w="4"/><text x="7.5048%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (18 samples, 0.07%)</title><rect x="7.2056%" y="549" width="0.0682%" height="15" fill="rgb(213,64,8)" fg:x="1903" fg:w="18"/><text x="7.4556%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (18 samples, 0.07%)</title><rect x="7.2056%" y="533" width="0.0682%" height="15" fill="rgb(210,75,36)" fg:x="1903" fg:w="18"/><text x="7.4556%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (18 samples, 0.07%)</title><rect x="7.2056%" y="517" width="0.0682%" height="15" fill="rgb(229,88,21)" fg:x="1903" fg:w="18"/><text x="7.4556%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.05%)</title><rect x="7.2245%" y="501" width="0.0492%" height="15" fill="rgb(252,204,47)" fg:x="1908" fg:w="13"/><text x="7.4745%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.05%)</title><rect x="7.2245%" y="485" width="0.0492%" height="15" fill="rgb(208,77,27)" fg:x="1908" fg:w="13"/><text x="7.4745%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (13 samples, 0.05%)</title><rect x="7.2245%" y="469" width="0.0492%" height="15" fill="rgb(221,76,26)" fg:x="1908" fg:w="13"/><text x="7.4745%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;wfc::wfc::fib_heap::FibHeapNode&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="7.2927%" y="517" width="0.0151%" height="15" fill="rgb(225,139,18)" fg:x="1926" fg:w="4"/><text x="7.5427%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="7.2927%" y="501" width="0.0151%" height="15" fill="rgb(230,137,11)" fg:x="1926" fg:w="4"/><text x="7.5427%" y="511.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (4 samples, 0.02%)</title><rect x="7.2927%" y="485" width="0.0151%" height="15" fill="rgb(212,28,1)" fg:x="1926" fg:w="4"/><text x="7.5427%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.01%)</title><rect x="7.2965%" y="469" width="0.0114%" height="15" fill="rgb(248,164,17)" fg:x="1927" fg:w="3"/><text x="7.5465%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.01%)</title><rect x="7.2965%" y="453" width="0.0114%" height="15" fill="rgb(222,171,42)" fg:x="1927" fg:w="3"/><text x="7.5465%" y="463.50"></text></g><g><title>core::mem::replace (3 samples, 0.01%)</title><rect x="7.2965%" y="437" width="0.0114%" height="15" fill="rgb(243,84,45)" fg:x="1927" fg:w="3"/><text x="7.5465%" y="447.50"></text></g><g><title>wfc::wfc::fib_heap::FibHeap::cascade_cut (6 samples, 0.02%)</title><rect x="7.2889%" y="533" width="0.0227%" height="15" fill="rgb(252,49,23)" fg:x="1925" fg:w="6"/><text x="7.5389%" y="543.50"></text></g><g><title>wfc::wfc::fib_heap::FibHeap::cascade_cut (13 samples, 0.05%)</title><rect x="7.2738%" y="549" width="0.0492%" height="15" fill="rgb(215,19,7)" fg:x="1921" fg:w="13"/><text x="7.5238%" y="559.50"></text></g><g><title>wfc::wfc::fib_heap::FibHeap::cut (3 samples, 0.01%)</title><rect x="7.3116%" y="533" width="0.0114%" height="15" fill="rgb(238,81,41)" fg:x="1931" fg:w="3"/><text x="7.5616%" y="543.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (3 samples, 0.01%)</title><rect x="7.3230%" y="501" width="0.0114%" height="15" fill="rgb(210,199,37)" fg:x="1934" fg:w="3"/><text x="7.5730%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (4 samples, 0.02%)</title><rect x="7.3230%" y="533" width="0.0151%" height="15" fill="rgb(244,192,49)" fg:x="1934" fg:w="4"/><text x="7.5730%" y="543.50"></text></g><g><title>wfc::wfc::fib_heap::FibHeap::cut::{{closure}} (4 samples, 0.02%)</title><rect x="7.3230%" y="517" width="0.0151%" height="15" fill="rgb(226,211,11)" fg:x="1934" fg:w="4"/><text x="7.5730%" y="527.50"></text></g><g><title>wfc::wfc::fib_heap::FibHeap::decrease_key (45 samples, 0.17%)</title><rect x="7.1753%" y="565" width="0.1704%" height="15" fill="rgb(236,162,54)" fg:x="1895" fg:w="45"/><text x="7.4253%" y="575.50"></text></g><g><title>wfc::wfc::fib_heap::FibHeap::cut (6 samples, 0.02%)</title><rect x="7.3230%" y="549" width="0.0227%" height="15" fill="rgb(220,229,9)" fg:x="1934" fg:w="6"/><text x="7.5730%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.02%)</title><rect x="7.3684%" y="549" width="0.0227%" height="15" fill="rgb(250,87,22)" fg:x="1946" fg:w="6"/><text x="7.6184%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (6 samples, 0.02%)</title><rect x="7.3684%" y="533" width="0.0227%" height="15" fill="rgb(239,43,17)" fg:x="1946" fg:w="6"/><text x="7.6184%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (6 samples, 0.02%)</title><rect x="7.3684%" y="517" width="0.0227%" height="15" fill="rgb(231,177,25)" fg:x="1946" fg:w="6"/><text x="7.6184%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="7.3798%" y="501" width="0.0114%" height="15" fill="rgb(219,179,1)" fg:x="1949" fg:w="3"/><text x="7.6298%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="7.3798%" y="485" width="0.0114%" height="15" fill="rgb(238,219,53)" fg:x="1949" fg:w="3"/><text x="7.6298%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="7.3987%" y="469" width="0.0114%" height="15" fill="rgb(232,167,36)" fg:x="1954" fg:w="3"/><text x="7.6487%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.02%)</title><rect x="7.3911%" y="549" width="0.0227%" height="15" fill="rgb(244,19,51)" fg:x="1952" fg:w="6"/><text x="7.6411%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.02%)</title><rect x="7.3911%" y="533" width="0.0227%" height="15" fill="rgb(224,6,22)" fg:x="1952" fg:w="6"/><text x="7.6411%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="7.3911%" y="517" width="0.0227%" height="15" fill="rgb(224,145,5)" fg:x="1952" fg:w="6"/><text x="7.6411%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="7.3987%" y="501" width="0.0151%" height="15" fill="rgb(234,130,49)" fg:x="1954" fg:w="4"/><text x="7.6487%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (4 samples, 0.02%)</title><rect x="7.3987%" y="485" width="0.0151%" height="15" fill="rgb(254,6,2)" fg:x="1954" fg:w="4"/><text x="7.6487%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (5 samples, 0.02%)</title><rect x="7.4139%" y="549" width="0.0189%" height="15" fill="rgb(208,96,46)" fg:x="1958" fg:w="5"/><text x="7.6639%" y="559.50"></text></g><g><title>alloc::slice::hack::into_vec (4 samples, 0.02%)</title><rect x="7.4176%" y="533" width="0.0151%" height="15" fill="rgb(239,3,39)" fg:x="1959" fg:w="4"/><text x="7.6676%" y="543.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (7 samples, 0.03%)</title><rect x="7.4707%" y="517" width="0.0265%" height="15" fill="rgb(233,210,1)" fg:x="1973" fg:w="7"/><text x="7.7207%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (5 samples, 0.02%)</title><rect x="7.5842%" y="453" width="0.0189%" height="15" fill="rgb(244,137,37)" fg:x="2003" fg:w="5"/><text x="7.8342%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (11 samples, 0.04%)</title><rect x="7.5653%" y="469" width="0.0417%" height="15" fill="rgb(240,136,2)" fg:x="1998" fg:w="11"/><text x="7.8153%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (12 samples, 0.05%)</title><rect x="7.6183%" y="437" width="0.0454%" height="15" fill="rgb(239,18,37)" fg:x="2012" fg:w="12"/><text x="7.8683%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (17 samples, 0.06%)</title><rect x="7.6070%" y="469" width="0.0644%" height="15" fill="rgb(218,185,22)" fg:x="2009" fg:w="17"/><text x="7.8570%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (17 samples, 0.06%)</title><rect x="7.6070%" y="453" width="0.0644%" height="15" fill="rgb(225,218,4)" fg:x="2009" fg:w="17"/><text x="7.8570%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.03%)</title><rect x="7.6713%" y="469" width="0.0265%" height="15" fill="rgb(230,182,32)" fg:x="2026" fg:w="7"/><text x="7.9213%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="7.6751%" y="453" width="0.0227%" height="15" fill="rgb(242,56,43)" fg:x="2027" fg:w="6"/><text x="7.9251%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (4 samples, 0.02%)</title><rect x="7.6827%" y="437" width="0.0151%" height="15" fill="rgb(233,99,24)" fg:x="2029" fg:w="4"/><text x="7.9327%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold (3 samples, 0.01%)</title><rect x="7.7130%" y="437" width="0.0114%" height="15" fill="rgb(234,209,42)" fg:x="2037" fg:w="3"/><text x="7.9630%" y="447.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (6 samples, 0.02%)</title><rect x="10.0114%" y="389" width="0.0227%" height="15" fill="rgb(227,7,12)" fg:x="2644" fg:w="6"/><text x="10.2614%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (6 samples, 0.02%)</title><rect x="10.0114%" y="373" width="0.0227%" height="15" fill="rgb(245,203,43)" fg:x="2644" fg:w="6"/><text x="10.2614%" y="383.50"></text></g><g><title>irq_exit_rcu (6 samples, 0.02%)</title><rect x="10.0114%" y="357" width="0.0227%" height="15" fill="rgb(238,205,33)" fg:x="2644" fg:w="6"/><text x="10.2614%" y="367.50"></text></g><g><title>__softirqentry_text_start (6 samples, 0.02%)</title><rect x="10.0114%" y="341" width="0.0227%" height="15" fill="rgb(231,56,7)" fg:x="2644" fg:w="6"/><text x="10.2614%" y="351.50"></text></g><g><title>run_timer_softirq (6 samples, 0.02%)</title><rect x="10.0114%" y="325" width="0.0227%" height="15" fill="rgb(244,186,29)" fg:x="2644" fg:w="6"/><text x="10.2614%" y="335.50"></text></g><g><title>__run_timers.part.0 (6 samples, 0.02%)</title><rect x="10.0114%" y="309" width="0.0227%" height="15" fill="rgb(234,111,31)" fg:x="2644" fg:w="6"/><text x="10.2614%" y="319.50"></text></g><g><title>call_timer_fn (6 samples, 0.02%)</title><rect x="10.0114%" y="293" width="0.0227%" height="15" fill="rgb(241,149,10)" fg:x="2644" fg:w="6"/><text x="10.2614%" y="303.50"></text></g><g><title>vbg_heartbeat_timer (6 samples, 0.02%)</title><rect x="10.0114%" y="277" width="0.0227%" height="15" fill="rgb(249,206,44)" fg:x="2644" fg:w="6"/><text x="10.2614%" y="287.50"></text></g><g><title>vbg_req_perform (6 samples, 0.02%)</title><rect x="10.0114%" y="261" width="0.0227%" height="15" fill="rgb(251,153,30)" fg:x="2644" fg:w="6"/><text x="10.2614%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (73 samples, 0.28%)</title><rect x="10.0341%" y="389" width="0.2764%" height="15" fill="rgb(239,152,38)" fg:x="2650" fg:w="73"/><text x="10.2841%" y="399.50"></text></g><g><title>core::ptr::invalid (48 samples, 0.18%)</title><rect x="10.3976%" y="373" width="0.1817%" height="15" fill="rgb(249,139,47)" fg:x="2746" fg:w="48"/><text x="10.6476%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (531 samples, 2.01%)</title><rect x="8.6558%" y="405" width="2.0106%" height="15" fill="rgb(244,64,35)" fg:x="2286" fg:w="531"/><text x="8.9058%" y="415.50">c..</text></g><g><title>core::ptr::null (94 samples, 0.36%)</title><rect x="10.3105%" y="389" width="0.3559%" height="15" fill="rgb(216,46,15)" fg:x="2723" fg:w="94"/><text x="10.5605%" y="399.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (23 samples, 0.09%)</title><rect x="10.5793%" y="373" width="0.0871%" height="15" fill="rgb(250,74,19)" fg:x="2794" fg:w="23"/><text x="10.8293%" y="383.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="12.1772%" y="389" width="0.0114%" height="15" fill="rgb(249,42,33)" fg:x="3216" fg:w="3"/><text x="12.4272%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="12.1772%" y="373" width="0.0114%" height="15" fill="rgb(242,149,17)" fg:x="3216" fg:w="3"/><text x="12.4272%" y="383.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.01%)</title><rect x="12.1772%" y="357" width="0.0114%" height="15" fill="rgb(244,29,21)" fg:x="3216" fg:w="3"/><text x="12.4272%" y="367.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.01%)</title><rect x="12.1772%" y="341" width="0.0114%" height="15" fill="rgb(220,130,37)" fg:x="3216" fg:w="3"/><text x="12.4272%" y="351.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="13.1844%" y="373" width="0.0114%" height="15" fill="rgb(211,67,2)" fg:x="3482" fg:w="3"/><text x="13.4344%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="13.1844%" y="357" width="0.0114%" height="15" fill="rgb(235,68,52)" fg:x="3482" fg:w="3"/><text x="13.4344%" y="367.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.01%)</title><rect x="13.1844%" y="341" width="0.0114%" height="15" fill="rgb(246,142,3)" fg:x="3482" fg:w="3"/><text x="13.4344%" y="351.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.01%)</title><rect x="13.1844%" y="325" width="0.0114%" height="15" fill="rgb(241,25,7)" fg:x="3482" fg:w="3"/><text x="13.4344%" y="335.50"></text></g><g><title>run_timer_softirq (3 samples, 0.01%)</title><rect x="13.1844%" y="309" width="0.0114%" height="15" fill="rgb(242,119,39)" fg:x="3482" fg:w="3"/><text x="13.4344%" y="319.50"></text></g><g><title>__run_timers.part.0 (3 samples, 0.01%)</title><rect x="13.1844%" y="293" width="0.0114%" height="15" fill="rgb(241,98,45)" fg:x="3482" fg:w="3"/><text x="13.4344%" y="303.50"></text></g><g><title>call_timer_fn (3 samples, 0.01%)</title><rect x="13.1844%" y="277" width="0.0114%" height="15" fill="rgb(254,28,30)" fg:x="3482" fg:w="3"/><text x="13.4344%" y="287.50"></text></g><g><title>vbg_heartbeat_timer (3 samples, 0.01%)</title><rect x="13.1844%" y="261" width="0.0114%" height="15" fill="rgb(241,142,54)" fg:x="3482" fg:w="3"/><text x="13.4344%" y="271.50"></text></g><g><title>vbg_req_perform (3 samples, 0.01%)</title><rect x="13.1844%" y="245" width="0.0114%" height="15" fill="rgb(222,85,15)" fg:x="3482" fg:w="3"/><text x="13.4344%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (486 samples, 1.84%)</title><rect x="12.1886%" y="389" width="1.8402%" height="15" fill="rgb(210,85,47)" fg:x="3219" fg:w="486"/><text x="12.4386%" y="399.50">c..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (220 samples, 0.83%)</title><rect x="13.1958%" y="373" width="0.8330%" height="15" fill="rgb(224,206,25)" fg:x="3485" fg:w="220"/><text x="13.4458%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (972 samples, 3.68%)</title><rect x="10.6664%" y="405" width="3.6804%" height="15" fill="rgb(243,201,19)" fg:x="2817" fg:w="972"/><text x="10.9164%" y="415.50">core..</text></g><g><title>core::ptr::null_mut (84 samples, 0.32%)</title><rect x="14.0288%" y="389" width="0.3181%" height="15" fill="rgb(236,59,4)" fg:x="3705" fg:w="84"/><text x="14.2788%" y="399.50"></text></g><g><title>core::ptr::invalid_mut (57 samples, 0.22%)</title><rect x="14.1310%" y="373" width="0.2158%" height="15" fill="rgb(254,179,45)" fg:x="3732" fg:w="57"/><text x="14.3810%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,758 samples, 6.66%)</title><rect x="7.8076%" y="421" width="6.6566%" height="15" fill="rgb(226,14,10)" fg:x="2062" fg:w="1758"/><text x="8.0576%" y="431.50">&lt;core::sl..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (31 samples, 0.12%)</title><rect x="14.3468%" y="405" width="0.1174%" height="15" fill="rgb(244,27,41)" fg:x="3789" fg:w="31"/><text x="14.5968%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (16 samples, 0.06%)</title><rect x="14.4036%" y="389" width="0.0606%" height="15" fill="rgb(235,35,32)" fg:x="3804" fg:w="16"/><text x="14.6536%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (12 samples, 0.05%)</title><rect x="14.4188%" y="373" width="0.0454%" height="15" fill="rgb(218,68,31)" fg:x="3808" fg:w="12"/><text x="14.6688%" y="383.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="15.6645%" y="405" width="0.0114%" height="15" fill="rgb(207,120,37)" fg:x="4137" fg:w="3"/><text x="15.9145%" y="415.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="15.6645%" y="389" width="0.0114%" height="15" fill="rgb(227,98,0)" fg:x="4137" fg:w="3"/><text x="15.9145%" y="399.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.01%)</title><rect x="15.6645%" y="373" width="0.0114%" height="15" fill="rgb(207,7,3)" fg:x="4137" fg:w="3"/><text x="15.9145%" y="383.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.01%)</title><rect x="15.6645%" y="357" width="0.0114%" height="15" fill="rgb(206,98,19)" fg:x="4137" fg:w="3"/><text x="15.9145%" y="367.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="17.5842%" y="373" width="0.0114%" height="15" fill="rgb(217,5,26)" fg:x="4644" fg:w="3"/><text x="17.8342%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="17.5842%" y="357" width="0.0114%" height="15" fill="rgb(235,190,38)" fg:x="4644" fg:w="3"/><text x="17.8342%" y="367.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.01%)</title><rect x="17.5842%" y="341" width="0.0114%" height="15" fill="rgb(247,86,24)" fg:x="4644" fg:w="3"/><text x="17.8342%" y="351.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.01%)</title><rect x="17.5842%" y="325" width="0.0114%" height="15" fill="rgb(205,101,16)" fg:x="4644" fg:w="3"/><text x="17.8342%" y="335.50"></text></g><g><title>run_timer_softirq (3 samples, 0.01%)</title><rect x="17.5842%" y="309" width="0.0114%" height="15" fill="rgb(246,168,33)" fg:x="4644" fg:w="3"/><text x="17.8342%" y="319.50"></text></g><g><title>__run_timers.part.0 (3 samples, 0.01%)</title><rect x="17.5842%" y="293" width="0.0114%" height="15" fill="rgb(231,114,1)" fg:x="4644" fg:w="3"/><text x="17.8342%" y="303.50"></text></g><g><title>call_timer_fn (3 samples, 0.01%)</title><rect x="17.5842%" y="277" width="0.0114%" height="15" fill="rgb(207,184,53)" fg:x="4644" fg:w="3"/><text x="17.8342%" y="287.50"></text></g><g><title>vbg_heartbeat_timer (3 samples, 0.01%)</title><rect x="17.5842%" y="261" width="0.0114%" height="15" fill="rgb(224,95,51)" fg:x="4644" fg:w="3"/><text x="17.8342%" y="271.50"></text></g><g><title>vbg_req_perform (3 samples, 0.01%)</title><rect x="17.5842%" y="245" width="0.0114%" height="15" fill="rgb(212,188,45)" fg:x="4644" fg:w="3"/><text x="17.8342%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (14 samples, 0.05%)</title><rect x="17.5956%" y="373" width="0.0530%" height="15" fill="rgb(223,154,38)" fg:x="4647" fg:w="14"/><text x="17.8456%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (14 samples, 0.05%)</title><rect x="17.5956%" y="357" width="0.0530%" height="15" fill="rgb(251,22,52)" fg:x="4647" fg:w="14"/><text x="17.8456%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (321 samples, 1.22%)</title><rect x="16.6944%" y="389" width="1.2154%" height="15" fill="rgb(229,209,22)" fg:x="4409" fg:w="321"/><text x="16.9444%" y="399.50"></text></g><g><title>core::ptr::write (69 samples, 0.26%)</title><rect x="17.6486%" y="373" width="0.2613%" height="15" fill="rgb(234,138,34)" fg:x="4661" fg:w="69"/><text x="17.8986%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (593 samples, 2.25%)</title><rect x="15.6759%" y="405" width="2.2454%" height="15" fill="rgb(212,95,11)" fg:x="4140" fg:w="593"/><text x="15.9259%" y="415.50">c..</text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="17.9099%" y="389" width="0.0114%" height="15" fill="rgb(240,179,47)" fg:x="4730" fg:w="3"/><text x="18.1599%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="17.9099%" y="373" width="0.0114%" height="15" fill="rgb(240,163,11)" fg:x="4730" fg:w="3"/><text x="18.1599%" y="383.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.01%)</title><rect x="17.9099%" y="357" width="0.0114%" height="15" fill="rgb(236,37,12)" fg:x="4730" fg:w="3"/><text x="18.1599%" y="367.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.01%)</title><rect x="17.9099%" y="341" width="0.0114%" height="15" fill="rgb(232,164,16)" fg:x="4730" fg:w="3"/><text x="18.1599%" y="351.50"></text></g><g><title>run_timer_softirq (3 samples, 0.01%)</title><rect x="17.9099%" y="325" width="0.0114%" height="15" fill="rgb(244,205,15)" fg:x="4730" fg:w="3"/><text x="18.1599%" y="335.50"></text></g><g><title>__run_timers.part.0 (3 samples, 0.01%)</title><rect x="17.9099%" y="309" width="0.0114%" height="15" fill="rgb(223,117,47)" fg:x="4730" fg:w="3"/><text x="18.1599%" y="319.50"></text></g><g><title>call_timer_fn (3 samples, 0.01%)</title><rect x="17.9099%" y="293" width="0.0114%" height="15" fill="rgb(244,107,35)" fg:x="4730" fg:w="3"/><text x="18.1599%" y="303.50"></text></g><g><title>vbg_heartbeat_timer (3 samples, 0.01%)</title><rect x="17.9099%" y="277" width="0.0114%" height="15" fill="rgb(205,140,8)" fg:x="4730" fg:w="3"/><text x="18.1599%" y="287.50"></text></g><g><title>vbg_req_perform (3 samples, 0.01%)</title><rect x="17.9099%" y="261" width="0.0114%" height="15" fill="rgb(228,84,46)" fg:x="4730" fg:w="3"/><text x="18.1599%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (8 samples, 0.03%)</title><rect x="19.9205%" y="341" width="0.0303%" height="15" fill="rgb(254,188,9)" fg:x="5261" fg:w="8"/><text x="20.1705%" y="351.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.02%)</title><rect x="21.3442%" y="293" width="0.0189%" height="15" fill="rgb(206,112,54)" fg:x="5637" fg:w="5"/><text x="21.5942%" y="303.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.02%)</title><rect x="21.3442%" y="277" width="0.0189%" height="15" fill="rgb(216,84,49)" fg:x="5637" fg:w="5"/><text x="21.5942%" y="287.50"></text></g><g><title>run_timer_softirq (4 samples, 0.02%)</title><rect x="21.3480%" y="261" width="0.0151%" height="15" fill="rgb(214,194,35)" fg:x="5638" fg:w="4"/><text x="21.5980%" y="271.50"></text></g><g><title>__run_timers.part.0 (4 samples, 0.02%)</title><rect x="21.3480%" y="245" width="0.0151%" height="15" fill="rgb(249,28,3)" fg:x="5638" fg:w="4"/><text x="21.5980%" y="255.50"></text></g><g><title>call_timer_fn (4 samples, 0.02%)</title><rect x="21.3480%" y="229" width="0.0151%" height="15" fill="rgb(222,56,52)" fg:x="5638" fg:w="4"/><text x="21.5980%" y="239.50"></text></g><g><title>vbg_heartbeat_timer (4 samples, 0.02%)</title><rect x="21.3480%" y="213" width="0.0151%" height="15" fill="rgb(245,217,50)" fg:x="5638" fg:w="4"/><text x="21.5980%" y="223.50"></text></g><g><title>vbg_req_perform (4 samples, 0.02%)</title><rect x="21.3480%" y="197" width="0.0151%" height="15" fill="rgb(213,201,24)" fg:x="5638" fg:w="4"/><text x="21.5980%" y="207.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (7 samples, 0.03%)</title><rect x="21.3442%" y="325" width="0.0265%" height="15" fill="rgb(248,116,28)" fg:x="5637" fg:w="7"/><text x="21.5942%" y="335.50"></text></g><g><title>sysvec_apic_timer_interrupt (7 samples, 0.03%)</title><rect x="21.3442%" y="309" width="0.0265%" height="15" fill="rgb(219,72,43)" fg:x="5637" fg:w="7"/><text x="21.5942%" y="319.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="22.3097%" y="309" width="0.0151%" height="15" fill="rgb(209,138,14)" fg:x="5892" fg:w="4"/><text x="22.5597%" y="319.50"></text></g><g><title>sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="22.3097%" y="293" width="0.0151%" height="15" fill="rgb(222,18,33)" fg:x="5892" fg:w="4"/><text x="22.5597%" y="303.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.02%)</title><rect x="22.3097%" y="277" width="0.0151%" height="15" fill="rgb(213,199,7)" fg:x="5892" fg:w="4"/><text x="22.5597%" y="287.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.02%)</title><rect x="22.3097%" y="261" width="0.0151%" height="15" fill="rgb(250,110,10)" fg:x="5892" fg:w="4"/><text x="22.5597%" y="271.50"></text></g><g><title>run_timer_softirq (3 samples, 0.01%)</title><rect x="22.3135%" y="245" width="0.0114%" height="15" fill="rgb(248,123,6)" fg:x="5893" fg:w="3"/><text x="22.5635%" y="255.50"></text></g><g><title>__run_timers.part.0 (3 samples, 0.01%)</title><rect x="22.3135%" y="229" width="0.0114%" height="15" fill="rgb(206,91,31)" fg:x="5893" fg:w="3"/><text x="22.5635%" y="239.50"></text></g><g><title>call_timer_fn (3 samples, 0.01%)</title><rect x="22.3135%" y="213" width="0.0114%" height="15" fill="rgb(211,154,13)" fg:x="5893" fg:w="3"/><text x="22.5635%" y="223.50"></text></g><g><title>vbg_heartbeat_timer (3 samples, 0.01%)</title><rect x="22.3135%" y="197" width="0.0114%" height="15" fill="rgb(225,148,7)" fg:x="5893" fg:w="3"/><text x="22.5635%" y="207.50"></text></g><g><title>vbg_req_perform (3 samples, 0.01%)</title><rect x="22.3135%" y="181" width="0.0114%" height="15" fill="rgb(220,160,43)" fg:x="5893" fg:w="3"/><text x="22.5635%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (434 samples, 1.64%)</title><rect x="21.3707%" y="325" width="1.6433%" height="15" fill="rgb(213,52,39)" fg:x="5644" fg:w="434"/><text x="21.6207%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (182 samples, 0.69%)</title><rect x="22.3249%" y="309" width="0.6891%" height="15" fill="rgb(243,137,7)" fg:x="5896" fg:w="182"/><text x="22.5749%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (916 samples, 3.47%)</title><rect x="19.8258%" y="357" width="3.4684%" height="15" fill="rgb(230,79,13)" fg:x="5236" fg:w="916"/><text x="20.0758%" y="367.50">all..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (883 samples, 3.34%)</title><rect x="19.9508%" y="341" width="3.3434%" height="15" fill="rgb(247,105,23)" fg:x="5269" fg:w="883"/><text x="20.2008%" y="351.50">cor..</text></g><g><title>core::ptr::null_mut (74 samples, 0.28%)</title><rect x="23.0140%" y="325" width="0.2802%" height="15" fill="rgb(223,179,41)" fg:x="6078" fg:w="74"/><text x="23.2640%" y="335.50"></text></g><g><title>core::ptr::invalid_mut (45 samples, 0.17%)</title><rect x="23.1238%" y="309" width="0.1704%" height="15" fill="rgb(218,9,34)" fg:x="6107" fg:w="45"/><text x="23.3738%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,118 samples, 4.23%)</title><rect x="19.1329%" y="373" width="4.2332%" height="15" fill="rgb(222,106,8)" fg:x="5053" fg:w="1118"/><text x="19.3829%" y="383.50">&lt;allo..</text></g><g><title>core::slice::raw::from_raw_parts (19 samples, 0.07%)</title><rect x="23.2942%" y="357" width="0.0719%" height="15" fill="rgb(211,220,0)" fg:x="6152" fg:w="19"/><text x="23.5442%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts (14 samples, 0.05%)</title><rect x="23.3131%" y="341" width="0.0530%" height="15" fill="rgb(229,52,16)" fg:x="6157" fg:w="14"/><text x="23.5631%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (14 samples, 0.05%)</title><rect x="23.3131%" y="325" width="0.0530%" height="15" fill="rgb(212,155,18)" fg:x="6157" fg:w="14"/><text x="23.5631%" y="335.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="23.3699%" y="373" width="0.0114%" height="15" fill="rgb(242,21,14)" fg:x="6172" fg:w="3"/><text x="23.6199%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="23.3699%" y="357" width="0.0114%" height="15" fill="rgb(222,19,48)" fg:x="6172" fg:w="3"/><text x="23.6199%" y="367.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.01%)</title><rect x="23.3699%" y="341" width="0.0114%" height="15" fill="rgb(232,45,27)" fg:x="6172" fg:w="3"/><text x="23.6199%" y="351.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.01%)</title><rect x="23.3699%" y="325" width="0.0114%" height="15" fill="rgb(249,103,42)" fg:x="6172" fg:w="3"/><text x="23.6199%" y="335.50"></text></g><g><title>run_timer_softirq (3 samples, 0.01%)</title><rect x="23.3699%" y="309" width="0.0114%" height="15" fill="rgb(246,81,33)" fg:x="6172" fg:w="3"/><text x="23.6199%" y="319.50"></text></g><g><title>__run_timers.part.0 (3 samples, 0.01%)</title><rect x="23.3699%" y="293" width="0.0114%" height="15" fill="rgb(252,33,42)" fg:x="6172" fg:w="3"/><text x="23.6199%" y="303.50"></text></g><g><title>call_timer_fn (3 samples, 0.01%)</title><rect x="23.3699%" y="277" width="0.0114%" height="15" fill="rgb(209,212,41)" fg:x="6172" fg:w="3"/><text x="23.6199%" y="287.50"></text></g><g><title>vbg_heartbeat_timer (3 samples, 0.01%)</title><rect x="23.3699%" y="261" width="0.0114%" height="15" fill="rgb(207,154,6)" fg:x="6172" fg:w="3"/><text x="23.6199%" y="271.50"></text></g><g><title>vbg_req_perform (3 samples, 0.01%)</title><rect x="23.3699%" y="245" width="0.0114%" height="15" fill="rgb(223,64,47)" fg:x="6172" fg:w="3"/><text x="23.6199%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1,644 samples, 6.22%)</title><rect x="18.1598%" y="389" width="6.2249%" height="15" fill="rgb(211,161,38)" fg:x="4796" fg:w="1644"/><text x="18.4098%" y="399.50">&lt;alloc::..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (265 samples, 1.00%)</title><rect x="23.3813%" y="373" width="1.0034%" height="15" fill="rgb(219,138,40)" fg:x="6175" fg:w="265"/><text x="23.6313%" y="383.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (261 samples, 0.99%)</title><rect x="23.3964%" y="357" width="0.9883%" height="15" fill="rgb(241,228,46)" fg:x="6179" fg:w="261"/><text x="23.6464%" y="367.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (10 samples, 0.04%)</title><rect x="24.3468%" y="341" width="0.0379%" height="15" fill="rgb(223,209,38)" fg:x="6430" fg:w="10"/><text x="24.5968%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (10 samples, 0.04%)</title><rect x="24.3468%" y="325" width="0.0379%" height="15" fill="rgb(236,164,45)" fg:x="6430" fg:w="10"/><text x="24.5968%" y="335.50"></text></g><g><title>irq_exit_rcu (10 samples, 0.04%)</title><rect x="24.3468%" y="309" width="0.0379%" height="15" fill="rgb(231,15,5)" fg:x="6430" fg:w="10"/><text x="24.5968%" y="319.50"></text></g><g><title>__softirqentry_text_start (10 samples, 0.04%)</title><rect x="24.3468%" y="293" width="0.0379%" height="15" fill="rgb(252,35,15)" fg:x="6430" fg:w="10"/><text x="24.5968%" y="303.50"></text></g><g><title>run_timer_softirq (10 samples, 0.04%)</title><rect x="24.3468%" y="277" width="0.0379%" height="15" fill="rgb(248,181,18)" fg:x="6430" fg:w="10"/><text x="24.5968%" y="287.50"></text></g><g><title>__run_timers.part.0 (10 samples, 0.04%)</title><rect x="24.3468%" y="261" width="0.0379%" height="15" fill="rgb(233,39,42)" fg:x="6430" fg:w="10"/><text x="24.5968%" y="271.50"></text></g><g><title>call_timer_fn (10 samples, 0.04%)</title><rect x="24.3468%" y="245" width="0.0379%" height="15" fill="rgb(238,110,33)" fg:x="6430" fg:w="10"/><text x="24.5968%" y="255.50"></text></g><g><title>vbg_heartbeat_timer (10 samples, 0.04%)</title><rect x="24.3468%" y="229" width="0.0379%" height="15" fill="rgb(233,195,10)" fg:x="6430" fg:w="10"/><text x="24.5968%" y="239.50"></text></g><g><title>vbg_req_perform (10 samples, 0.04%)</title><rect x="24.3468%" y="213" width="0.0379%" height="15" fill="rgb(254,105,3)" fg:x="6430" fg:w="10"/><text x="24.5968%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.02%)</title><rect x="24.8580%" y="325" width="0.0151%" height="15" fill="rgb(221,225,9)" fg:x="6565" fg:w="4"/><text x="25.1080%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (79 samples, 0.30%)</title><rect x="25.1231%" y="309" width="0.2991%" height="15" fill="rgb(224,227,45)" fg:x="6635" fg:w="79"/><text x="25.3731%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (38 samples, 0.14%)</title><rect x="25.2783%" y="293" width="0.1439%" height="15" fill="rgb(229,198,43)" fg:x="6676" fg:w="38"/><text x="25.5283%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (163 samples, 0.62%)</title><rect x="24.8504%" y="341" width="0.6172%" height="15" fill="rgb(206,209,35)" fg:x="6563" fg:w="163"/><text x="25.1004%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (157 samples, 0.59%)</title><rect x="24.8732%" y="325" width="0.5945%" height="15" fill="rgb(245,195,53)" fg:x="6569" fg:w="157"/><text x="25.1232%" y="335.50"></text></g><g><title>core::ptr::null_mut (12 samples, 0.05%)</title><rect x="25.4222%" y="309" width="0.0454%" height="15" fill="rgb(240,92,26)" fg:x="6714" fg:w="12"/><text x="25.6722%" y="319.50"></text></g><g><title>core::ptr::invalid_mut (8 samples, 0.03%)</title><rect x="25.4373%" y="293" width="0.0303%" height="15" fill="rgb(207,40,23)" fg:x="6718" fg:w="8"/><text x="25.6873%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (196 samples, 0.74%)</title><rect x="24.7293%" y="357" width="0.7421%" height="15" fill="rgb(223,111,35)" fg:x="6531" fg:w="196"/><text x="24.9793%" y="367.50"></text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::back (320 samples, 1.21%)</title><rect x="24.3923%" y="389" width="1.2117%" height="15" fill="rgb(229,147,28)" fg:x="6442" fg:w="320"/><text x="24.6423%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (283 samples, 1.07%)</title><rect x="24.5324%" y="373" width="1.0716%" height="15" fill="rgb(211,29,28)" fg:x="6479" fg:w="283"/><text x="24.7824%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (35 samples, 0.13%)</title><rect x="25.4714%" y="357" width="0.1325%" height="15" fill="rgb(228,72,33)" fg:x="6727" fg:w="35"/><text x="25.7214%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (34 samples, 0.13%)</title><rect x="25.4752%" y="341" width="0.1287%" height="15" fill="rgb(205,214,31)" fg:x="6728" fg:w="34"/><text x="25.7252%" y="351.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.01%)</title><rect x="26.7702%" y="245" width="0.0114%" height="15" fill="rgb(224,111,15)" fg:x="7070" fg:w="3"/><text x="27.0202%" y="255.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.01%)</title><rect x="26.7702%" y="229" width="0.0114%" height="15" fill="rgb(253,21,26)" fg:x="7070" fg:w="3"/><text x="27.0202%" y="239.50"></text></g><g><title>run_timer_softirq (3 samples, 0.01%)</title><rect x="26.7702%" y="213" width="0.0114%" height="15" fill="rgb(245,139,43)" fg:x="7070" fg:w="3"/><text x="27.0202%" y="223.50"></text></g><g><title>__run_timers.part.0 (3 samples, 0.01%)</title><rect x="26.7702%" y="197" width="0.0114%" height="15" fill="rgb(252,170,7)" fg:x="7070" fg:w="3"/><text x="27.0202%" y="207.50"></text></g><g><title>call_timer_fn (3 samples, 0.01%)</title><rect x="26.7702%" y="181" width="0.0114%" height="15" fill="rgb(231,118,14)" fg:x="7070" fg:w="3"/><text x="27.0202%" y="191.50"></text></g><g><title>vbg_heartbeat_timer (3 samples, 0.01%)</title><rect x="26.7702%" y="165" width="0.0114%" height="15" fill="rgb(238,83,0)" fg:x="7070" fg:w="3"/><text x="27.0202%" y="175.50"></text></g><g><title>vbg_req_perform (3 samples, 0.01%)</title><rect x="26.7702%" y="149" width="0.0114%" height="15" fill="rgb(221,39,39)" fg:x="7070" fg:w="3"/><text x="27.0202%" y="159.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (107 samples, 0.41%)</title><rect x="26.3802%" y="309" width="0.4051%" height="15" fill="rgb(222,119,46)" fg:x="6967" fg:w="107"/><text x="26.6302%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (55 samples, 0.21%)</title><rect x="26.5771%" y="293" width="0.2083%" height="15" fill="rgb(222,165,49)" fg:x="7019" fg:w="55"/><text x="26.8271%" y="303.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="26.7702%" y="277" width="0.0151%" height="15" fill="rgb(219,113,52)" fg:x="7070" fg:w="4"/><text x="27.0202%" y="287.50"></text></g><g><title>sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="26.7702%" y="261" width="0.0151%" height="15" fill="rgb(214,7,15)" fg:x="7070" fg:w="4"/><text x="27.0202%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (189 samples, 0.72%)</title><rect x="26.1378%" y="341" width="0.7156%" height="15" fill="rgb(235,32,4)" fg:x="6903" fg:w="189"/><text x="26.3878%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (183 samples, 0.69%)</title><rect x="26.1605%" y="325" width="0.6929%" height="15" fill="rgb(238,90,54)" fg:x="6909" fg:w="183"/><text x="26.4105%" y="335.50"></text></g><g><title>core::ptr::null_mut (18 samples, 0.07%)</title><rect x="26.7853%" y="309" width="0.0682%" height="15" fill="rgb(213,208,19)" fg:x="7074" fg:w="18"/><text x="27.0353%" y="319.50"></text></g><g><title>core::ptr::invalid_mut (14 samples, 0.05%)</title><rect x="26.8005%" y="293" width="0.0530%" height="15" fill="rgb(233,156,4)" fg:x="7078" fg:w="14"/><text x="27.0505%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (228 samples, 0.86%)</title><rect x="25.9939%" y="357" width="0.8633%" height="15" fill="rgb(207,194,5)" fg:x="6865" fg:w="228"/><text x="26.2439%" y="367.50"></text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::down (376 samples, 1.42%)</title><rect x="25.6039%" y="389" width="1.4237%" height="15" fill="rgb(206,111,30)" fg:x="6762" fg:w="376"/><text x="25.8539%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (323 samples, 1.22%)</title><rect x="25.8046%" y="373" width="1.2230%" height="15" fill="rgb(243,70,54)" fg:x="6815" fg:w="323"/><text x="26.0546%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (44 samples, 0.17%)</title><rect x="26.8610%" y="357" width="0.1666%" height="15" fill="rgb(242,28,8)" fg:x="7094" fg:w="44"/><text x="27.1110%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (44 samples, 0.17%)</title><rect x="26.8610%" y="341" width="0.1666%" height="15" fill="rgb(219,106,18)" fg:x="7094" fg:w="44"/><text x="27.1110%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.01%)</title><rect x="27.4555%" y="325" width="0.0114%" height="15" fill="rgb(244,222,10)" fg:x="7251" fg:w="3"/><text x="27.7055%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (86 samples, 0.33%)</title><rect x="27.6713%" y="309" width="0.3256%" height="15" fill="rgb(236,179,52)" fg:x="7308" fg:w="86"/><text x="27.9213%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (46 samples, 0.17%)</title><rect x="27.8228%" y="293" width="0.1742%" height="15" fill="rgb(213,23,39)" fg:x="7348" fg:w="46"/><text x="28.0728%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (186 samples, 0.70%)</title><rect x="27.3608%" y="357" width="0.7043%" height="15" fill="rgb(238,48,10)" fg:x="7226" fg:w="186"/><text x="27.6108%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (166 samples, 0.63%)</title><rect x="27.4366%" y="341" width="0.6285%" height="15" fill="rgb(251,196,23)" fg:x="7246" fg:w="166"/><text x="27.6866%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (158 samples, 0.60%)</title><rect x="27.4669%" y="325" width="0.5983%" height="15" fill="rgb(250,152,24)" fg:x="7254" fg:w="158"/><text x="27.7169%" y="335.50"></text></g><g><title>core::ptr::null_mut (18 samples, 0.07%)</title><rect x="27.9970%" y="309" width="0.0682%" height="15" fill="rgb(209,150,17)" fg:x="7394" fg:w="18"/><text x="28.2470%" y="319.50"></text></g><g><title>core::ptr::invalid_mut (9 samples, 0.03%)</title><rect x="28.0310%" y="293" width="0.0341%" height="15" fill="rgb(234,202,34)" fg:x="7403" fg:w="9"/><text x="28.2810%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (277 samples, 1.05%)</title><rect x="27.1753%" y="373" width="1.0488%" height="15" fill="rgb(253,148,53)" fg:x="7177" fg:w="277"/><text x="27.4253%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (42 samples, 0.16%)</title><rect x="28.0651%" y="357" width="0.1590%" height="15" fill="rgb(218,129,16)" fg:x="7412" fg:w="42"/><text x="28.3151%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (41 samples, 0.16%)</title><rect x="28.0689%" y="341" width="0.1552%" height="15" fill="rgb(216,85,19)" fg:x="7413" fg:w="41"/><text x="28.3189%" y="351.50"></text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::front (317 samples, 1.20%)</title><rect x="27.0276%" y="389" width="1.2003%" height="15" fill="rgb(235,228,7)" fg:x="7138" fg:w="317"/><text x="27.2776%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (64 samples, 0.24%)</title><rect x="28.7202%" y="309" width="0.2423%" height="15" fill="rgb(245,175,0)" fg:x="7585" fg:w="64"/><text x="28.9702%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (27 samples, 0.10%)</title><rect x="28.8603%" y="293" width="0.1022%" height="15" fill="rgb(208,168,36)" fg:x="7622" fg:w="27"/><text x="29.1103%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (122 samples, 0.46%)</title><rect x="28.5384%" y="341" width="0.4619%" height="15" fill="rgb(246,171,24)" fg:x="7537" fg:w="122"/><text x="28.7884%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (121 samples, 0.46%)</title><rect x="28.5422%" y="325" width="0.4582%" height="15" fill="rgb(215,142,24)" fg:x="7538" fg:w="121"/><text x="28.7922%" y="335.50"></text></g><g><title>core::ptr::null_mut (10 samples, 0.04%)</title><rect x="28.9625%" y="309" width="0.0379%" height="15" fill="rgb(250,187,7)" fg:x="7649" fg:w="10"/><text x="29.2125%" y="319.50"></text></g><g><title>core::ptr::invalid_mut (6 samples, 0.02%)</title><rect x="28.9777%" y="293" width="0.0227%" height="15" fill="rgb(228,66,33)" fg:x="7653" fg:w="6"/><text x="29.2277%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (153 samples, 0.58%)</title><rect x="28.4400%" y="357" width="0.5793%" height="15" fill="rgb(234,215,21)" fg:x="7511" fg:w="153"/><text x="28.6900%" y="367.50"></text></g><g><title>core::slice::raw::from_raw_parts (3 samples, 0.01%)</title><rect x="29.0080%" y="341" width="0.0114%" height="15" fill="rgb(222,191,20)" fg:x="7661" fg:w="3"/><text x="29.2580%" y="351.50"></text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::left (236 samples, 0.89%)</title><rect x="28.2279%" y="389" width="0.8936%" height="15" fill="rgb(245,79,54)" fg:x="7455" fg:w="236"/><text x="28.4779%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (212 samples, 0.80%)</title><rect x="28.3188%" y="373" width="0.8027%" height="15" fill="rgb(240,10,37)" fg:x="7479" fg:w="212"/><text x="28.5688%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (27 samples, 0.10%)</title><rect x="29.0193%" y="357" width="0.1022%" height="15" fill="rgb(214,192,32)" fg:x="7664" fg:w="27"/><text x="29.2693%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (26 samples, 0.10%)</title><rect x="29.0231%" y="341" width="0.0984%" height="15" fill="rgb(209,36,54)" fg:x="7665" fg:w="26"/><text x="29.2731%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (110 samples, 0.42%)</title><rect x="30.0227%" y="309" width="0.4165%" height="15" fill="rgb(220,10,11)" fg:x="7929" fg:w="110"/><text x="30.2727%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (47 samples, 0.18%)</title><rect x="30.2613%" y="293" width="0.1780%" height="15" fill="rgb(221,106,17)" fg:x="7992" fg:w="47"/><text x="30.5113%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (207 samples, 0.78%)</title><rect x="29.7349%" y="341" width="0.7838%" height="15" fill="rgb(251,142,44)" fg:x="7853" fg:w="207"/><text x="29.9849%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (201 samples, 0.76%)</title><rect x="29.7577%" y="325" width="0.7611%" height="15" fill="rgb(238,13,15)" fg:x="7859" fg:w="201"/><text x="30.0077%" y="335.50"></text></g><g><title>core::ptr::null_mut (21 samples, 0.08%)</title><rect x="30.4392%" y="309" width="0.0795%" height="15" fill="rgb(208,107,27)" fg:x="8039" fg:w="21"/><text x="30.6892%" y="319.50"></text></g><g><title>core::ptr::invalid_mut (14 samples, 0.05%)</title><rect x="30.4657%" y="293" width="0.0530%" height="15" fill="rgb(205,136,37)" fg:x="8046" fg:w="14"/><text x="30.7157%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (264 samples, 1.00%)</title><rect x="29.5456%" y="357" width="0.9996%" height="15" fill="rgb(250,205,27)" fg:x="7803" fg:w="264"/><text x="29.7956%" y="367.50"></text></g><g><title>core::slice::raw::from_raw_parts (6 samples, 0.02%)</title><rect x="30.5225%" y="341" width="0.0227%" height="15" fill="rgb(210,80,43)" fg:x="8061" fg:w="6"/><text x="30.7725%" y="351.50"></text></g><g><title>core::ptr::slice_from_raw_parts (3 samples, 0.01%)</title><rect x="30.5339%" y="325" width="0.0114%" height="15" fill="rgb(247,160,36)" fg:x="8064" fg:w="3"/><text x="30.7839%" y="335.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (3 samples, 0.01%)</title><rect x="30.5339%" y="309" width="0.0114%" height="15" fill="rgb(234,13,49)" fg:x="8064" fg:w="3"/><text x="30.7839%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (406 samples, 1.54%)</title><rect x="29.3071%" y="373" width="1.5373%" height="15" fill="rgb(234,122,0)" fg:x="7740" fg:w="406"/><text x="29.5571%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (78 samples, 0.30%)</title><rect x="30.5490%" y="357" width="0.2953%" height="15" fill="rgb(207,146,38)" fg:x="8068" fg:w="78"/><text x="30.7990%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (77 samples, 0.29%)</title><rect x="30.5528%" y="341" width="0.2916%" height="15" fill="rgb(207,177,25)" fg:x="8069" fg:w="77"/><text x="30.8028%" y="351.50"></text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::right (456 samples, 1.73%)</title><rect x="29.1215%" y="389" width="1.7266%" height="15" fill="rgb(211,178,42)" fg:x="7691" fg:w="456"/><text x="29.3715%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (65 samples, 0.25%)</title><rect x="31.3669%" y="309" width="0.2461%" height="15" fill="rgb(230,69,54)" fg:x="8284" fg:w="65"/><text x="31.6169%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (18 samples, 0.07%)</title><rect x="31.5449%" y="293" width="0.0682%" height="15" fill="rgb(214,135,41)" fg:x="8331" fg:w="18"/><text x="31.7949%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (125 samples, 0.47%)</title><rect x="31.1776%" y="341" width="0.4733%" height="15" fill="rgb(237,67,25)" fg:x="8234" fg:w="125"/><text x="31.4276%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (119 samples, 0.45%)</title><rect x="31.2003%" y="325" width="0.4506%" height="15" fill="rgb(222,189,50)" fg:x="8240" fg:w="119"/><text x="31.4503%" y="335.50"></text></g><g><title>core::ptr::null_mut (10 samples, 0.04%)</title><rect x="31.6130%" y="309" width="0.0379%" height="15" fill="rgb(245,148,34)" fg:x="8349" fg:w="10"/><text x="31.8630%" y="319.50"></text></g><g><title>core::ptr::invalid_mut (3 samples, 0.01%)</title><rect x="31.6395%" y="293" width="0.0114%" height="15" fill="rgb(222,29,6)" fg:x="8356" fg:w="3"/><text x="31.8895%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (149 samples, 0.56%)</title><rect x="31.0943%" y="357" width="0.5642%" height="15" fill="rgb(221,189,43)" fg:x="8212" fg:w="149"/><text x="31.3443%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4,574 samples, 17.32%)</title><rect x="14.4642%" y="421" width="17.3192%" height="15" fill="rgb(207,36,27)" fg:x="3820" fg:w="4574"/><text x="14.7142%" y="431.50">core::iter::adapters::map::..</text></g><g><title>wfc::wfc::queueprop_bitarrayset_fibheap::QueuePropBitArraySetFibHeap::legal_tiles::{{closure}} (3,661 samples, 13.86%)</title><rect x="17.9212%" y="405" width="13.8622%" height="15" fill="rgb(217,90,24)" fg:x="4733" fg:w="3661"/><text x="18.1712%" y="415.50">wfc::wfc::queueprop_b..</text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::up (247 samples, 0.94%)</title><rect x="30.8482%" y="389" width="0.9353%" height="15" fill="rgb(224,66,35)" fg:x="8147" fg:w="247"/><text x="31.0982%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (222 samples, 0.84%)</title><rect x="30.9428%" y="373" width="0.8406%" height="15" fill="rgb(221,13,50)" fg:x="8172" fg:w="222"/><text x="31.1928%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (31 samples, 0.12%)</title><rect x="31.6660%" y="357" width="0.1174%" height="15" fill="rgb(236,68,49)" fg:x="8363" fg:w="31"/><text x="31.9160%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (31 samples, 0.12%)</title><rect x="31.6660%" y="341" width="0.1174%" height="15" fill="rgb(229,146,28)" fg:x="8363" fg:w="31"/><text x="31.9160%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,367 samples, 24.11%)</title><rect x="7.7016%" y="453" width="24.1083%" height="15" fill="rgb(225,31,38)" fg:x="2034" fg:w="6367"/><text x="7.9516%" y="463.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; a..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (6,361 samples, 24.09%)</title><rect x="7.7243%" y="437" width="24.0856%" height="15" fill="rgb(250,208,3)" fg:x="2040" fg:w="6361"/><text x="7.9743%" y="447.50">core::iter::traits::iterator::Iterator..</text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::map_fold&lt;&amp;u8,wfc::wfc::bits256_set::Bits256Set,(),wfc::wfc::queueprop_bitarrayset_fibheap::QueuePropBitArraySetFibHeap::legal_tiles::{{closure}},core::iter::traits::iterator::Iterator::for_each::call&lt;wfc::wfc::bits256_set::Bits256Set,&lt;alloc::vec::Vec&lt;wfc::wfc::bits256_set::Bits256Set&gt; as alloc::vec::spec_extend::SpecExtend&lt;wfc::wfc::bits256_set::Bits256Set,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u8&gt;,wfc::wfc::queueprop_bitarrayset_fibheap::QueuePropBitArraySetFibHeap::legal_tiles::{{closure}}&gt;&gt;&gt;::spec_extend::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt; (7 samples, 0.03%)</title><rect x="31.7834%" y="421" width="0.0265%" height="15" fill="rgb(246,54,23)" fg:x="8394" fg:w="7"/><text x="32.0334%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::traits::iterator::Iterator::for_each::call&lt;wfc::wfc::bits256_set::Bits256Set,&lt;alloc::vec::Vec&lt;wfc::wfc::bits256_set::Bits256Set&gt; as alloc::vec::spec_extend::SpecExtend&lt;wfc::wfc::bits256_set::Bits256Set,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u8&gt;,wfc::wfc::queueprop_bitarrayset_fibheap::QueuePropBitArraySetFibHeap::legal_tiles::{{closure}}&gt;&gt;&gt;::spec_extend::{{closure}}&gt;::{{closure}}&gt; (6 samples, 0.02%)</title><rect x="31.7872%" y="405" width="0.0227%" height="15" fill="rgb(243,76,11)" fg:x="8395" fg:w="6"/><text x="32.0372%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::Vec&lt;wfc::wfc::bits256_set::Bits256Set&gt; as alloc::vec::spec_extend::SpecExtend&lt;wfc::wfc::bits256_set::Bits256Set,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u8&gt;,wfc::wfc::queueprop_bitarrayset_fibheap::QueuePropBitArraySetFibHeap::legal_tiles::{{closure}}&gt;&gt;&gt;::spec_extend::{{closure}}&gt; (5 samples, 0.02%)</title><rect x="31.7910%" y="389" width="0.0189%" height="15" fill="rgb(245,21,50)" fg:x="8396" fg:w="5"/><text x="32.0410%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::set_len_on_drop::SetLenOnDrop&gt; (4 samples, 0.02%)</title><rect x="31.7948%" y="373" width="0.0151%" height="15" fill="rgb(228,9,43)" fg:x="8397" fg:w="4"/><text x="32.0448%" y="383.50"></text></g><g><title>&lt;alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="31.7986%" y="357" width="0.0114%" height="15" fill="rgb(208,100,47)" fg:x="8398" fg:w="3"/><text x="32.0486%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6,369 samples, 24.12%)</title><rect x="7.7016%" y="469" width="24.1159%" height="15" fill="rgb(232,26,8)" fg:x="2034" fg:w="6369"/><text x="7.9516%" y="479.50">core::iter::traits::iterator::Iterator..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6,411 samples, 24.27%)</title><rect x="7.5540%" y="485" width="24.2749%" height="15" fill="rgb(216,166,38)" fg:x="1995" fg:w="6411"/><text x="7.8040%" y="495.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::sp..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.01%)</title><rect x="31.8175%" y="469" width="0.0114%" height="15" fill="rgb(251,202,51)" fg:x="8403" fg:w="3"/><text x="32.0675%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.01%)</title><rect x="31.8175%" y="453" width="0.0114%" height="15" fill="rgb(254,216,34)" fg:x="8403" fg:w="3"/><text x="32.0675%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (6 samples, 0.02%)</title><rect x="31.8289%" y="485" width="0.0227%" height="15" fill="rgb(251,32,27)" fg:x="8406" fg:w="6"/><text x="32.0789%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (6 samples, 0.02%)</title><rect x="31.8289%" y="469" width="0.0227%" height="15" fill="rgb(208,127,28)" fg:x="8406" fg:w="6"/><text x="32.0789%" y="479.50"></text></g><g><title>__rdl_alloc (3 samples, 0.01%)</title><rect x="31.8629%" y="373" width="0.0114%" height="15" fill="rgb(224,137,22)" fg:x="8415" fg:w="3"/><text x="32.1129%" y="383.50"></text></g><g><title>alloc::alloc::alloc (33 samples, 0.12%)</title><rect x="31.8629%" y="389" width="0.1250%" height="15" fill="rgb(254,70,32)" fg:x="8415" fg:w="33"/><text x="32.1129%" y="399.50"></text></g><g><title>malloc (30 samples, 0.11%)</title><rect x="31.8743%" y="373" width="0.1136%" height="15" fill="rgb(229,75,37)" fg:x="8418" fg:w="30"/><text x="32.1243%" y="383.50"></text></g><g><title>[libc.so.6] (28 samples, 0.11%)</title><rect x="31.8819%" y="357" width="0.1060%" height="15" fill="rgb(252,64,23)" fg:x="8420" fg:w="28"/><text x="32.1319%" y="367.50"></text></g><g><title>[libc.so.6] (16 samples, 0.06%)</title><rect x="31.9273%" y="341" width="0.0606%" height="15" fill="rgb(232,162,48)" fg:x="8432" fg:w="16"/><text x="32.1773%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (46 samples, 0.17%)</title><rect x="31.8591%" y="421" width="0.1742%" height="15" fill="rgb(246,160,12)" fg:x="8414" fg:w="46"/><text x="32.1091%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (46 samples, 0.17%)</title><rect x="31.8591%" y="405" width="0.1742%" height="15" fill="rgb(247,166,0)" fg:x="8414" fg:w="46"/><text x="32.1091%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (12 samples, 0.05%)</title><rect x="31.9879%" y="389" width="0.0454%" height="15" fill="rgb(249,219,21)" fg:x="8448" fg:w="12"/><text x="32.2379%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (8 samples, 0.03%)</title><rect x="32.0030%" y="373" width="0.0303%" height="15" fill="rgb(205,209,3)" fg:x="8452" fg:w="8"/><text x="32.2530%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (4 samples, 0.02%)</title><rect x="32.0182%" y="357" width="0.0151%" height="15" fill="rgb(243,44,1)" fg:x="8456" fg:w="4"/><text x="32.2682%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="32.0220%" y="341" width="0.0114%" height="15" fill="rgb(206,159,16)" fg:x="8457" fg:w="3"/><text x="32.2720%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6,500 samples, 24.61%)</title><rect x="7.4328%" y="549" width="24.6119%" height="15" fill="rgb(244,77,30)" fg:x="1963" fg:w="6500"/><text x="7.6828%" y="559.50">core::iter::traits::iterator::Iterator:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6,498 samples, 24.60%)</title><rect x="7.4404%" y="533" width="24.6043%" height="15" fill="rgb(218,69,12)" fg:x="1965" fg:w="6498"/><text x="7.6904%" y="543.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::trai..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6,483 samples, 24.55%)</title><rect x="7.4972%" y="517" width="24.5475%" height="15" fill="rgb(212,87,7)" fg:x="1980" fg:w="6483"/><text x="7.7472%" y="527.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6,477 samples, 24.52%)</title><rect x="7.5199%" y="501" width="24.5248%" height="15" fill="rgb(245,114,25)" fg:x="1986" fg:w="6477"/><text x="7.7699%" y="511.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (51 samples, 0.19%)</title><rect x="31.8516%" y="485" width="0.1931%" height="15" fill="rgb(210,61,42)" fg:x="8412" fg:w="51"/><text x="32.1016%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (51 samples, 0.19%)</title><rect x="31.8516%" y="469" width="0.1931%" height="15" fill="rgb(211,52,33)" fg:x="8412" fg:w="51"/><text x="32.1016%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (51 samples, 0.19%)</title><rect x="31.8516%" y="453" width="0.1931%" height="15" fill="rgb(234,58,33)" fg:x="8412" fg:w="51"/><text x="32.1016%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (51 samples, 0.19%)</title><rect x="31.8516%" y="437" width="0.1931%" height="15" fill="rgb(220,115,36)" fg:x="8412" fg:w="51"/><text x="32.1016%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (9 samples, 0.03%)</title><rect x="32.0447%" y="549" width="0.0341%" height="15" fill="rgb(243,153,54)" fg:x="8463" fg:w="9"/><text x="32.2947%" y="559.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (3 samples, 0.01%)</title><rect x="32.0674%" y="533" width="0.0114%" height="15" fill="rgb(251,47,18)" fg:x="8469" fg:w="3"/><text x="32.3174%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.07%)</title><rect x="32.0863%" y="533" width="0.0682%" height="15" fill="rgb(242,102,42)" fg:x="8474" fg:w="18"/><text x="32.3363%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (16 samples, 0.06%)</title><rect x="32.0939%" y="517" width="0.0606%" height="15" fill="rgb(234,31,38)" fg:x="8476" fg:w="16"/><text x="32.3439%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (14 samples, 0.05%)</title><rect x="32.1015%" y="501" width="0.0530%" height="15" fill="rgb(221,117,51)" fg:x="8478" fg:w="14"/><text x="32.3515%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (10 samples, 0.04%)</title><rect x="32.1166%" y="485" width="0.0379%" height="15" fill="rgb(212,20,18)" fg:x="8482" fg:w="10"/><text x="32.3666%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (4 samples, 0.02%)</title><rect x="32.1393%" y="469" width="0.0151%" height="15" fill="rgb(245,133,36)" fg:x="8488" fg:w="4"/><text x="32.3893%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="32.1621%" y="501" width="0.0189%" height="15" fill="rgb(212,6,19)" fg:x="8494" fg:w="5"/><text x="32.4121%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="32.1621%" y="485" width="0.0189%" height="15" fill="rgb(218,1,36)" fg:x="8494" fg:w="5"/><text x="32.4121%" y="495.50"></text></g><g><title>free (5 samples, 0.02%)</title><rect x="32.1621%" y="469" width="0.0189%" height="15" fill="rgb(246,84,54)" fg:x="8494" fg:w="5"/><text x="32.4121%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6 samples, 0.02%)</title><rect x="32.1999%" y="485" width="0.0227%" height="15" fill="rgb(242,110,6)" fg:x="8504" fg:w="6"/><text x="32.4499%" y="495.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (4 samples, 0.02%)</title><rect x="32.2075%" y="469" width="0.0151%" height="15" fill="rgb(214,47,5)" fg:x="8506" fg:w="4"/><text x="32.4575%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array (4 samples, 0.02%)</title><rect x="32.2226%" y="485" width="0.0151%" height="15" fill="rgb(218,159,25)" fg:x="8510" fg:w="4"/><text x="32.4726%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (4 samples, 0.02%)</title><rect x="32.2226%" y="469" width="0.0151%" height="15" fill="rgb(215,211,28)" fg:x="8510" fg:w="4"/><text x="32.4726%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (48 samples, 0.18%)</title><rect x="32.0788%" y="549" width="0.1817%" height="15" fill="rgb(238,59,32)" fg:x="8472" fg:w="48"/><text x="32.3288%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (28 samples, 0.11%)</title><rect x="32.1545%" y="533" width="0.1060%" height="15" fill="rgb(226,82,3)" fg:x="8492" fg:w="28"/><text x="32.4045%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.10%)</title><rect x="32.1583%" y="517" width="0.1022%" height="15" fill="rgb(240,164,32)" fg:x="8493" fg:w="27"/><text x="32.4083%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (21 samples, 0.08%)</title><rect x="32.1810%" y="501" width="0.0795%" height="15" fill="rgb(232,46,7)" fg:x="8499" fg:w="21"/><text x="32.4310%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (5 samples, 0.02%)</title><rect x="32.2416%" y="485" width="0.0189%" height="15" fill="rgb(229,129,53)" fg:x="8515" fg:w="5"/><text x="32.4916%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (12 samples, 0.05%)</title><rect x="32.2605%" y="549" width="0.0454%" height="15" fill="rgb(234,188,29)" fg:x="8520" fg:w="12"/><text x="32.5105%" y="559.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (8 samples, 0.03%)</title><rect x="32.2757%" y="533" width="0.0303%" height="15" fill="rgb(246,141,4)" fg:x="8524" fg:w="8"/><text x="32.5257%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (6 samples, 0.02%)</title><rect x="32.2832%" y="517" width="0.0227%" height="15" fill="rgb(229,23,39)" fg:x="8526" fg:w="6"/><text x="32.5332%" y="527.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (8 samples, 0.03%)</title><rect x="35.2669%" y="405" width="0.0303%" height="15" fill="rgb(206,12,3)" fg:x="9314" fg:w="8"/><text x="35.5169%" y="415.50"></text></g><g><title>sysvec_apic_timer_interrupt (8 samples, 0.03%)</title><rect x="35.2669%" y="389" width="0.0303%" height="15" fill="rgb(252,226,20)" fg:x="9314" fg:w="8"/><text x="35.5169%" y="399.50"></text></g><g><title>irq_exit_rcu (8 samples, 0.03%)</title><rect x="35.2669%" y="373" width="0.0303%" height="15" fill="rgb(216,123,35)" fg:x="9314" fg:w="8"/><text x="35.5169%" y="383.50"></text></g><g><title>__softirqentry_text_start (8 samples, 0.03%)</title><rect x="35.2669%" y="357" width="0.0303%" height="15" fill="rgb(212,68,40)" fg:x="9314" fg:w="8"/><text x="35.5169%" y="367.50"></text></g><g><title>run_timer_softirq (7 samples, 0.03%)</title><rect x="35.2707%" y="341" width="0.0265%" height="15" fill="rgb(254,125,32)" fg:x="9315" fg:w="7"/><text x="35.5207%" y="351.50"></text></g><g><title>__run_timers.part.0 (7 samples, 0.03%)</title><rect x="35.2707%" y="325" width="0.0265%" height="15" fill="rgb(253,97,22)" fg:x="9315" fg:w="7"/><text x="35.5207%" y="335.50"></text></g><g><title>call_timer_fn (7 samples, 0.03%)</title><rect x="35.2707%" y="309" width="0.0265%" height="15" fill="rgb(241,101,14)" fg:x="9315" fg:w="7"/><text x="35.5207%" y="319.50"></text></g><g><title>vbg_heartbeat_timer (7 samples, 0.03%)</title><rect x="35.2707%" y="293" width="0.0265%" height="15" fill="rgb(238,103,29)" fg:x="9315" fg:w="7"/><text x="35.5207%" y="303.50"></text></g><g><title>vbg_req_perform (7 samples, 0.03%)</title><rect x="35.2707%" y="277" width="0.0265%" height="15" fill="rgb(233,195,47)" fg:x="9315" fg:w="7"/><text x="35.5207%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check (31 samples, 0.12%)</title><rect x="35.2972%" y="405" width="0.1174%" height="15" fill="rgb(246,218,30)" fg:x="9322" fg:w="31"/><text x="35.5472%" y="415.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::FromResidual&gt;::from_residual (308 samples, 1.17%)</title><rect x="41.1208%" y="389" width="1.1662%" height="15" fill="rgb(219,145,47)" fg:x="10860" fg:w="308"/><text x="41.3708%" y="399.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.01%)</title><rect x="45.1193%" y="341" width="0.0114%" height="15" fill="rgb(243,12,26)" fg:x="11916" fg:w="3"/><text x="45.3693%" y="351.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.01%)</title><rect x="45.1193%" y="325" width="0.0114%" height="15" fill="rgb(214,87,16)" fg:x="11916" fg:w="3"/><text x="45.3693%" y="335.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (752 samples, 2.85%)</title><rect x="42.2870%" y="389" width="2.8474%" height="15" fill="rgb(208,99,42)" fg:x="11168" fg:w="752"/><text x="42.5370%" y="399.50">&lt;c..</text></g><g><title>asm_sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="45.1193%" y="373" width="0.0151%" height="15" fill="rgb(253,99,2)" fg:x="11916" fg:w="4"/><text x="45.3693%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="45.1193%" y="357" width="0.0151%" height="15" fill="rgb(220,168,23)" fg:x="11916" fg:w="4"/><text x="45.3693%" y="367.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::from_output (4 samples, 0.02%)</title><rect x="45.1344%" y="389" width="0.0151%" height="15" fill="rgb(242,38,24)" fg:x="11920" fg:w="4"/><text x="45.3844%" y="399.50"></text></g><g><title>irq_exit_rcu (20 samples, 0.08%)</title><rect x="45.1571%" y="357" width="0.0757%" height="15" fill="rgb(225,182,9)" fg:x="11926" fg:w="20"/><text x="45.4071%" y="367.50"></text></g><g><title>__softirqentry_text_start (20 samples, 0.08%)</title><rect x="45.1571%" y="341" width="0.0757%" height="15" fill="rgb(243,178,37)" fg:x="11926" fg:w="20"/><text x="45.4071%" y="351.50"></text></g><g><title>run_timer_softirq (19 samples, 0.07%)</title><rect x="45.1609%" y="325" width="0.0719%" height="15" fill="rgb(232,139,19)" fg:x="11927" fg:w="19"/><text x="45.4109%" y="335.50"></text></g><g><title>__run_timers.part.0 (19 samples, 0.07%)</title><rect x="45.1609%" y="309" width="0.0719%" height="15" fill="rgb(225,201,24)" fg:x="11927" fg:w="19"/><text x="45.4109%" y="319.50"></text></g><g><title>call_timer_fn (19 samples, 0.07%)</title><rect x="45.1609%" y="293" width="0.0719%" height="15" fill="rgb(221,47,46)" fg:x="11927" fg:w="19"/><text x="45.4109%" y="303.50"></text></g><g><title>vbg_heartbeat_timer (19 samples, 0.07%)</title><rect x="45.1609%" y="277" width="0.0719%" height="15" fill="rgb(249,23,13)" fg:x="11927" fg:w="19"/><text x="45.4109%" y="287.50"></text></g><g><title>vbg_req_perform (19 samples, 0.07%)</title><rect x="45.1609%" y="261" width="0.0719%" height="15" fill="rgb(219,9,5)" fg:x="11927" fg:w="19"/><text x="45.4109%" y="271.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (22 samples, 0.08%)</title><rect x="45.1571%" y="389" width="0.0833%" height="15" fill="rgb(254,171,16)" fg:x="11926" fg:w="22"/><text x="45.4071%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (22 samples, 0.08%)</title><rect x="45.1571%" y="373" width="0.0833%" height="15" fill="rgb(230,171,20)" fg:x="11926" fg:w="22"/><text x="45.4071%" y="383.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="54.1348%" y="341" width="0.0114%" height="15" fill="rgb(210,71,41)" fg:x="14297" fg:w="3"/><text x="54.3848%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="54.1348%" y="325" width="0.0114%" height="15" fill="rgb(206,173,20)" fg:x="14297" fg:w="3"/><text x="54.3848%" y="335.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.01%)</title><rect x="54.1348%" y="309" width="0.0114%" height="15" fill="rgb(233,88,34)" fg:x="14297" fg:w="3"/><text x="54.3848%" y="319.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.01%)</title><rect x="54.1348%" y="293" width="0.0114%" height="15" fill="rgb(223,209,46)" fg:x="14297" fg:w="3"/><text x="54.3848%" y="303.50"></text></g><g><title>&lt;u8 as core::iter::range::Step&gt;::forward_unchecked (408 samples, 1.54%)</title><rect x="53.2374%" y="357" width="1.5449%" height="15" fill="rgb(250,43,18)" fg:x="14060" fg:w="408"/><text x="53.4874%" y="367.50"></text></g><g><title>core::num::&lt;impl u8&gt;::unchecked_add (168 samples, 0.64%)</title><rect x="54.1462%" y="341" width="0.6361%" height="15" fill="rgb(208,13,10)" fg:x="14300" fg:w="168"/><text x="54.3962%" y="351.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="54.7671%" y="325" width="0.0151%" height="15" fill="rgb(212,200,36)" fg:x="14464" fg:w="4"/><text x="55.0171%" y="335.50"></text></g><g><title>sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="54.7671%" y="309" width="0.0151%" height="15" fill="rgb(225,90,30)" fg:x="14464" fg:w="4"/><text x="55.0171%" y="319.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.02%)</title><rect x="54.7671%" y="293" width="0.0151%" height="15" fill="rgb(236,182,39)" fg:x="14464" fg:w="4"/><text x="55.0171%" y="303.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.02%)</title><rect x="54.7671%" y="277" width="0.0151%" height="15" fill="rgb(212,144,35)" fg:x="14464" fg:w="4"/><text x="55.0171%" y="287.50"></text></g><g><title>run_timer_softirq (4 samples, 0.02%)</title><rect x="54.7671%" y="261" width="0.0151%" height="15" fill="rgb(228,63,44)" fg:x="14464" fg:w="4"/><text x="55.0171%" y="271.50"></text></g><g><title>__run_timers.part.0 (4 samples, 0.02%)</title><rect x="54.7671%" y="245" width="0.0151%" height="15" fill="rgb(228,109,6)" fg:x="14464" fg:w="4"/><text x="55.0171%" y="255.50"></text></g><g><title>call_timer_fn (4 samples, 0.02%)</title><rect x="54.7671%" y="229" width="0.0151%" height="15" fill="rgb(238,117,24)" fg:x="14464" fg:w="4"/><text x="55.0171%" y="239.50"></text></g><g><title>vbg_heartbeat_timer (4 samples, 0.02%)</title><rect x="54.7671%" y="213" width="0.0151%" height="15" fill="rgb(242,26,26)" fg:x="14464" fg:w="4"/><text x="55.0171%" y="223.50"></text></g><g><title>vbg_req_perform (4 samples, 0.02%)</title><rect x="54.7671%" y="197" width="0.0151%" height="15" fill="rgb(221,92,48)" fg:x="14464" fg:w="4"/><text x="55.0171%" y="207.50"></text></g><g><title>asm_common_interrupt (4 samples, 0.02%)</title><rect x="54.7823%" y="357" width="0.0151%" height="15" fill="rgb(209,209,32)" fg:x="14468" fg:w="4"/><text x="55.0323%" y="367.50"></text></g><g><title>common_interrupt (4 samples, 0.02%)</title><rect x="54.7823%" y="341" width="0.0151%" height="15" fill="rgb(221,70,22)" fg:x="14468" fg:w="4"/><text x="55.0323%" y="351.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.02%)</title><rect x="54.7823%" y="325" width="0.0151%" height="15" fill="rgb(248,145,5)" fg:x="14468" fg:w="4"/><text x="55.0323%" y="335.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.02%)</title><rect x="54.7823%" y="309" width="0.0151%" height="15" fill="rgb(226,116,26)" fg:x="14468" fg:w="4"/><text x="55.0323%" y="319.50"></text></g><g><title>irq_exit_rcu (13 samples, 0.05%)</title><rect x="54.7974%" y="325" width="0.0492%" height="15" fill="rgb(244,5,17)" fg:x="14472" fg:w="13"/><text x="55.0474%" y="335.50"></text></g><g><title>__softirqentry_text_start (13 samples, 0.05%)</title><rect x="54.7974%" y="309" width="0.0492%" height="15" fill="rgb(252,159,33)" fg:x="14472" fg:w="13"/><text x="55.0474%" y="319.50"></text></g><g><title>run_timer_softirq (12 samples, 0.05%)</title><rect x="54.8012%" y="293" width="0.0454%" height="15" fill="rgb(206,71,0)" fg:x="14473" fg:w="12"/><text x="55.0512%" y="303.50"></text></g><g><title>__run_timers.part.0 (12 samples, 0.05%)</title><rect x="54.8012%" y="277" width="0.0454%" height="15" fill="rgb(233,118,54)" fg:x="14473" fg:w="12"/><text x="55.0512%" y="287.50"></text></g><g><title>call_timer_fn (12 samples, 0.05%)</title><rect x="54.8012%" y="261" width="0.0454%" height="15" fill="rgb(234,83,48)" fg:x="14473" fg:w="12"/><text x="55.0512%" y="271.50"></text></g><g><title>vbg_heartbeat_timer (12 samples, 0.05%)</title><rect x="54.8012%" y="245" width="0.0454%" height="15" fill="rgb(228,3,54)" fg:x="14473" fg:w="12"/><text x="55.0512%" y="255.50"></text></g><g><title>vbg_req_perform (12 samples, 0.05%)</title><rect x="54.8012%" y="229" width="0.0454%" height="15" fill="rgb(226,155,13)" fg:x="14473" fg:w="12"/><text x="55.0512%" y="239.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (15 samples, 0.06%)</title><rect x="54.7974%" y="357" width="0.0568%" height="15" fill="rgb(241,28,37)" fg:x="14472" fg:w="15"/><text x="55.0474%" y="367.50"></text></g><g><title>sysvec_apic_timer_interrupt (15 samples, 0.06%)</title><rect x="54.7974%" y="341" width="0.0568%" height="15" fill="rgb(233,93,10)" fg:x="14472" fg:w="15"/><text x="55.0474%" y="351.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u8&gt;::clone (26 samples, 0.10%)</title><rect x="54.8542%" y="357" width="0.0984%" height="15" fill="rgb(225,113,19)" fg:x="14487" fg:w="26"/><text x="55.1042%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (86 samples, 0.33%)</title><rect x="54.9527%" y="357" width="0.3256%" height="15" fill="rgb(241,2,18)" fg:x="14513" fg:w="86"/><text x="55.2027%" y="367.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (6 samples, 0.02%)</title><rect x="57.1640%" y="341" width="0.0227%" height="15" fill="rgb(228,207,21)" fg:x="15097" fg:w="6"/><text x="57.4140%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (6 samples, 0.02%)</title><rect x="57.1640%" y="325" width="0.0227%" height="15" fill="rgb(213,211,35)" fg:x="15097" fg:w="6"/><text x="57.4140%" y="335.50"></text></g><g><title>irq_exit_rcu (6 samples, 0.02%)</title><rect x="57.1640%" y="309" width="0.0227%" height="15" fill="rgb(209,83,10)" fg:x="15097" fg:w="6"/><text x="57.4140%" y="319.50"></text></g><g><title>__softirqentry_text_start (6 samples, 0.02%)</title><rect x="57.1640%" y="293" width="0.0227%" height="15" fill="rgb(209,164,1)" fg:x="15097" fg:w="6"/><text x="57.4140%" y="303.50"></text></g><g><title>run_timer_softirq (5 samples, 0.02%)</title><rect x="57.1677%" y="277" width="0.0189%" height="15" fill="rgb(213,184,43)" fg:x="15098" fg:w="5"/><text x="57.4177%" y="287.50"></text></g><g><title>__run_timers.part.0 (5 samples, 0.02%)</title><rect x="57.1677%" y="261" width="0.0189%" height="15" fill="rgb(231,61,34)" fg:x="15098" fg:w="5"/><text x="57.4177%" y="271.50"></text></g><g><title>call_timer_fn (5 samples, 0.02%)</title><rect x="57.1677%" y="245" width="0.0189%" height="15" fill="rgb(235,75,3)" fg:x="15098" fg:w="5"/><text x="57.4177%" y="255.50"></text></g><g><title>vbg_heartbeat_timer (5 samples, 0.02%)</title><rect x="57.1677%" y="229" width="0.0189%" height="15" fill="rgb(220,106,47)" fg:x="15098" fg:w="5"/><text x="57.4177%" y="239.50"></text></g><g><title>vbg_req_perform (5 samples, 0.02%)</title><rect x="57.1677%" y="213" width="0.0189%" height="15" fill="rgb(210,196,33)" fg:x="15098" fg:w="5"/><text x="57.4177%" y="223.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,829 samples, 10.71%)</title><rect x="47.7357%" y="373" width="10.7119%" height="15" fill="rgb(229,154,42)" fg:x="12607" fg:w="2829"/><text x="47.9857%" y="383.50">&lt;core::ops::rang..</text></g><g><title>core::mem::replace (837 samples, 3.17%)</title><rect x="55.2783%" y="357" width="3.1693%" height="15" fill="rgb(228,114,26)" fg:x="14599" fg:w="837"/><text x="55.5283%" y="367.50">cor..</text></g><g><title>core::ptr::read (333 samples, 1.26%)</title><rect x="57.1867%" y="341" width="1.2609%" height="15" fill="rgb(208,144,1)" fg:x="15103" fg:w="333"/><text x="57.4367%" y="351.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (6 samples, 0.02%)</title><rect x="58.4248%" y="325" width="0.0227%" height="15" fill="rgb(239,112,37)" fg:x="15430" fg:w="6"/><text x="58.6748%" y="335.50"></text></g><g><title>sysvec_apic_timer_interrupt (6 samples, 0.02%)</title><rect x="58.4248%" y="309" width="0.0227%" height="15" fill="rgb(210,96,50)" fg:x="15430" fg:w="6"/><text x="58.6748%" y="319.50"></text></g><g><title>irq_exit_rcu (6 samples, 0.02%)</title><rect x="58.4248%" y="293" width="0.0227%" height="15" fill="rgb(222,178,2)" fg:x="15430" fg:w="6"/><text x="58.6748%" y="303.50"></text></g><g><title>__softirqentry_text_start (6 samples, 0.02%)</title><rect x="58.4248%" y="277" width="0.0227%" height="15" fill="rgb(226,74,18)" fg:x="15430" fg:w="6"/><text x="58.6748%" y="287.50"></text></g><g><title>run_timer_softirq (6 samples, 0.02%)</title><rect x="58.4248%" y="261" width="0.0227%" height="15" fill="rgb(225,67,54)" fg:x="15430" fg:w="6"/><text x="58.6748%" y="271.50"></text></g><g><title>__run_timers.part.0 (6 samples, 0.02%)</title><rect x="58.4248%" y="245" width="0.0227%" height="15" fill="rgb(251,92,32)" fg:x="15430" fg:w="6"/><text x="58.6748%" y="255.50"></text></g><g><title>call_timer_fn (6 samples, 0.02%)</title><rect x="58.4248%" y="229" width="0.0227%" height="15" fill="rgb(228,149,22)" fg:x="15430" fg:w="6"/><text x="58.6748%" y="239.50"></text></g><g><title>vbg_heartbeat_timer (6 samples, 0.02%)</title><rect x="58.4248%" y="213" width="0.0227%" height="15" fill="rgb(243,54,13)" fg:x="15430" fg:w="6"/><text x="58.6748%" y="223.50"></text></g><g><title>vbg_req_perform (6 samples, 0.02%)</title><rect x="58.4248%" y="197" width="0.0227%" height="15" fill="rgb(243,180,28)" fg:x="15430" fg:w="6"/><text x="58.6748%" y="207.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (8 samples, 0.03%)</title><rect x="58.4513%" y="373" width="0.0303%" height="15" fill="rgb(208,167,24)" fg:x="15437" fg:w="8"/><text x="58.7013%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (8 samples, 0.03%)</title><rect x="58.4513%" y="357" width="0.0303%" height="15" fill="rgb(245,73,45)" fg:x="15437" fg:w="8"/><text x="58.7013%" y="367.50"></text></g><g><title>irq_exit_rcu (8 samples, 0.03%)</title><rect x="58.4513%" y="341" width="0.0303%" height="15" fill="rgb(237,203,48)" fg:x="15437" fg:w="8"/><text x="58.7013%" y="351.50"></text></g><g><title>__softirqentry_text_start (8 samples, 0.03%)</title><rect x="58.4513%" y="325" width="0.0303%" height="15" fill="rgb(211,197,16)" fg:x="15437" fg:w="8"/><text x="58.7013%" y="335.50"></text></g><g><title>run_timer_softirq (8 samples, 0.03%)</title><rect x="58.4513%" y="309" width="0.0303%" height="15" fill="rgb(243,99,51)" fg:x="15437" fg:w="8"/><text x="58.7013%" y="319.50"></text></g><g><title>__run_timers.part.0 (8 samples, 0.03%)</title><rect x="58.4513%" y="293" width="0.0303%" height="15" fill="rgb(215,123,29)" fg:x="15437" fg:w="8"/><text x="58.7013%" y="303.50"></text></g><g><title>call_timer_fn (8 samples, 0.03%)</title><rect x="58.4513%" y="277" width="0.0303%" height="15" fill="rgb(239,186,37)" fg:x="15437" fg:w="8"/><text x="58.7013%" y="287.50"></text></g><g><title>vbg_heartbeat_timer (8 samples, 0.03%)</title><rect x="58.4513%" y="261" width="0.0303%" height="15" fill="rgb(252,136,39)" fg:x="15437" fg:w="8"/><text x="58.7013%" y="271.50"></text></g><g><title>vbg_req_perform (8 samples, 0.03%)</title><rect x="58.4513%" y="245" width="0.0303%" height="15" fill="rgb(223,213,32)" fg:x="15437" fg:w="8"/><text x="58.7013%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3,498 samples, 13.24%)</title><rect x="45.2404%" y="389" width="13.2450%" height="15" fill="rgb(233,115,5)" fg:x="11948" fg:w="3498"/><text x="45.4904%" y="399.50">core::iter::range::&lt;..</text></g><g><title>asm_common_interrupt (5 samples, 0.02%)</title><rect x="62.5180%" y="373" width="0.0189%" height="15" fill="rgb(207,226,44)" fg:x="16511" fg:w="5"/><text x="62.7680%" y="383.50"></text></g><g><title>common_interrupt (5 samples, 0.02%)</title><rect x="62.5180%" y="357" width="0.0189%" height="15" fill="rgb(208,126,0)" fg:x="16511" fg:w="5"/><text x="62.7680%" y="367.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.02%)</title><rect x="62.5180%" y="341" width="0.0189%" height="15" fill="rgb(244,66,21)" fg:x="16511" fg:w="5"/><text x="62.7680%" y="351.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.02%)</title><rect x="62.5180%" y="325" width="0.0189%" height="15" fill="rgb(222,97,12)" fg:x="16511" fg:w="5"/><text x="62.7680%" y="335.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (13 samples, 0.05%)</title><rect x="62.5369%" y="373" width="0.0492%" height="15" fill="rgb(219,213,19)" fg:x="16516" fg:w="13"/><text x="62.7869%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (13 samples, 0.05%)</title><rect x="62.5369%" y="357" width="0.0492%" height="15" fill="rgb(252,169,30)" fg:x="16516" fg:w="13"/><text x="62.7869%" y="367.50"></text></g><g><title>irq_exit_rcu (13 samples, 0.05%)</title><rect x="62.5369%" y="341" width="0.0492%" height="15" fill="rgb(206,32,51)" fg:x="16516" fg:w="13"/><text x="62.7869%" y="351.50"></text></g><g><title>__softirqentry_text_start (13 samples, 0.05%)</title><rect x="62.5369%" y="325" width="0.0492%" height="15" fill="rgb(250,172,42)" fg:x="16516" fg:w="13"/><text x="62.7869%" y="335.50"></text></g><g><title>run_timer_softirq (12 samples, 0.05%)</title><rect x="62.5407%" y="309" width="0.0454%" height="15" fill="rgb(209,34,43)" fg:x="16517" fg:w="12"/><text x="62.7907%" y="319.50"></text></g><g><title>__run_timers.part.0 (12 samples, 0.05%)</title><rect x="62.5407%" y="293" width="0.0454%" height="15" fill="rgb(223,11,35)" fg:x="16517" fg:w="12"/><text x="62.7907%" y="303.50"></text></g><g><title>call_timer_fn (12 samples, 0.05%)</title><rect x="62.5407%" y="277" width="0.0454%" height="15" fill="rgb(251,219,26)" fg:x="16517" fg:w="12"/><text x="62.7907%" y="287.50"></text></g><g><title>vbg_heartbeat_timer (12 samples, 0.05%)</title><rect x="62.5407%" y="261" width="0.0454%" height="15" fill="rgb(231,119,3)" fg:x="16517" fg:w="12"/><text x="62.7907%" y="271.50"></text></g><g><title>vbg_req_perform (12 samples, 0.05%)</title><rect x="62.5407%" y="245" width="0.0454%" height="15" fill="rgb(216,97,11)" fg:x="16517" fg:w="12"/><text x="62.7907%" y="255.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (6 samples, 0.02%)</title><rect x="65.6191%" y="357" width="0.0227%" height="15" fill="rgb(223,59,9)" fg:x="17330" fg:w="6"/><text x="65.8691%" y="367.50"></text></g><g><title>sysvec_apic_timer_interrupt (6 samples, 0.02%)</title><rect x="65.6191%" y="341" width="0.0227%" height="15" fill="rgb(233,93,31)" fg:x="17330" fg:w="6"/><text x="65.8691%" y="351.50"></text></g><g><title>irq_exit_rcu (6 samples, 0.02%)</title><rect x="65.6191%" y="325" width="0.0227%" height="15" fill="rgb(239,81,33)" fg:x="17330" fg:w="6"/><text x="65.8691%" y="335.50"></text></g><g><title>__softirqentry_text_start (6 samples, 0.02%)</title><rect x="65.6191%" y="309" width="0.0227%" height="15" fill="rgb(213,120,34)" fg:x="17330" fg:w="6"/><text x="65.8691%" y="319.50"></text></g><g><title>run_timer_softirq (6 samples, 0.02%)</title><rect x="65.6191%" y="293" width="0.0227%" height="15" fill="rgb(243,49,53)" fg:x="17330" fg:w="6"/><text x="65.8691%" y="303.50"></text></g><g><title>__run_timers.part.0 (6 samples, 0.02%)</title><rect x="65.6191%" y="277" width="0.0227%" height="15" fill="rgb(247,216,33)" fg:x="17330" fg:w="6"/><text x="65.8691%" y="287.50"></text></g><g><title>call_timer_fn (6 samples, 0.02%)</title><rect x="65.6191%" y="261" width="0.0227%" height="15" fill="rgb(226,26,14)" fg:x="17330" fg:w="6"/><text x="65.8691%" y="271.50"></text></g><g><title>vbg_heartbeat_timer (6 samples, 0.02%)</title><rect x="65.6191%" y="245" width="0.0227%" height="15" fill="rgb(215,49,53)" fg:x="17330" fg:w="6"/><text x="65.8691%" y="255.50"></text></g><g><title>vbg_req_perform (6 samples, 0.02%)</title><rect x="65.6191%" y="229" width="0.0227%" height="15" fill="rgb(245,162,40)" fg:x="17330" fg:w="6"/><text x="65.8691%" y="239.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="66.6414%" y="341" width="0.0114%" height="15" fill="rgb(229,68,17)" fg:x="17600" fg:w="3"/><text x="66.8914%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="66.6414%" y="325" width="0.0114%" height="15" fill="rgb(213,182,10)" fg:x="17600" fg:w="3"/><text x="66.8914%" y="335.50"></text></g><g><title>asm_common_interrupt (4 samples, 0.02%)</title><rect x="68.6785%" y="325" width="0.0151%" height="15" fill="rgb(245,125,30)" fg:x="18138" fg:w="4"/><text x="68.9285%" y="335.50"></text></g><g><title>common_interrupt (4 samples, 0.02%)</title><rect x="68.6785%" y="309" width="0.0151%" height="15" fill="rgb(232,202,2)" fg:x="18138" fg:w="4"/><text x="68.9285%" y="319.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.02%)</title><rect x="68.6785%" y="293" width="0.0151%" height="15" fill="rgb(237,140,51)" fg:x="18138" fg:w="4"/><text x="68.9285%" y="303.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.02%)</title><rect x="68.6785%" y="277" width="0.0151%" height="15" fill="rgb(236,157,25)" fg:x="18138" fg:w="4"/><text x="68.9285%" y="287.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="68.6937%" y="325" width="0.0114%" height="15" fill="rgb(219,209,0)" fg:x="18142" fg:w="3"/><text x="68.9437%" y="335.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="68.6937%" y="309" width="0.0114%" height="15" fill="rgb(240,116,54)" fg:x="18142" fg:w="3"/><text x="68.9437%" y="319.50"></text></g><g><title>asm_common_interrupt (6 samples, 0.02%)</title><rect x="80.0719%" y="309" width="0.0227%" height="15" fill="rgb(216,10,36)" fg:x="21147" fg:w="6"/><text x="80.3219%" y="319.50"></text></g><g><title>common_interrupt (6 samples, 0.02%)</title><rect x="80.0719%" y="293" width="0.0227%" height="15" fill="rgb(222,72,44)" fg:x="21147" fg:w="6"/><text x="80.3219%" y="303.50"></text></g><g><title>irq_exit_rcu (6 samples, 0.02%)</title><rect x="80.0719%" y="277" width="0.0227%" height="15" fill="rgb(232,159,9)" fg:x="21147" fg:w="6"/><text x="80.3219%" y="287.50"></text></g><g><title>__softirqentry_text_start (6 samples, 0.02%)</title><rect x="80.0719%" y="261" width="0.0227%" height="15" fill="rgb(210,39,32)" fg:x="21147" fg:w="6"/><text x="80.3219%" y="271.50"></text></g><g><title>irq_exit_rcu (32 samples, 0.12%)</title><rect x="80.0947%" y="277" width="0.1212%" height="15" fill="rgb(216,194,45)" fg:x="21153" fg:w="32"/><text x="80.3447%" y="287.50"></text></g><g><title>__softirqentry_text_start (32 samples, 0.12%)</title><rect x="80.0947%" y="261" width="0.1212%" height="15" fill="rgb(218,18,35)" fg:x="21153" fg:w="32"/><text x="80.3447%" y="271.50"></text></g><g><title>run_timer_softirq (29 samples, 0.11%)</title><rect x="80.1060%" y="245" width="0.1098%" height="15" fill="rgb(207,83,51)" fg:x="21156" fg:w="29"/><text x="80.3560%" y="255.50"></text></g><g><title>__run_timers.part.0 (29 samples, 0.11%)</title><rect x="80.1060%" y="229" width="0.1098%" height="15" fill="rgb(225,63,43)" fg:x="21156" fg:w="29"/><text x="80.3560%" y="239.50"></text></g><g><title>call_timer_fn (29 samples, 0.11%)</title><rect x="80.1060%" y="213" width="0.1098%" height="15" fill="rgb(207,57,36)" fg:x="21156" fg:w="29"/><text x="80.3560%" y="223.50"></text></g><g><title>vbg_heartbeat_timer (29 samples, 0.11%)</title><rect x="80.1060%" y="197" width="0.1098%" height="15" fill="rgb(216,99,33)" fg:x="21156" fg:w="29"/><text x="80.3560%" y="207.50"></text></g><g><title>vbg_req_perform (29 samples, 0.11%)</title><rect x="80.1060%" y="181" width="0.1098%" height="15" fill="rgb(225,42,16)" fg:x="21156" fg:w="29"/><text x="80.3560%" y="191.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (33 samples, 0.12%)</title><rect x="80.0947%" y="309" width="0.1250%" height="15" fill="rgb(220,201,45)" fg:x="21153" fg:w="33"/><text x="80.3447%" y="319.50"></text></g><g><title>sysvec_apic_timer_interrupt (33 samples, 0.12%)</title><rect x="80.0947%" y="293" width="0.1250%" height="15" fill="rgb(225,33,4)" fg:x="21153" fg:w="33"/><text x="80.3447%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11,834 samples, 44.81%)</title><rect x="35.4146%" y="405" width="44.8088%" height="15" fill="rgb(224,33,50)" fg:x="9353" fg:w="11834"/><text x="35.6646%" y="415.50">core::iter::traits::iterator::Iterator::try_fold</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (5,741 samples, 21.74%)</title><rect x="58.4854%" y="389" width="21.7380%" height="15" fill="rgb(246,198,51)" fg:x="15446" fg:w="5741"/><text x="58.7354%" y="399.50">core::iter::traits::iterator::Iter..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4,658 samples, 17.64%)</title><rect x="62.5861%" y="373" width="17.6373%" height="15" fill="rgb(205,22,4)" fg:x="16529" fg:w="4658"/><text x="62.8361%" y="383.50">core::ops::function::impls:..</text></g><g><title>wfc::wfc::bits256_set::Bits256Set::items::{{closure}} (3,851 samples, 14.58%)</title><rect x="65.6418%" y="357" width="14.5816%" height="15" fill="rgb(206,3,8)" fg:x="17336" fg:w="3851"/><text x="65.8918%" y="367.50">wfc::wfc::bits256_set:..</text></g><g><title>wfc::wfc::bits256_set::Bits256Set::contains (3,584 samples, 13.57%)</title><rect x="66.6528%" y="341" width="13.5706%" height="15" fill="rgb(251,23,15)" fg:x="17603" fg:w="3584"/><text x="66.9028%" y="351.50">wfc::wfc::bits256_set..</text></g><g><title>core::num::&lt;impl u128&gt;::pow (3,042 samples, 11.52%)</title><rect x="68.7050%" y="325" width="11.5184%" height="15" fill="rgb(252,88,28)" fg:x="18145" fg:w="3042"/><text x="68.9550%" y="335.50">core::num::&lt;impl ..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (12,805 samples, 48.49%)</title><rect x="33.0102%" y="437" width="48.4854%" height="15" fill="rgb(212,127,14)" fg:x="8718" fg:w="12805"/><text x="33.2602%" y="447.50">&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iter..</text></g><g><title>core::iter::traits::iterator::Iterator::find (12,570 samples, 47.60%)</title><rect x="33.9000%" y="421" width="47.5956%" height="15" fill="rgb(247,145,37)" fg:x="8953" fg:w="12570"/><text x="34.1500%" y="431.50">core::iter::traits::iterator::Iterator::find</text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (336 samples, 1.27%)</title><rect x="80.2234%" y="405" width="1.2722%" height="15" fill="rgb(209,117,53)" fg:x="21187" fg:w="336"/><text x="80.4734%" y="415.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="81.4843%" y="389" width="0.0114%" height="15" fill="rgb(212,90,42)" fg:x="21520" fg:w="3"/><text x="81.7343%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="81.4843%" y="373" width="0.0114%" height="15" fill="rgb(218,164,37)" fg:x="21520" fg:w="3"/><text x="81.7343%" y="383.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.01%)</title><rect x="81.4843%" y="357" width="0.0114%" height="15" fill="rgb(246,65,34)" fg:x="21520" fg:w="3"/><text x="81.7343%" y="367.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.01%)</title><rect x="81.4843%" y="341" width="0.0114%" height="15" fill="rgb(231,100,33)" fg:x="21520" fg:w="3"/><text x="81.7343%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (27 samples, 0.10%)</title><rect x="81.4956%" y="437" width="0.1022%" height="15" fill="rgb(228,126,14)" fg:x="21523" fg:w="27"/><text x="81.7456%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (11 samples, 0.04%)</title><rect x="81.5562%" y="421" width="0.0417%" height="15" fill="rgb(215,173,21)" fg:x="21539" fg:w="11"/><text x="81.8062%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.02%)</title><rect x="81.6017%" y="421" width="0.0151%" height="15" fill="rgb(210,6,40)" fg:x="21551" fg:w="4"/><text x="81.8517%" y="431.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (7 samples, 0.03%)</title><rect x="82.9761%" y="405" width="0.0265%" height="15" fill="rgb(212,48,18)" fg:x="21914" fg:w="7"/><text x="83.2261%" y="415.50"></text></g><g><title>sysvec_apic_timer_interrupt (7 samples, 0.03%)</title><rect x="82.9761%" y="389" width="0.0265%" height="15" fill="rgb(230,214,11)" fg:x="21914" fg:w="7"/><text x="83.2261%" y="399.50"></text></g><g><title>irq_exit_rcu (7 samples, 0.03%)</title><rect x="82.9761%" y="373" width="0.0265%" height="15" fill="rgb(254,105,39)" fg:x="21914" fg:w="7"/><text x="83.2261%" y="383.50"></text></g><g><title>__softirqentry_text_start (7 samples, 0.03%)</title><rect x="82.9761%" y="357" width="0.0265%" height="15" fill="rgb(245,158,5)" fg:x="21914" fg:w="7"/><text x="83.2261%" y="367.50"></text></g><g><title>run_timer_softirq (6 samples, 0.02%)</title><rect x="82.9799%" y="341" width="0.0227%" height="15" fill="rgb(249,208,11)" fg:x="21915" fg:w="6"/><text x="83.2299%" y="351.50"></text></g><g><title>__run_timers.part.0 (6 samples, 0.02%)</title><rect x="82.9799%" y="325" width="0.0227%" height="15" fill="rgb(210,39,28)" fg:x="21915" fg:w="6"/><text x="83.2299%" y="335.50"></text></g><g><title>call_timer_fn (6 samples, 0.02%)</title><rect x="82.9799%" y="309" width="0.0227%" height="15" fill="rgb(211,56,53)" fg:x="21915" fg:w="6"/><text x="83.2299%" y="319.50"></text></g><g><title>vbg_heartbeat_timer (6 samples, 0.02%)</title><rect x="82.9799%" y="293" width="0.0227%" height="15" fill="rgb(226,201,30)" fg:x="21915" fg:w="6"/><text x="83.2299%" y="303.50"></text></g><g><title>vbg_req_perform (6 samples, 0.02%)</title><rect x="82.9799%" y="277" width="0.0227%" height="15" fill="rgb(239,101,34)" fg:x="21915" fg:w="6"/><text x="83.2299%" y="287.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="84.0023%" y="389" width="0.0189%" height="15" fill="rgb(226,209,5)" fg:x="22185" fg:w="5"/><text x="84.2523%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="84.0023%" y="373" width="0.0189%" height="15" fill="rgb(250,105,47)" fg:x="22185" fg:w="5"/><text x="84.2523%" y="383.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.02%)</title><rect x="84.0023%" y="357" width="0.0189%" height="15" fill="rgb(230,72,3)" fg:x="22185" fg:w="5"/><text x="84.2523%" y="367.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.02%)</title><rect x="84.0023%" y="341" width="0.0189%" height="15" fill="rgb(232,218,39)" fg:x="22185" fg:w="5"/><text x="84.2523%" y="351.50"></text></g><g><title>run_timer_softirq (5 samples, 0.02%)</title><rect x="84.0023%" y="325" width="0.0189%" height="15" fill="rgb(248,166,6)" fg:x="22185" fg:w="5"/><text x="84.2523%" y="335.50"></text></g><g><title>__run_timers.part.0 (5 samples, 0.02%)</title><rect x="84.0023%" y="309" width="0.0189%" height="15" fill="rgb(247,89,20)" fg:x="22185" fg:w="5"/><text x="84.2523%" y="319.50"></text></g><g><title>call_timer_fn (5 samples, 0.02%)</title><rect x="84.0023%" y="293" width="0.0189%" height="15" fill="rgb(248,130,54)" fg:x="22185" fg:w="5"/><text x="84.2523%" y="303.50"></text></g><g><title>vbg_heartbeat_timer (5 samples, 0.02%)</title><rect x="84.0023%" y="277" width="0.0189%" height="15" fill="rgb(234,196,4)" fg:x="22185" fg:w="5"/><text x="84.2523%" y="287.50"></text></g><g><title>vbg_req_perform (5 samples, 0.02%)</title><rect x="84.0023%" y="261" width="0.0189%" height="15" fill="rgb(250,143,31)" fg:x="22185" fg:w="5"/><text x="84.2523%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (479 samples, 1.81%)</title><rect x="83.0027%" y="405" width="1.8137%" height="15" fill="rgb(211,110,34)" fg:x="21921" fg:w="479"/><text x="83.2527%" y="415.50">c..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (210 samples, 0.80%)</title><rect x="84.0212%" y="389" width="0.7952%" height="15" fill="rgb(215,124,48)" fg:x="22190" fg:w="210"/><text x="84.2712%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (931 samples, 3.53%)</title><rect x="81.5979%" y="437" width="3.5252%" height="15" fill="rgb(216,46,13)" fg:x="21550" fg:w="931"/><text x="81.8479%" y="447.50">all..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (926 samples, 3.51%)</title><rect x="81.6168%" y="421" width="3.5062%" height="15" fill="rgb(205,184,25)" fg:x="21555" fg:w="926"/><text x="81.8668%" y="431.50">cor..</text></g><g><title>core::ptr::null_mut (81 samples, 0.31%)</title><rect x="84.8164%" y="405" width="0.3067%" height="15" fill="rgb(228,1,10)" fg:x="22400" fg:w="81"/><text x="85.0664%" y="415.50"></text></g><g><title>core::ptr::invalid_mut (46 samples, 0.17%)</title><rect x="84.9489%" y="389" width="0.1742%" height="15" fill="rgb(213,116,27)" fg:x="22435" fg:w="46"/><text x="85.1989%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (9 samples, 0.03%)</title><rect x="85.1231%" y="437" width="0.0341%" height="15" fill="rgb(241,95,50)" fg:x="22481" fg:w="9"/><text x="85.3731%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (9 samples, 0.03%)</title><rect x="85.1231%" y="421" width="0.0341%" height="15" fill="rgb(238,48,32)" fg:x="22481" fg:w="9"/><text x="85.3731%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (12 samples, 0.05%)</title><rect x="85.1571%" y="437" width="0.0454%" height="15" fill="rgb(235,113,49)" fg:x="22490" fg:w="12"/><text x="85.4071%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (10 samples, 0.04%)</title><rect x="85.2442%" y="405" width="0.0379%" height="15" fill="rgb(205,127,43)" fg:x="22513" fg:w="10"/><text x="85.4942%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.02%)</title><rect x="85.3351%" y="373" width="0.0189%" height="15" fill="rgb(250,162,2)" fg:x="22537" fg:w="5"/><text x="85.5851%" y="383.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (9 samples, 0.03%)</title><rect x="85.3919%" y="357" width="0.0341%" height="15" fill="rgb(220,13,41)" fg:x="22552" fg:w="9"/><text x="85.6419%" y="367.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (5 samples, 0.02%)</title><rect x="85.4070%" y="341" width="0.0189%" height="15" fill="rgb(249,221,25)" fg:x="22556" fg:w="5"/><text x="85.6570%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array (14 samples, 0.05%)</title><rect x="85.4260%" y="357" width="0.0530%" height="15" fill="rgb(215,208,19)" fg:x="22561" fg:w="14"/><text x="85.6760%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (14 samples, 0.05%)</title><rect x="85.4260%" y="341" width="0.0530%" height="15" fill="rgb(236,175,2)" fg:x="22561" fg:w="14"/><text x="85.6760%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (47 samples, 0.18%)</title><rect x="85.3540%" y="373" width="0.1780%" height="15" fill="rgb(241,52,2)" fg:x="22542" fg:w="47"/><text x="85.6040%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (13 samples, 0.05%)</title><rect x="85.4828%" y="357" width="0.0492%" height="15" fill="rgb(248,140,14)" fg:x="22576" fg:w="13"/><text x="85.7328%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (10 samples, 0.04%)</title><rect x="85.5320%" y="373" width="0.0379%" height="15" fill="rgb(253,22,42)" fg:x="22589" fg:w="10"/><text x="85.7820%" y="383.50"></text></g><g><title>__rdl_realloc (8 samples, 0.03%)</title><rect x="85.6267%" y="309" width="0.0303%" height="15" fill="rgb(234,61,47)" fg:x="22614" fg:w="8"/><text x="85.8767%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3 samples, 0.01%)</title><rect x="85.6456%" y="293" width="0.0114%" height="15" fill="rgb(208,226,15)" fg:x="22619" fg:w="3"/><text x="85.8956%" y="303.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="85.8236%" y="261" width="0.0151%" height="15" fill="rgb(217,221,4)" fg:x="22666" fg:w="4"/><text x="86.0736%" y="271.50"></text></g><g><title>alloc::alloc::realloc (61 samples, 0.23%)</title><rect x="85.6153%" y="325" width="0.2310%" height="15" fill="rgb(212,174,34)" fg:x="22611" fg:w="61"/><text x="85.8653%" y="335.50"></text></g><g><title>realloc (50 samples, 0.19%)</title><rect x="85.6569%" y="309" width="0.1893%" height="15" fill="rgb(253,83,4)" fg:x="22622" fg:w="50"/><text x="85.9069%" y="319.50"></text></g><g><title>[libc.so.6] (43 samples, 0.16%)</title><rect x="85.6835%" y="293" width="0.1628%" height="15" fill="rgb(250,195,49)" fg:x="22629" fg:w="43"/><text x="85.9335%" y="303.50"></text></g><g><title>[libc.so.6] (40 samples, 0.15%)</title><rect x="85.6948%" y="277" width="0.1515%" height="15" fill="rgb(241,192,25)" fg:x="22632" fg:w="40"/><text x="85.9448%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (14 samples, 0.05%)</title><rect x="85.9371%" y="293" width="0.0530%" height="15" fill="rgb(208,124,10)" fg:x="22696" fg:w="14"/><text x="86.1871%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (7 samples, 0.03%)</title><rect x="85.9637%" y="277" width="0.0265%" height="15" fill="rgb(222,33,0)" fg:x="22703" fg:w="7"/><text x="86.2137%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (106 samples, 0.40%)</title><rect x="85.6002%" y="357" width="0.4014%" height="15" fill="rgb(234,209,28)" fg:x="22607" fg:w="106"/><text x="85.8502%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (106 samples, 0.40%)</title><rect x="85.6002%" y="341" width="0.4014%" height="15" fill="rgb(224,11,23)" fg:x="22607" fg:w="106"/><text x="85.8502%" y="351.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (38 samples, 0.14%)</title><rect x="85.8576%" y="325" width="0.1439%" height="15" fill="rgb(232,99,1)" fg:x="22675" fg:w="38"/><text x="86.1076%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (29 samples, 0.11%)</title><rect x="85.8917%" y="309" width="0.1098%" height="15" fill="rgb(237,95,45)" fg:x="22684" fg:w="29"/><text x="86.1417%" y="319.50"></text></g><g><title>core::ptr::null_mut (3 samples, 0.01%)</title><rect x="85.9902%" y="293" width="0.0114%" height="15" fill="rgb(208,109,11)" fg:x="22710" fg:w="3"/><text x="86.2402%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (135 samples, 0.51%)</title><rect x="85.5699%" y="373" width="0.5112%" height="15" fill="rgb(216,190,48)" fg:x="22599" fg:w="135"/><text x="85.8199%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (19 samples, 0.07%)</title><rect x="86.0091%" y="357" width="0.0719%" height="15" fill="rgb(251,171,36)" fg:x="22715" fg:w="19"/><text x="86.2591%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array (13 samples, 0.05%)</title><rect x="86.0810%" y="373" width="0.0492%" height="15" fill="rgb(230,62,22)" fg:x="22734" fg:w="13"/><text x="86.3310%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (12 samples, 0.05%)</title><rect x="86.0848%" y="357" width="0.0454%" height="15" fill="rgb(225,114,35)" fg:x="22735" fg:w="12"/><text x="86.3348%" y="367.50"></text></g><g><title>core::cmp::max (37 samples, 0.14%)</title><rect x="86.1303%" y="373" width="0.1401%" height="15" fill="rgb(215,118,42)" fg:x="22747" fg:w="37"/><text x="86.3803%" y="383.50"></text></g><g><title>core::cmp::Ord::max (37 samples, 0.14%)</title><rect x="86.1303%" y="357" width="0.1401%" height="15" fill="rgb(243,119,21)" fg:x="22747" fg:w="37"/><text x="86.3803%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (11 samples, 0.04%)</title><rect x="86.2287%" y="341" width="0.0417%" height="15" fill="rgb(252,177,53)" fg:x="22773" fg:w="11"/><text x="86.4787%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (267 samples, 1.01%)</title><rect x="85.3048%" y="389" width="1.0110%" height="15" fill="rgb(237,209,29)" fg:x="22529" fg:w="267"/><text x="85.5548%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (12 samples, 0.05%)</title><rect x="86.2704%" y="373" width="0.0454%" height="15" fill="rgb(212,65,23)" fg:x="22784" fg:w="12"/><text x="86.5204%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (5 samples, 0.02%)</title><rect x="86.2969%" y="357" width="0.0189%" height="15" fill="rgb(230,222,46)" fg:x="22791" fg:w="5"/><text x="86.5469%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (305 samples, 1.15%)</title><rect x="85.2026%" y="437" width="1.1549%" height="15" fill="rgb(215,135,32)" fg:x="22502" fg:w="305"/><text x="85.4526%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (297 samples, 1.12%)</title><rect x="85.2329%" y="421" width="1.1246%" height="15" fill="rgb(246,101,22)" fg:x="22510" fg:w="297"/><text x="85.4829%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (284 samples, 1.08%)</title><rect x="85.2821%" y="405" width="1.0754%" height="15" fill="rgb(206,107,13)" fg:x="22523" fg:w="284"/><text x="85.5321%" y="415.50"></text></g><g><title>alloc::raw_vec::handle_reserve (11 samples, 0.04%)</title><rect x="86.3158%" y="389" width="0.0417%" height="15" fill="rgb(250,100,44)" fg:x="22796" fg:w="11"/><text x="86.5658%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (10 samples, 0.04%)</title><rect x="86.3196%" y="373" width="0.0379%" height="15" fill="rgb(231,147,38)" fg:x="22797" fg:w="10"/><text x="86.5696%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14,271 samples, 54.04%)</title><rect x="32.3665%" y="469" width="54.0363%" height="15" fill="rgb(229,8,40)" fg:x="8548" fg:w="14271"/><text x="32.6165%" y="479.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (14,269 samples, 54.03%)</title><rect x="32.3741%" y="453" width="54.0288%" height="15" fill="rgb(221,135,30)" fg:x="8550" fg:w="14269"/><text x="32.6241%" y="463.50">alloc::vec::Vec&lt;T,A&gt;::extend_desugared</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.04%)</title><rect x="86.3650%" y="437" width="0.0379%" height="15" fill="rgb(249,193,18)" fg:x="22809" fg:w="10"/><text x="86.6150%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.02%)</title><rect x="86.3802%" y="421" width="0.0227%" height="15" fill="rgb(209,133,39)" fg:x="22813" fg:w="6"/><text x="86.6302%" y="431.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::FromResidual&gt;::from_residual (5 samples, 0.02%)</title><rect x="86.8724%" y="421" width="0.0189%" height="15" fill="rgb(232,100,14)" fg:x="22943" fg:w="5"/><text x="87.1224%" y="431.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (56 samples, 0.21%)</title><rect x="86.8913%" y="421" width="0.2120%" height="15" fill="rgb(224,185,1)" fg:x="22948" fg:w="56"/><text x="87.1413%" y="431.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="87.0920%" y="405" width="0.0114%" height="15" fill="rgb(223,139,8)" fg:x="23001" fg:w="3"/><text x="87.3420%" y="415.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="87.0920%" y="389" width="0.0114%" height="15" fill="rgb(232,213,38)" fg:x="23001" fg:w="3"/><text x="87.3420%" y="399.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.01%)</title><rect x="87.0920%" y="373" width="0.0114%" height="15" fill="rgb(207,94,22)" fg:x="23001" fg:w="3"/><text x="87.3420%" y="383.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.01%)</title><rect x="87.0920%" y="357" width="0.0114%" height="15" fill="rgb(219,183,54)" fg:x="23001" fg:w="3"/><text x="87.3420%" y="367.50"></text></g><g><title>run_timer_softirq (3 samples, 0.01%)</title><rect x="87.0920%" y="341" width="0.0114%" height="15" fill="rgb(216,185,54)" fg:x="23001" fg:w="3"/><text x="87.3420%" y="351.50"></text></g><g><title>__run_timers.part.0 (3 samples, 0.01%)</title><rect x="87.0920%" y="325" width="0.0114%" height="15" fill="rgb(254,217,39)" fg:x="23001" fg:w="3"/><text x="87.3420%" y="335.50"></text></g><g><title>call_timer_fn (3 samples, 0.01%)</title><rect x="87.0920%" y="309" width="0.0114%" height="15" fill="rgb(240,178,23)" fg:x="23001" fg:w="3"/><text x="87.3420%" y="319.50"></text></g><g><title>vbg_heartbeat_timer (3 samples, 0.01%)</title><rect x="87.0920%" y="293" width="0.0114%" height="15" fill="rgb(218,11,47)" fg:x="23001" fg:w="3"/><text x="87.3420%" y="303.50"></text></g><g><title>vbg_req_perform (3 samples, 0.01%)</title><rect x="87.0920%" y="277" width="0.0114%" height="15" fill="rgb(218,51,51)" fg:x="23001" fg:w="3"/><text x="87.3420%" y="287.50"></text></g><g><title>&lt;u8 as core::iter::range::Step&gt;::forward_unchecked (49 samples, 0.19%)</title><rect x="87.8607%" y="389" width="0.1855%" height="15" fill="rgb(238,126,27)" fg:x="23204" fg:w="49"/><text x="88.1107%" y="399.50"></text></g><g><title>core::num::&lt;impl u8&gt;::unchecked_add (21 samples, 0.08%)</title><rect x="87.9667%" y="373" width="0.0795%" height="15" fill="rgb(249,202,22)" fg:x="23232" fg:w="21"/><text x="88.2167%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (5 samples, 0.02%)</title><rect x="88.0613%" y="389" width="0.0189%" height="15" fill="rgb(254,195,49)" fg:x="23257" fg:w="5"/><text x="88.3113%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (284 samples, 1.08%)</title><rect x="87.3684%" y="405" width="1.0754%" height="15" fill="rgb(208,123,14)" fg:x="23074" fg:w="284"/><text x="87.6184%" y="415.50"></text></g><g><title>core::mem::replace (96 samples, 0.36%)</title><rect x="88.0803%" y="389" width="0.3635%" height="15" fill="rgb(224,200,8)" fg:x="23262" fg:w="96"/><text x="88.3303%" y="399.50"></text></g><g><title>core::ptr::read (46 samples, 0.17%)</title><rect x="88.2696%" y="373" width="0.1742%" height="15" fill="rgb(217,61,36)" fg:x="23312" fg:w="46"/><text x="88.5196%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (354 samples, 1.34%)</title><rect x="87.1072%" y="421" width="1.3404%" height="15" fill="rgb(206,35,45)" fg:x="23005" fg:w="354"/><text x="87.3572%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,040 samples, 3.94%)</title><rect x="86.4445%" y="437" width="3.9379%" height="15" fill="rgb(217,65,33)" fg:x="22830" fg:w="1040"/><text x="86.6945%" y="447.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (511 samples, 1.93%)</title><rect x="88.4476%" y="421" width="1.9349%" height="15" fill="rgb(222,158,48)" fg:x="23359" fg:w="511"/><text x="88.6976%" y="431.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (421 samples, 1.59%)</title><rect x="88.7883%" y="405" width="1.5941%" height="15" fill="rgb(254,2,54)" fg:x="23449" fg:w="421"/><text x="89.0383%" y="415.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::items::{{closure}} (336 samples, 1.27%)</title><rect x="89.1102%" y="389" width="1.2722%" height="15" fill="rgb(250,143,38)" fg:x="23534" fg:w="336"/><text x="89.3602%" y="399.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::contains (311 samples, 1.18%)</title><rect x="89.2048%" y="373" width="1.1776%" height="15" fill="rgb(248,25,0)" fg:x="23559" fg:w="311"/><text x="89.4548%" y="383.50"></text></g><g><title>core::num::&lt;impl u128&gt;::pow (259 samples, 0.98%)</title><rect x="89.4017%" y="357" width="0.9807%" height="15" fill="rgb(206,152,27)" fg:x="23611" fg:w="259"/><text x="89.6517%" y="367.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (8 samples, 0.03%)</title><rect x="90.3521%" y="341" width="0.0303%" height="15" fill="rgb(240,77,30)" fg:x="23862" fg:w="8"/><text x="90.6021%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (8 samples, 0.03%)</title><rect x="90.3521%" y="325" width="0.0303%" height="15" fill="rgb(231,5,3)" fg:x="23862" fg:w="8"/><text x="90.6021%" y="335.50"></text></g><g><title>irq_exit_rcu (8 samples, 0.03%)</title><rect x="90.3521%" y="309" width="0.0303%" height="15" fill="rgb(207,226,32)" fg:x="23862" fg:w="8"/><text x="90.6021%" y="319.50"></text></g><g><title>__softirqentry_text_start (8 samples, 0.03%)</title><rect x="90.3521%" y="293" width="0.0303%" height="15" fill="rgb(222,207,47)" fg:x="23862" fg:w="8"/><text x="90.6021%" y="303.50"></text></g><g><title>run_timer_softirq (8 samples, 0.03%)</title><rect x="90.3521%" y="277" width="0.0303%" height="15" fill="rgb(229,115,45)" fg:x="23862" fg:w="8"/><text x="90.6021%" y="287.50"></text></g><g><title>__run_timers.part.0 (8 samples, 0.03%)</title><rect x="90.3521%" y="261" width="0.0303%" height="15" fill="rgb(224,191,6)" fg:x="23862" fg:w="8"/><text x="90.6021%" y="271.50"></text></g><g><title>call_timer_fn (8 samples, 0.03%)</title><rect x="90.3521%" y="245" width="0.0303%" height="15" fill="rgb(230,227,24)" fg:x="23862" fg:w="8"/><text x="90.6021%" y="255.50"></text></g><g><title>vbg_heartbeat_timer (8 samples, 0.03%)</title><rect x="90.3521%" y="229" width="0.0303%" height="15" fill="rgb(228,80,19)" fg:x="23862" fg:w="8"/><text x="90.6021%" y="239.50"></text></g><g><title>vbg_req_perform (8 samples, 0.03%)</title><rect x="90.3521%" y="213" width="0.0303%" height="15" fill="rgb(247,229,0)" fg:x="23862" fg:w="8"/><text x="90.6021%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,055 samples, 3.99%)</title><rect x="86.4029%" y="469" width="3.9947%" height="15" fill="rgb(237,194,15)" fg:x="22819" fg:w="1055"/><text x="86.6529%" y="479.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::find (1,051 samples, 3.98%)</title><rect x="86.4180%" y="453" width="3.9796%" height="15" fill="rgb(219,203,20)" fg:x="22823" fg:w="1051"/><text x="86.6680%" y="463.50">core..</text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (4 samples, 0.02%)</title><rect x="90.3824%" y="437" width="0.0151%" height="15" fill="rgb(234,128,8)" fg:x="23870" fg:w="4"/><text x="90.6324%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (10 samples, 0.04%)</title><rect x="90.3976%" y="469" width="0.0379%" height="15" fill="rgb(248,202,8)" fg:x="23874" fg:w="10"/><text x="90.6476%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (5 samples, 0.02%)</title><rect x="90.4165%" y="453" width="0.0189%" height="15" fill="rgb(206,104,37)" fg:x="23879" fg:w="5"/><text x="90.6665%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (9 samples, 0.03%)</title><rect x="90.4354%" y="469" width="0.0341%" height="15" fill="rgb(223,8,27)" fg:x="23884" fg:w="9"/><text x="90.6854%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (8 samples, 0.03%)</title><rect x="90.4392%" y="453" width="0.0303%" height="15" fill="rgb(216,217,28)" fg:x="23885" fg:w="8"/><text x="90.6892%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.01%)</title><rect x="90.4582%" y="437" width="0.0114%" height="15" fill="rgb(249,199,1)" fg:x="23890" fg:w="3"/><text x="90.7082%" y="447.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.03%)</title><rect x="90.4922%" y="373" width="0.0265%" height="15" fill="rgb(240,85,17)" fg:x="23899" fg:w="7"/><text x="90.7422%" y="383.50"></text></g><g><title>malloc (7 samples, 0.03%)</title><rect x="90.4922%" y="357" width="0.0265%" height="15" fill="rgb(206,108,45)" fg:x="23899" fg:w="7"/><text x="90.7422%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (15 samples, 0.06%)</title><rect x="90.5187%" y="373" width="0.0568%" height="15" fill="rgb(245,210,41)" fg:x="23906" fg:w="15"/><text x="90.7687%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (11 samples, 0.04%)</title><rect x="90.5339%" y="357" width="0.0417%" height="15" fill="rgb(206,13,37)" fg:x="23910" fg:w="11"/><text x="90.7839%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="90.5566%" y="341" width="0.0189%" height="15" fill="rgb(250,61,18)" fg:x="23916" fg:w="5"/><text x="90.8066%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.09%)</title><rect x="90.4922%" y="405" width="0.0871%" height="15" fill="rgb(235,172,48)" fg:x="23899" fg:w="23"/><text x="90.7422%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.09%)</title><rect x="90.4922%" y="389" width="0.0871%" height="15" fill="rgb(249,201,17)" fg:x="23899" fg:w="23"/><text x="90.7422%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (9 samples, 0.03%)</title><rect x="90.5793%" y="405" width="0.0341%" height="15" fill="rgb(219,208,6)" fg:x="23922" fg:w="9"/><text x="90.8293%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (9 samples, 0.03%)</title><rect x="90.5793%" y="389" width="0.0341%" height="15" fill="rgb(248,31,23)" fg:x="23922" fg:w="9"/><text x="90.8293%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (40 samples, 0.15%)</title><rect x="90.4695%" y="469" width="0.1515%" height="15" fill="rgb(245,15,42)" fg:x="23893" fg:w="40"/><text x="90.7195%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (40 samples, 0.15%)</title><rect x="90.4695%" y="453" width="0.1515%" height="15" fill="rgb(222,217,39)" fg:x="23893" fg:w="40"/><text x="90.7195%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (40 samples, 0.15%)</title><rect x="90.4695%" y="437" width="0.1515%" height="15" fill="rgb(210,219,27)" fg:x="23893" fg:w="40"/><text x="90.7195%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (39 samples, 0.15%)</title><rect x="90.4733%" y="421" width="0.1477%" height="15" fill="rgb(252,166,36)" fg:x="23894" fg:w="39"/><text x="90.7233%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15,404 samples, 58.33%)</title><rect x="32.3059%" y="533" width="58.3264%" height="15" fill="rgb(245,132,34)" fg:x="8532" fg:w="15404"/><text x="32.5559%" y="543.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15,400 samples, 58.31%)</title><rect x="32.3211%" y="517" width="58.3112%" height="15" fill="rgb(236,54,3)" fg:x="8536" fg:w="15400"/><text x="32.5711%" y="527.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15,397 samples, 58.30%)</title><rect x="32.3324%" y="501" width="58.2999%" height="15" fill="rgb(241,173,43)" fg:x="8539" fg:w="15397"/><text x="32.5824%" y="511.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15,394 samples, 58.29%)</title><rect x="32.3438%" y="485" width="58.2885%" height="15" fill="rgb(215,190,9)" fg:x="8542" fg:w="15394"/><text x="32.5938%" y="495.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>wfc::wfc::bits256_set::Bits256Set::items (15,406 samples, 58.33%)</title><rect x="32.3059%" y="549" width="58.3340%" height="15" fill="rgb(242,101,16)" fg:x="8532" fg:w="15406"/><text x="32.5559%" y="559.50">wfc::wfc::bits256_set::Bits256Set::items</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (6 samples, 0.02%)</title><rect x="90.6551%" y="501" width="0.0227%" height="15" fill="rgb(223,190,21)" fg:x="23942" fg:w="6"/><text x="90.9051%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.06%)</title><rect x="90.6513%" y="517" width="0.0644%" height="15" fill="rgb(215,228,25)" fg:x="23941" fg:w="17"/><text x="90.9013%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (10 samples, 0.04%)</title><rect x="90.6778%" y="501" width="0.0379%" height="15" fill="rgb(225,36,22)" fg:x="23948" fg:w="10"/><text x="90.9278%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (8 samples, 0.03%)</title><rect x="90.6853%" y="485" width="0.0303%" height="15" fill="rgb(251,106,46)" fg:x="23950" fg:w="8"/><text x="90.9353%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (21 samples, 0.08%)</title><rect x="90.6399%" y="533" width="0.0795%" height="15" fill="rgb(208,90,1)" fg:x="23938" fg:w="21"/><text x="90.8899%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="90.7194%" y="517" width="0.0114%" height="15" fill="rgb(243,10,4)" fg:x="23959" fg:w="3"/><text x="90.9694%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;wfc::wfc::bits256_set::Bits256Set&gt;&gt; (7 samples, 0.03%)</title><rect x="90.7194%" y="533" width="0.0265%" height="15" fill="rgb(212,137,27)" fg:x="23959" fg:w="7"/><text x="90.9694%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;wfc::wfc::bits256_set::Bits256Set&gt;&gt; (4 samples, 0.02%)</title><rect x="90.7308%" y="517" width="0.0151%" height="15" fill="rgb(231,220,49)" fg:x="23962" fg:w="4"/><text x="90.9808%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="90.7308%" y="501" width="0.0151%" height="15" fill="rgb(237,96,20)" fg:x="23962" fg:w="4"/><text x="90.9808%" y="511.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::new_intersection (31 samples, 0.12%)</title><rect x="90.6399%" y="549" width="0.1174%" height="15" fill="rgb(239,229,30)" fg:x="23938" fg:w="31"/><text x="90.8899%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (3 samples, 0.01%)</title><rect x="90.7459%" y="533" width="0.0114%" height="15" fill="rgb(219,65,33)" fg:x="23966" fg:w="3"/><text x="90.9959%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (4 samples, 0.02%)</title><rect x="90.8217%" y="485" width="0.0151%" height="15" fill="rgb(243,134,7)" fg:x="23986" fg:w="4"/><text x="91.0717%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.05%)</title><rect x="90.7914%" y="533" width="0.0530%" height="15" fill="rgb(216,177,54)" fg:x="23978" fg:w="14"/><text x="91.0414%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (12 samples, 0.05%)</title><rect x="90.7989%" y="517" width="0.0454%" height="15" fill="rgb(211,160,20)" fg:x="23980" fg:w="12"/><text x="91.0489%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (12 samples, 0.05%)</title><rect x="90.7989%" y="501" width="0.0454%" height="15" fill="rgb(239,85,39)" fg:x="23980" fg:w="12"/><text x="91.0489%" y="511.50"></text></g><g><title>call_timer_fn (5 samples, 0.02%)</title><rect x="93.4305%" y="389" width="0.0189%" height="15" fill="rgb(232,125,22)" fg:x="24675" fg:w="5"/><text x="93.6805%" y="399.50"></text></g><g><title>vbg_heartbeat_timer (5 samples, 0.02%)</title><rect x="93.4305%" y="373" width="0.0189%" height="15" fill="rgb(244,57,34)" fg:x="24675" fg:w="5"/><text x="93.6805%" y="383.50"></text></g><g><title>vbg_req_perform (5 samples, 0.02%)</title><rect x="93.4305%" y="357" width="0.0189%" height="15" fill="rgb(214,203,32)" fg:x="24675" fg:w="5"/><text x="93.6805%" y="367.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (6 samples, 0.02%)</title><rect x="93.4305%" y="485" width="0.0227%" height="15" fill="rgb(207,58,43)" fg:x="24675" fg:w="6"/><text x="93.6805%" y="495.50"></text></g><g><title>sysvec_apic_timer_interrupt (6 samples, 0.02%)</title><rect x="93.4305%" y="469" width="0.0227%" height="15" fill="rgb(215,193,15)" fg:x="24675" fg:w="6"/><text x="93.6805%" y="479.50"></text></g><g><title>irq_exit_rcu (6 samples, 0.02%)</title><rect x="93.4305%" y="453" width="0.0227%" height="15" fill="rgb(232,15,44)" fg:x="24675" fg:w="6"/><text x="93.6805%" y="463.50"></text></g><g><title>__softirqentry_text_start (6 samples, 0.02%)</title><rect x="93.4305%" y="437" width="0.0227%" height="15" fill="rgb(212,3,48)" fg:x="24675" fg:w="6"/><text x="93.6805%" y="447.50"></text></g><g><title>run_timer_softirq (6 samples, 0.02%)</title><rect x="93.4305%" y="421" width="0.0227%" height="15" fill="rgb(218,128,7)" fg:x="24675" fg:w="6"/><text x="93.6805%" y="431.50"></text></g><g><title>__run_timers.part.0 (6 samples, 0.02%)</title><rect x="93.4305%" y="405" width="0.0227%" height="15" fill="rgb(226,216,39)" fg:x="24675" fg:w="6"/><text x="93.6805%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (76 samples, 0.29%)</title><rect x="93.4532%" y="485" width="0.2878%" height="15" fill="rgb(243,47,51)" fg:x="24681" fg:w="76"/><text x="93.7032%" y="495.50"></text></g><g><title>core::ptr::invalid (45 samples, 0.17%)</title><rect x="93.8622%" y="469" width="0.1704%" height="15" fill="rgb(241,183,40)" fg:x="24789" fg:w="45"/><text x="94.1122%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (530 samples, 2.01%)</title><rect x="92.1053%" y="501" width="2.0068%" height="15" fill="rgb(231,217,32)" fg:x="24325" fg:w="530"/><text x="92.3553%" y="511.50">c..</text></g><g><title>core::ptr::null (98 samples, 0.37%)</title><rect x="93.7410%" y="485" width="0.3711%" height="15" fill="rgb(229,61,38)" fg:x="24757" fg:w="98"/><text x="93.9910%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (21 samples, 0.08%)</title><rect x="94.0326%" y="469" width="0.0795%" height="15" fill="rgb(225,210,5)" fg:x="24834" fg:w="21"/><text x="94.2826%" y="479.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.02%)</title><rect x="95.5699%" y="453" width="0.0151%" height="15" fill="rgb(231,79,45)" fg:x="25240" fg:w="4"/><text x="95.8199%" y="463.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.02%)</title><rect x="95.5699%" y="437" width="0.0151%" height="15" fill="rgb(224,100,7)" fg:x="25240" fg:w="4"/><text x="95.8199%" y="447.50"></text></g><g><title>run_timer_softirq (4 samples, 0.02%)</title><rect x="95.5699%" y="421" width="0.0151%" height="15" fill="rgb(241,198,18)" fg:x="25240" fg:w="4"/><text x="95.8199%" y="431.50"></text></g><g><title>__run_timers.part.0 (4 samples, 0.02%)</title><rect x="95.5699%" y="405" width="0.0151%" height="15" fill="rgb(252,97,53)" fg:x="25240" fg:w="4"/><text x="95.8199%" y="415.50"></text></g><g><title>call_timer_fn (4 samples, 0.02%)</title><rect x="95.5699%" y="389" width="0.0151%" height="15" fill="rgb(220,88,7)" fg:x="25240" fg:w="4"/><text x="95.8199%" y="399.50"></text></g><g><title>vbg_heartbeat_timer (4 samples, 0.02%)</title><rect x="95.5699%" y="373" width="0.0151%" height="15" fill="rgb(213,176,14)" fg:x="25240" fg:w="4"/><text x="95.8199%" y="383.50"></text></g><g><title>vbg_req_perform (4 samples, 0.02%)</title><rect x="95.5699%" y="357" width="0.0151%" height="15" fill="rgb(246,73,7)" fg:x="25240" fg:w="4"/><text x="95.8199%" y="367.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (6 samples, 0.02%)</title><rect x="95.5699%" y="485" width="0.0227%" height="15" fill="rgb(245,64,36)" fg:x="25240" fg:w="6"/><text x="95.8199%" y="495.50"></text></g><g><title>sysvec_apic_timer_interrupt (6 samples, 0.02%)</title><rect x="95.5699%" y="469" width="0.0227%" height="15" fill="rgb(245,80,10)" fg:x="25240" fg:w="6"/><text x="95.8199%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (468 samples, 1.77%)</title><rect x="95.5926%" y="485" width="1.7721%" height="15" fill="rgb(232,107,50)" fg:x="25246" fg:w="468"/><text x="95.8426%" y="495.50">c..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (211 samples, 0.80%)</title><rect x="96.5657%" y="469" width="0.7989%" height="15" fill="rgb(253,3,0)" fg:x="25503" fg:w="211"/><text x="96.8157%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (946 samples, 3.58%)</title><rect x="94.1121%" y="501" width="3.5820%" height="15" fill="rgb(212,99,53)" fg:x="24855" fg:w="946"/><text x="94.3621%" y="511.50">core..</text></g><g><title>core::ptr::null_mut (87 samples, 0.33%)</title><rect x="97.3646%" y="485" width="0.3294%" height="15" fill="rgb(249,111,54)" fg:x="25714" fg:w="87"/><text x="97.6146%" y="495.50"></text></g><g><title>core::ptr::invalid_mut (64 samples, 0.24%)</title><rect x="97.4517%" y="469" width="0.2423%" height="15" fill="rgb(249,55,30)" fg:x="25737" fg:w="64"/><text x="97.7017%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,745 samples, 6.61%)</title><rect x="91.1927%" y="517" width="6.6073%" height="15" fill="rgb(237,47,42)" fg:x="24084" fg:w="1745"/><text x="91.4427%" y="527.50">&lt;core::sl..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (28 samples, 0.11%)</title><rect x="97.6941%" y="501" width="0.1060%" height="15" fill="rgb(211,20,18)" fg:x="25801" fg:w="28"/><text x="97.9441%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.02%)</title><rect x="97.7774%" y="485" width="0.0227%" height="15" fill="rgb(231,203,46)" fg:x="25823" fg:w="6"/><text x="98.0274%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.02%)</title><rect x="97.7774%" y="469" width="0.0227%" height="15" fill="rgb(237,142,3)" fg:x="25823" fg:w="6"/><text x="98.0274%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,915 samples, 7.25%)</title><rect x="90.8444%" y="533" width="7.2510%" height="15" fill="rgb(241,107,1)" fg:x="23992" fg:w="1915"/><text x="91.0944%" y="543.50">core::iter..</text></g><g><title>wfc::wfc::bits256_set::Bits256Set::new_sum::{{closure}} (77 samples, 0.29%)</title><rect x="97.8039%" y="517" width="0.2916%" height="15" fill="rgb(229,83,13)" fg:x="25830" fg:w="77"/><text x="98.0539%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.06%)</title><rect x="98.0992%" y="517" width="0.0568%" height="15" fill="rgb(241,91,40)" fg:x="25908" fg:w="15"/><text x="98.3492%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (13 samples, 0.05%)</title><rect x="98.1068%" y="501" width="0.0492%" height="15" fill="rgb(225,3,45)" fg:x="25910" fg:w="13"/><text x="98.3568%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (13 samples, 0.05%)</title><rect x="98.1068%" y="485" width="0.0492%" height="15" fill="rgb(244,223,14)" fg:x="25910" fg:w="13"/><text x="98.3568%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (8 samples, 0.03%)</title><rect x="98.1257%" y="469" width="0.0303%" height="15" fill="rgb(224,124,37)" fg:x="25915" fg:w="8"/><text x="98.3757%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="98.1371%" y="453" width="0.0189%" height="15" fill="rgb(251,171,30)" fg:x="25918" fg:w="5"/><text x="98.3871%" y="463.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.01%)</title><rect x="98.1787%" y="453" width="0.0114%" height="15" fill="rgb(236,46,54)" fg:x="25929" fg:w="3"/><text x="98.4287%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.01%)</title><rect x="98.1787%" y="437" width="0.0114%" height="15" fill="rgb(245,213,5)" fg:x="25929" fg:w="3"/><text x="98.4287%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.05%)</title><rect x="98.1787%" y="485" width="0.0492%" height="15" fill="rgb(230,144,27)" fg:x="25929" fg:w="13"/><text x="98.4287%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.05%)</title><rect x="98.1787%" y="469" width="0.0492%" height="15" fill="rgb(220,86,6)" fg:x="25929" fg:w="13"/><text x="98.4287%" y="479.50"></text></g><g><title>free (9 samples, 0.03%)</title><rect x="98.1939%" y="453" width="0.0341%" height="15" fill="rgb(240,20,13)" fg:x="25933" fg:w="9"/><text x="98.4439%" y="463.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="98.2128%" y="437" width="0.0151%" height="15" fill="rgb(217,89,34)" fg:x="25938" fg:w="4"/><text x="98.4628%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.02%)</title><rect x="98.2544%" y="469" width="0.0151%" height="15" fill="rgb(229,13,5)" fg:x="25949" fg:w="4"/><text x="98.5044%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array (4 samples, 0.02%)</title><rect x="98.2696%" y="469" width="0.0151%" height="15" fill="rgb(244,67,35)" fg:x="25953" fg:w="4"/><text x="98.5196%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (4 samples, 0.02%)</title><rect x="98.2696%" y="453" width="0.0151%" height="15" fill="rgb(221,40,2)" fg:x="25953" fg:w="4"/><text x="98.5196%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;wfc::wfc::bits256_set::Bits256Set&gt;&gt; (53 samples, 0.20%)</title><rect x="98.0954%" y="533" width="0.2007%" height="15" fill="rgb(237,157,21)" fg:x="25907" fg:w="53"/><text x="98.3454%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;wfc::wfc::bits256_set::Bits256Set&gt;&gt; (37 samples, 0.14%)</title><rect x="98.1560%" y="517" width="0.1401%" height="15" fill="rgb(222,94,11)" fg:x="25923" fg:w="37"/><text x="98.4060%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.12%)</title><rect x="98.1711%" y="501" width="0.1250%" height="15" fill="rgb(249,113,6)" fg:x="25927" fg:w="33"/><text x="98.4211%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (18 samples, 0.07%)</title><rect x="98.2279%" y="485" width="0.0682%" height="15" fill="rgb(238,137,36)" fg:x="25942" fg:w="18"/><text x="98.4779%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (3 samples, 0.01%)</title><rect x="98.2847%" y="469" width="0.0114%" height="15" fill="rgb(210,102,26)" fg:x="25957" fg:w="3"/><text x="98.5347%" y="479.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::new_sum (2,002 samples, 7.58%)</title><rect x="90.7573%" y="549" width="7.5805%" height="15" fill="rgb(218,30,30)" fg:x="23969" fg:w="2002"/><text x="91.0073%" y="559.50">wfc::wfc::..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (11 samples, 0.04%)</title><rect x="98.2961%" y="533" width="0.0417%" height="15" fill="rgb(214,67,26)" fg:x="25960" fg:w="11"/><text x="98.5461%" y="543.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (9 samples, 0.03%)</title><rect x="98.3037%" y="517" width="0.0341%" height="15" fill="rgb(251,9,53)" fg:x="25962" fg:w="9"/><text x="98.5537%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (7 samples, 0.03%)</title><rect x="98.3112%" y="501" width="0.0265%" height="15" fill="rgb(228,204,25)" fg:x="25964" fg:w="7"/><text x="98.5612%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (7 samples, 0.03%)</title><rect x="98.3870%" y="469" width="0.0265%" height="15" fill="rgb(207,153,8)" fg:x="25984" fg:w="7"/><text x="98.6370%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.06%)</title><rect x="98.3605%" y="517" width="0.0606%" height="15" fill="rgb(242,9,16)" fg:x="25977" fg:w="16"/><text x="98.6105%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (13 samples, 0.05%)</title><rect x="98.3718%" y="501" width="0.0492%" height="15" fill="rgb(217,211,10)" fg:x="25980" fg:w="13"/><text x="98.6218%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (13 samples, 0.05%)</title><rect x="98.3718%" y="485" width="0.0492%" height="15" fill="rgb(219,228,52)" fg:x="25980" fg:w="13"/><text x="98.6218%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (21 samples, 0.08%)</title><rect x="98.3529%" y="533" width="0.0795%" height="15" fill="rgb(231,92,29)" fg:x="25975" fg:w="21"/><text x="98.6029%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.01%)</title><rect x="98.4211%" y="517" width="0.0114%" height="15" fill="rgb(232,8,23)" fg:x="25993" fg:w="3"/><text x="98.6711%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.01%)</title><rect x="98.4211%" y="501" width="0.0114%" height="15" fill="rgb(216,211,34)" fg:x="25993" fg:w="3"/><text x="98.6711%" y="511.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset_fibheap::QueuePropBitArraySetFibHeap::legal_tiles (24,064 samples, 91.12%)</title><rect x="7.3457%" y="565" width="91.1170%" height="15" fill="rgb(236,151,0)" fg:x="1940" fg:w="24064"/><text x="7.5957%" y="575.50">wfc::wfc::queueprop_bitarrayset_fibheap::QueuePropBitArraySetFibHeap::legal_tiles</text></g><g><title>wfc::wfc::vec3d::Vec3D&lt;T&gt;::get (33 samples, 0.12%)</title><rect x="98.3378%" y="549" width="0.1250%" height="15" fill="rgb(209,168,3)" fg:x="25971" fg:w="33"/><text x="98.5878%" y="559.50"></text></g><g><title>&lt;wfc::wfc::bits256_set::Bits256Set as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="98.4324%" y="533" width="0.0303%" height="15" fill="rgb(208,129,28)" fg:x="25996" fg:w="8"/><text x="98.6824%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (6 samples, 0.02%)</title><rect x="98.5006%" y="517" width="0.0227%" height="15" fill="rgb(229,78,22)" fg:x="26014" fg:w="6"/><text x="98.7506%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (6 samples, 0.02%)</title><rect x="98.5006%" y="501" width="0.0227%" height="15" fill="rgb(228,187,13)" fg:x="26014" fg:w="6"/><text x="98.7506%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (11 samples, 0.04%)</title><rect x="98.4854%" y="549" width="0.0417%" height="15" fill="rgb(240,119,24)" fg:x="26010" fg:w="11"/><text x="98.7354%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.03%)</title><rect x="98.4930%" y="533" width="0.0341%" height="15" fill="rgb(209,194,42)" fg:x="26012" fg:w="9"/><text x="98.7430%" y="543.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset_fibheap::QueuePropBitArraySetFibHeap::propagate (24,150 samples, 91.44%)</title><rect x="7.0882%" y="581" width="91.4426%" height="15" fill="rgb(247,200,46)" fg:x="1872" fg:w="24150"/><text x="7.3382%" y="591.50">wfc::wfc::queueprop_bitarrayset_fibheap::QueuePropBitArraySetFibHeap::propagate</text></g><g><title>wfc::wfc::vec3d::Vec3D&lt;T&gt;::get (18 samples, 0.07%)</title><rect x="98.4627%" y="565" width="0.0682%" height="15" fill="rgb(218,76,16)" fg:x="26004" fg:w="18"/><text x="98.7127%" y="575.50"></text></g><g><title>rand::rng::Rng::gen_range (3 samples, 0.01%)</title><rect x="98.5346%" y="565" width="0.0114%" height="15" fill="rgb(225,21,48)" fg:x="26023" fg:w="3"/><text x="98.7846%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (3 samples, 0.01%)</title><rect x="98.5346%" y="549" width="0.0114%" height="15" fill="rgb(239,223,50)" fg:x="26023" fg:w="3"/><text x="98.7846%" y="559.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (3 samples, 0.01%)</title><rect x="98.5346%" y="533" width="0.0114%" height="15" fill="rgb(244,45,21)" fg:x="26023" fg:w="3"/><text x="98.7846%" y="543.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (3 samples, 0.01%)</title><rect x="98.5346%" y="517" width="0.0114%" height="15" fill="rgb(232,33,43)" fg:x="26023" fg:w="3"/><text x="98.7846%" y="527.50"></text></g><g><title>wfc::wfc::utils::get_random (7 samples, 0.03%)</title><rect x="98.5309%" y="581" width="0.0265%" height="15" fill="rgb(209,8,3)" fg:x="26022" fg:w="7"/><text x="98.7809%" y="591.50"></text></g><g><title>rand::rngs::thread::thread_rng (3 samples, 0.01%)</title><rect x="98.5460%" y="565" width="0.0114%" height="15" fill="rgb(214,25,53)" fg:x="26026" fg:w="3"/><text x="98.7960%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.01%)</title><rect x="98.5460%" y="549" width="0.0114%" height="15" fill="rgb(254,186,54)" fg:x="26026" fg:w="3"/><text x="98.7960%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.01%)</title><rect x="98.5460%" y="533" width="0.0114%" height="15" fill="rgb(208,174,49)" fg:x="26026" fg:w="3"/><text x="98.7960%" y="543.50"></text></g><g><title>&lt;wfc::wfc::queueprop_bitarrayset_fibheap::QueuePropBitArraySetFibHeap as wfc::wfc::traits::WFC&gt;::solve (26,026 samples, 98.55%)</title><rect x="0.0189%" y="597" width="98.5460%" height="15" fill="rgb(233,191,51)" fg:x="5" fg:w="26026"/><text x="0.2689%" y="607.50">&lt;wfc::wfc::queueprop_bitarrayset_fibheap::QueuePropBitArraySetFibHeap as wfc::wfc::traits::WFC&gt;::solve</text></g><g><title>do_output_char (4 samples, 0.02%)</title><rect x="98.5990%" y="197" width="0.0151%" height="15" fill="rgb(222,134,10)" fg:x="26040" fg:w="4"/><text x="98.8490%" y="207.50"></text></g><g><title>pty_write (4 samples, 0.02%)</title><rect x="98.5990%" y="181" width="0.0151%" height="15" fill="rgb(230,226,20)" fg:x="26040" fg:w="4"/><text x="98.8490%" y="191.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (4 samples, 0.02%)</title><rect x="98.5990%" y="165" width="0.0151%" height="15" fill="rgb(251,111,25)" fg:x="26040" fg:w="4"/><text x="98.8490%" y="175.50"></text></g><g><title>queue_work_on (4 samples, 0.02%)</title><rect x="98.5990%" y="149" width="0.0151%" height="15" fill="rgb(224,40,46)" fg:x="26040" fg:w="4"/><text x="98.8490%" y="159.50"></text></g><g><title>asm_common_interrupt (128 samples, 0.48%)</title><rect x="98.7164%" y="133" width="0.4847%" height="15" fill="rgb(236,108,47)" fg:x="26071" fg:w="128"/><text x="98.9664%" y="143.50"></text></g><g><title>common_interrupt (128 samples, 0.48%)</title><rect x="98.7164%" y="117" width="0.4847%" height="15" fill="rgb(234,93,0)" fg:x="26071" fg:w="128"/><text x="98.9664%" y="127.50"></text></g><g><title>irq_exit_rcu (128 samples, 0.48%)</title><rect x="98.7164%" y="101" width="0.4847%" height="15" fill="rgb(224,213,32)" fg:x="26071" fg:w="128"/><text x="98.9664%" y="111.50"></text></g><g><title>__softirqentry_text_start (128 samples, 0.48%)</title><rect x="98.7164%" y="85" width="0.4847%" height="15" fill="rgb(251,11,48)" fg:x="26071" fg:w="128"/><text x="98.9664%" y="95.50"></text></g><g><title>net_rx_action (10 samples, 0.04%)</title><rect x="99.1632%" y="69" width="0.0379%" height="15" fill="rgb(236,173,5)" fg:x="26189" fg:w="10"/><text x="99.4132%" y="79.50"></text></g><g><title>__napi_poll (10 samples, 0.04%)</title><rect x="99.1632%" y="53" width="0.0379%" height="15" fill="rgb(230,95,12)" fg:x="26189" fg:w="10"/><text x="99.4132%" y="63.50"></text></g><g><title>e1000_clean (10 samples, 0.04%)</title><rect x="99.1632%" y="37" width="0.0379%" height="15" fill="rgb(232,209,1)" fg:x="26189" fg:w="10"/><text x="99.4132%" y="47.50"></text></g><g><title>mutex_lock (156 samples, 0.59%)</title><rect x="98.6142%" y="197" width="0.5907%" height="15" fill="rgb(232,6,1)" fg:x="26044" fg:w="156"/><text x="98.8642%" y="207.50"></text></g><g><title>__cond_resched (156 samples, 0.59%)</title><rect x="98.6142%" y="181" width="0.5907%" height="15" fill="rgb(210,224,50)" fg:x="26044" fg:w="156"/><text x="98.8642%" y="191.50"></text></g><g><title>__schedule (155 samples, 0.59%)</title><rect x="98.6179%" y="165" width="0.5869%" height="15" fill="rgb(228,127,35)" fg:x="26045" fg:w="155"/><text x="98.8679%" y="175.50"></text></g><g><title>finish_task_switch.isra.0 (155 samples, 0.59%)</title><rect x="98.6179%" y="149" width="0.5869%" height="15" fill="rgb(245,102,45)" fg:x="26045" fg:w="155"/><text x="98.8679%" y="159.50"></text></g><g><title>process_output_block (15 samples, 0.06%)</title><rect x="99.2124%" y="197" width="0.0568%" height="15" fill="rgb(214,1,49)" fg:x="26202" fg:w="15"/><text x="99.4624%" y="207.50"></text></g><g><title>pty_write (15 samples, 0.06%)</title><rect x="99.2124%" y="181" width="0.0568%" height="15" fill="rgb(226,163,40)" fg:x="26202" fg:w="15"/><text x="99.4624%" y="191.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (15 samples, 0.06%)</title><rect x="99.2124%" y="165" width="0.0568%" height="15" fill="rgb(239,212,28)" fg:x="26202" fg:w="15"/><text x="99.4624%" y="175.50"></text></g><g><title>queue_work_on (15 samples, 0.06%)</title><rect x="99.2124%" y="149" width="0.0568%" height="15" fill="rgb(220,20,13)" fg:x="26202" fg:w="15"/><text x="99.4624%" y="159.50"></text></g><g><title>asm_common_interrupt (5 samples, 0.02%)</title><rect x="99.2503%" y="133" width="0.0189%" height="15" fill="rgb(210,164,35)" fg:x="26212" fg:w="5"/><text x="99.5003%" y="143.50"></text></g><g><title>common_interrupt (5 samples, 0.02%)</title><rect x="99.2503%" y="117" width="0.0189%" height="15" fill="rgb(248,109,41)" fg:x="26212" fg:w="5"/><text x="99.5003%" y="127.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.02%)</title><rect x="99.2503%" y="101" width="0.0189%" height="15" fill="rgb(238,23,50)" fg:x="26212" fg:w="5"/><text x="99.5003%" y="111.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.02%)</title><rect x="99.2503%" y="85" width="0.0189%" height="15" fill="rgb(211,48,49)" fg:x="26212" fg:w="5"/><text x="99.5003%" y="95.50"></text></g><g><title>pty_write (3 samples, 0.01%)</title><rect x="99.2692%" y="197" width="0.0114%" height="15" fill="rgb(223,36,21)" fg:x="26217" fg:w="3"/><text x="99.5192%" y="207.50"></text></g><g><title>do_tty_write (183 samples, 0.69%)</title><rect x="98.5952%" y="229" width="0.6929%" height="15" fill="rgb(207,123,46)" fg:x="26039" fg:w="183"/><text x="98.8452%" y="239.50"></text></g><g><title>n_tty_write (182 samples, 0.69%)</title><rect x="98.5990%" y="213" width="0.6891%" height="15" fill="rgb(240,218,32)" fg:x="26040" fg:w="182"/><text x="98.8490%" y="223.50"></text></g><g><title>new_sync_write (185 samples, 0.70%)</title><rect x="98.5914%" y="277" width="0.7005%" height="15" fill="rgb(252,5,43)" fg:x="26038" fg:w="185"/><text x="98.8414%" y="287.50"></text></g><g><title>tty_write (185 samples, 0.70%)</title><rect x="98.5914%" y="261" width="0.7005%" height="15" fill="rgb(252,84,19)" fg:x="26038" fg:w="185"/><text x="98.8414%" y="271.50"></text></g><g><title>file_tty_write.constprop.0 (185 samples, 0.70%)</title><rect x="98.5914%" y="245" width="0.7005%" height="15" fill="rgb(243,152,39)" fg:x="26038" fg:w="185"/><text x="98.8414%" y="255.50"></text></g><g><title>__x64_sys_write (188 samples, 0.71%)</title><rect x="98.5839%" y="325" width="0.7119%" height="15" fill="rgb(234,160,15)" fg:x="26036" fg:w="188"/><text x="98.8339%" y="335.50"></text></g><g><title>ksys_write (187 samples, 0.71%)</title><rect x="98.5877%" y="309" width="0.7081%" height="15" fill="rgb(237,34,20)" fg:x="26037" fg:w="187"/><text x="98.8377%" y="319.50"></text></g><g><title>vfs_write (186 samples, 0.70%)</title><rect x="98.5914%" y="293" width="0.7043%" height="15" fill="rgb(229,97,13)" fg:x="26038" fg:w="186"/><text x="98.8414%" y="303.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (362 samples, 1.37%)</title><rect x="98.5725%" y="437" width="1.3707%" height="15" fill="rgb(234,71,50)" fg:x="26033" fg:w="362"/><text x="98.8225%" y="447.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (362 samples, 1.37%)</title><rect x="98.5725%" y="421" width="1.3707%" height="15" fill="rgb(253,155,4)" fg:x="26033" fg:w="362"/><text x="98.8225%" y="431.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (362 samples, 1.37%)</title><rect x="98.5725%" y="405" width="1.3707%" height="15" fill="rgb(222,185,37)" fg:x="26033" fg:w="362"/><text x="98.8225%" y="415.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (362 samples, 1.37%)</title><rect x="98.5725%" y="389" width="1.3707%" height="15" fill="rgb(251,177,13)" fg:x="26033" fg:w="362"/><text x="98.8225%" y="399.50"></text></g><g><title>write (361 samples, 1.37%)</title><rect x="98.5763%" y="373" width="1.3669%" height="15" fill="rgb(250,179,40)" fg:x="26034" fg:w="361"/><text x="98.8263%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (359 samples, 1.36%)</title><rect x="98.5839%" y="357" width="1.3593%" height="15" fill="rgb(242,44,2)" fg:x="26036" fg:w="359"/><text x="98.8339%" y="367.50"></text></g><g><title>do_syscall_64 (359 samples, 1.36%)</title><rect x="98.5839%" y="341" width="1.3593%" height="15" fill="rgb(216,177,13)" fg:x="26036" fg:w="359"/><text x="98.8339%" y="351.50"></text></g><g><title>syscall_exit_to_user_mode (169 samples, 0.64%)</title><rect x="99.3033%" y="325" width="0.6399%" height="15" fill="rgb(216,106,43)" fg:x="26226" fg:w="169"/><text x="99.5533%" y="335.50"></text></g><g><title>exit_to_user_mode_prepare (169 samples, 0.64%)</title><rect x="99.3033%" y="309" width="0.6399%" height="15" fill="rgb(216,183,2)" fg:x="26226" fg:w="169"/><text x="99.5533%" y="319.50"></text></g><g><title>exit_to_user_mode_loop (169 samples, 0.64%)</title><rect x="99.3033%" y="293" width="0.6399%" height="15" fill="rgb(249,75,3)" fg:x="26226" fg:w="169"/><text x="99.5533%" y="303.50"></text></g><g><title>schedule (168 samples, 0.64%)</title><rect x="99.3071%" y="277" width="0.6361%" height="15" fill="rgb(219,67,39)" fg:x="26227" fg:w="168"/><text x="99.5571%" y="287.50"></text></g><g><title>__schedule (168 samples, 0.64%)</title><rect x="99.3071%" y="261" width="0.6361%" height="15" fill="rgb(253,228,2)" fg:x="26227" fg:w="168"/><text x="99.5571%" y="271.50"></text></g><g><title>finish_task_switch.isra.0 (168 samples, 0.64%)</title><rect x="99.3071%" y="245" width="0.6361%" height="15" fill="rgb(235,138,27)" fg:x="26227" fg:w="168"/><text x="99.5571%" y="255.50"></text></g><g><title>asm_common_interrupt (139 samples, 0.53%)</title><rect x="99.4169%" y="229" width="0.5263%" height="15" fill="rgb(236,97,51)" fg:x="26256" fg:w="139"/><text x="99.6669%" y="239.50"></text></g><g><title>common_interrupt (139 samples, 0.53%)</title><rect x="99.4169%" y="213" width="0.5263%" height="15" fill="rgb(240,80,30)" fg:x="26256" fg:w="139"/><text x="99.6669%" y="223.50"></text></g><g><title>irq_exit_rcu (139 samples, 0.53%)</title><rect x="99.4169%" y="197" width="0.5263%" height="15" fill="rgb(230,178,19)" fg:x="26256" fg:w="139"/><text x="99.6669%" y="207.50"></text></g><g><title>__softirqentry_text_start (139 samples, 0.53%)</title><rect x="99.4169%" y="181" width="0.5263%" height="15" fill="rgb(210,190,27)" fg:x="26256" fg:w="139"/><text x="99.6669%" y="191.50"></text></g><g><title>net_rx_action (8 samples, 0.03%)</title><rect x="99.9129%" y="165" width="0.0303%" height="15" fill="rgb(222,107,31)" fg:x="26387" fg:w="8"/><text x="100.1629%" y="175.50"></text></g><g><title>__napi_poll (8 samples, 0.03%)</title><rect x="99.9129%" y="149" width="0.0303%" height="15" fill="rgb(216,127,34)" fg:x="26387" fg:w="8"/><text x="100.1629%" y="159.50"></text></g><g><title>e1000_clean (8 samples, 0.03%)</title><rect x="99.9129%" y="133" width="0.0303%" height="15" fill="rgb(234,116,52)" fg:x="26387" fg:w="8"/><text x="100.1629%" y="143.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (364 samples, 1.38%)</title><rect x="98.5687%" y="501" width="1.3783%" height="15" fill="rgb(222,124,15)" fg:x="26032" fg:w="364"/><text x="98.8187%" y="511.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (364 samples, 1.38%)</title><rect x="98.5687%" y="485" width="1.3783%" height="15" fill="rgb(231,179,28)" fg:x="26032" fg:w="364"/><text x="98.8187%" y="495.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (364 samples, 1.38%)</title><rect x="98.5687%" y="469" width="1.3783%" height="15" fill="rgb(226,93,45)" fg:x="26032" fg:w="364"/><text x="98.8187%" y="479.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (364 samples, 1.38%)</title><rect x="98.5687%" y="453" width="1.3783%" height="15" fill="rgb(215,8,51)" fg:x="26032" fg:w="364"/><text x="98.8187%" y="463.50"></text></g><g><title>std::io::stdio::_print (368 samples, 1.39%)</title><rect x="98.5649%" y="597" width="1.3934%" height="15" fill="rgb(223,106,5)" fg:x="26031" fg:w="368"/><text x="98.8149%" y="607.50"></text></g><g><title>std::io::stdio::print_to (368 samples, 1.39%)</title><rect x="98.5649%" y="581" width="1.3934%" height="15" fill="rgb(250,191,5)" fg:x="26031" fg:w="368"/><text x="98.8149%" y="591.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (368 samples, 1.39%)</title><rect x="98.5649%" y="565" width="1.3934%" height="15" fill="rgb(242,132,44)" fg:x="26031" fg:w="368"/><text x="98.8149%" y="575.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (368 samples, 1.39%)</title><rect x="98.5649%" y="549" width="1.3934%" height="15" fill="rgb(251,152,29)" fg:x="26031" fg:w="368"/><text x="98.8149%" y="559.50"></text></g><g><title>std::io::Write::write_fmt (367 samples, 1.39%)</title><rect x="98.5687%" y="533" width="1.3896%" height="15" fill="rgb(218,179,5)" fg:x="26032" fg:w="367"/><text x="98.8187%" y="543.50"></text></g><g><title>core::fmt::write (367 samples, 1.39%)</title><rect x="98.5687%" y="517" width="1.3896%" height="15" fill="rgb(227,67,19)" fg:x="26032" fg:w="367"/><text x="98.8187%" y="527.50"></text></g><g><title>wfc::wfc::rules::get_pipes_rules (6 samples, 0.02%)</title><rect x="99.9583%" y="597" width="0.0227%" height="15" fill="rgb(233,119,31)" fg:x="26399" fg:w="6"/><text x="100.2083%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.02%)</title><rect x="99.9583%" y="581" width="0.0227%" height="15" fill="rgb(241,120,22)" fg:x="26399" fg:w="6"/><text x="100.2083%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="99.9583%" y="565" width="0.0227%" height="15" fill="rgb(224,102,30)" fg:x="26399" fg:w="6"/><text x="100.2083%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="99.9583%" y="549" width="0.0227%" height="15" fill="rgb(210,164,37)" fg:x="26399" fg:w="6"/><text x="100.2083%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="99.9583%" y="533" width="0.0227%" height="15" fill="rgb(226,191,16)" fg:x="26399" fg:w="6"/><text x="100.2083%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.02%)</title><rect x="99.9583%" y="517" width="0.0227%" height="15" fill="rgb(214,40,45)" fg:x="26399" fg:w="6"/><text x="100.2083%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.02%)</title><rect x="99.9583%" y="501" width="0.0227%" height="15" fill="rgb(244,29,26)" fg:x="26399" fg:w="6"/><text x="100.2083%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.02%)</title><rect x="99.9583%" y="485" width="0.0227%" height="15" fill="rgb(216,16,5)" fg:x="26399" fg:w="6"/><text x="100.2083%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.02%)</title><rect x="99.9583%" y="469" width="0.0227%" height="15" fill="rgb(249,76,35)" fg:x="26399" fg:w="6"/><text x="100.2083%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 0.02%)</title><rect x="99.9583%" y="453" width="0.0227%" height="15" fill="rgb(207,11,44)" fg:x="26399" fg:w="6"/><text x="100.2083%" y="463.50"></text></g><g><title>wfc::wfc::rules::get_pipes_rules::{{closure}} (6 samples, 0.02%)</title><rect x="99.9583%" y="437" width="0.0227%" height="15" fill="rgb(228,190,49)" fg:x="26399" fg:w="6"/><text x="100.2083%" y="447.50"></text></g><g><title>wfc::wfc::rules::get_pipe_rules (6 samples, 0.02%)</title><rect x="99.9583%" y="421" width="0.0227%" height="15" fill="rgb(214,173,12)" fg:x="26399" fg:w="6"/><text x="100.2083%" y="431.50"></text></g><g><title>wfc::wfc::rules::get_pipe_dir_rules (5 samples, 0.02%)</title><rect x="99.9621%" y="405" width="0.0189%" height="15" fill="rgb(218,26,35)" fg:x="26400" fg:w="5"/><text x="100.2121%" y="415.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="99.9621%" y="389" width="0.0189%" height="15" fill="rgb(220,200,19)" fg:x="26400" fg:w="5"/><text x="100.2121%" y="399.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.02%)</title><rect x="99.9621%" y="373" width="0.0189%" height="15" fill="rgb(239,95,49)" fg:x="26400" fg:w="5"/><text x="100.2121%" y="383.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.02%)</title><rect x="99.9621%" y="357" width="0.0189%" height="15" fill="rgb(235,85,53)" fg:x="26400" fg:w="5"/><text x="100.2121%" y="367.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 0.02%)</title><rect x="99.9621%" y="341" width="0.0189%" height="15" fill="rgb(233,133,31)" fg:x="26400" fg:w="5"/><text x="100.2121%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.02%)</title><rect x="99.9621%" y="325" width="0.0189%" height="15" fill="rgb(218,25,20)" fg:x="26400" fg:w="5"/><text x="100.2121%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.02%)</title><rect x="99.9621%" y="309" width="0.0189%" height="15" fill="rgb(252,210,38)" fg:x="26400" fg:w="5"/><text x="100.2121%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.02%)</title><rect x="99.9621%" y="293" width="0.0189%" height="15" fill="rgb(242,134,21)" fg:x="26400" fg:w="5"/><text x="100.2121%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.02%)</title><rect x="99.9621%" y="277" width="0.0189%" height="15" fill="rgb(213,28,48)" fg:x="26400" fg:w="5"/><text x="100.2121%" y="287.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (4 samples, 0.02%)</title><rect x="99.9659%" y="261" width="0.0151%" height="15" fill="rgb(250,196,2)" fg:x="26401" fg:w="4"/><text x="100.2159%" y="271.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.02%)</title><rect x="99.9659%" y="245" width="0.0151%" height="15" fill="rgb(227,5,17)" fg:x="26401" fg:w="4"/><text x="100.2159%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.02%)</title><rect x="99.9659%" y="229" width="0.0151%" height="15" fill="rgb(221,226,24)" fg:x="26401" fg:w="4"/><text x="100.2159%" y="239.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (4 samples, 0.02%)</title><rect x="99.9659%" y="213" width="0.0151%" height="15" fill="rgb(211,5,48)" fg:x="26401" fg:w="4"/><text x="100.2159%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.02%)</title><rect x="99.9659%" y="197" width="0.0151%" height="15" fill="rgb(219,150,6)" fg:x="26401" fg:w="4"/><text x="100.2159%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.01%)</title><rect x="99.9849%" y="581" width="0.0114%" height="15" fill="rgb(251,46,16)" fg:x="26406" fg:w="3"/><text x="100.2349%" y="591.50"></text></g><g><title>all (26,410 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(220,204,40)" fg:x="0" fg:w="26410"/><text x="0.2500%" y="927.50"></text></g><g><title>queueprop_bitar (26,410 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(211,85,2)" fg:x="0" fg:w="26410"/><text x="0.2500%" y="911.50">queueprop_bitar</text></g><g><title>_start (26,406 samples, 99.98%)</title><rect x="0.0151%" y="885" width="99.9849%" height="15" fill="rgb(229,17,7)" fg:x="4" fg:w="26406"/><text x="0.2651%" y="895.50">_start</text></g><g><title>__libc_start_main (26,406 samples, 99.98%)</title><rect x="0.0151%" y="869" width="99.9849%" height="15" fill="rgb(239,72,28)" fg:x="4" fg:w="26406"/><text x="0.2651%" y="879.50">__libc_start_main</text></g><g><title>[libc.so.6] (26,406 samples, 99.98%)</title><rect x="0.0151%" y="853" width="99.9849%" height="15" fill="rgb(230,47,54)" fg:x="4" fg:w="26406"/><text x="0.2651%" y="863.50">[libc.so.6]</text></g><g><title>main (26,406 samples, 99.98%)</title><rect x="0.0151%" y="837" width="99.9849%" height="15" fill="rgb(214,50,8)" fg:x="4" fg:w="26406"/><text x="0.2651%" y="847.50">main</text></g><g><title>std::rt::lang_start (26,406 samples, 99.98%)</title><rect x="0.0151%" y="821" width="99.9849%" height="15" fill="rgb(216,198,43)" fg:x="4" fg:w="26406"/><text x="0.2651%" y="831.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (26,406 samples, 99.98%)</title><rect x="0.0151%" y="805" width="99.9849%" height="15" fill="rgb(234,20,35)" fg:x="4" fg:w="26406"/><text x="0.2651%" y="815.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (26,406 samples, 99.98%)</title><rect x="0.0151%" y="789" width="99.9849%" height="15" fill="rgb(254,45,19)" fg:x="4" fg:w="26406"/><text x="0.2651%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (26,406 samples, 99.98%)</title><rect x="0.0151%" y="773" width="99.9849%" height="15" fill="rgb(219,14,44)" fg:x="4" fg:w="26406"/><text x="0.2651%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (26,406 samples, 99.98%)</title><rect x="0.0151%" y="757" width="99.9849%" height="15" fill="rgb(217,220,26)" fg:x="4" fg:w="26406"/><text x="0.2651%" y="767.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (26,406 samples, 99.98%)</title><rect x="0.0151%" y="741" width="99.9849%" height="15" fill="rgb(213,158,28)" fg:x="4" fg:w="26406"/><text x="0.2651%" y="751.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (26,406 samples, 99.98%)</title><rect x="0.0151%" y="725" width="99.9849%" height="15" fill="rgb(252,51,52)" fg:x="4" fg:w="26406"/><text x="0.2651%" y="735.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (26,406 samples, 99.98%)</title><rect x="0.0151%" y="709" width="99.9849%" height="15" fill="rgb(246,89,16)" fg:x="4" fg:w="26406"/><text x="0.2651%" y="719.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (26,406 samples, 99.98%)</title><rect x="0.0151%" y="693" width="99.9849%" height="15" fill="rgb(216,158,49)" fg:x="4" fg:w="26406"/><text x="0.2651%" y="703.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (26,406 samples, 99.98%)</title><rect x="0.0151%" y="677" width="99.9849%" height="15" fill="rgb(236,107,19)" fg:x="4" fg:w="26406"/><text x="0.2651%" y="687.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (26,406 samples, 99.98%)</title><rect x="0.0151%" y="661" width="99.9849%" height="15" fill="rgb(228,185,30)" fg:x="4" fg:w="26406"/><text x="0.2651%" y="671.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (26,406 samples, 99.98%)</title><rect x="0.0151%" y="645" width="99.9849%" height="15" fill="rgb(246,134,8)" fg:x="4" fg:w="26406"/><text x="0.2651%" y="655.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (26,406 samples, 99.98%)</title><rect x="0.0151%" y="629" width="99.9849%" height="15" fill="rgb(214,143,50)" fg:x="4" fg:w="26406"/><text x="0.2651%" y="639.50">core::ops::function::FnOnce::call_once</text></g><g><title>queueprop_bitarrayset_fibheap::main (26,406 samples, 99.98%)</title><rect x="0.0151%" y="613" width="99.9849%" height="15" fill="rgb(228,75,8)" fg:x="4" fg:w="26406"/><text x="0.2651%" y="623.50">queueprop_bitarrayset_fibheap::main</text></g><g><title>wfc::wfc::vec3d::Vec3D&lt;T&gt;::get (5 samples, 0.02%)</title><rect x="99.9811%" y="597" width="0.0189%" height="15" fill="rgb(207,175,4)" fg:x="26405" fg:w="5"/><text x="100.2311%" y="607.50"></text></g></svg></svg>