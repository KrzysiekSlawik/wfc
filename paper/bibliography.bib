@online{MaximGumin,
    url = {https://github.com/mxgmn/WaveFunctionCollapse},

    author = {Maxim Gumin},
    email = {ExUtumno@gmail.com},

    keywords = {procedural generation, texture synthesis, machine learning, constraint satisfaction},

    title = {Wave Function Collapse Algorithm},

    year = {2016},

    copyright = {Copyright (c) 2016 Maxim Gumin},
    urldate = {2023-01-23}
}
@inproceedings{DesignLevelConstraints,
author = {Sandhu, Arunpreet and Chen, Zeyuan and McCoy, Joshua},
title = {Enhancing Wave Function Collapse with Design-Level Constraints},
year = {2019},
isbn = {9781450372176},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3337722.3337752},
doi = {10.1145/3337722.3337752},
abstract = {Wave Function Collapse (WFC) is a non-backtracking, greedy search algorithm that is commonly known for its ability to take an example image and generate similar images. Since its inception, technical artists have explored the algorithm's extensibility and usability through various implementations spanning from 3D world generation to poetry creation. However, there has been no integration of design constraints into the generative process. In this paper, we explore WFC as a constraint satisfaction solver to integrate design principles and practices by modifying components within the algorithm. First, we extend the local constraint reasoning by incorporating non-local constraints as well as upper and lower bounds. Next, we further manipulate the generative space by introducing weight recalculation and dependencies. Lastly, we evaluate our design-focused variant of WFC against the original implementation to examine the associated costs in computational time and memory usage. In summary, this paper describes a technical implementation of integrating design constraints into WFC and analyzes the computational trade-offs.},
booktitle = {Proceedings of the 14th International Conference on the Foundations of Digital Games},
articleno = {17},
numpages = {9},
keywords = {wave function collapse, level generation, procedural content generation},
location = {San Luis Obispo, California, USA},
series = {FDG '19}
}
@inproceedings{Smith,
author = {Karth, Isaac and Smith, Adam M.},
title = {WaveFunctionCollapse is Constraint Solving in the Wild},
year = {2017},
isbn = {9781450353199},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3102071.3110566},
doi = {10.1145/3102071.3110566},
abstract = {Maxim Gumin's WaveFunctionCollapse (WFC) algorithm is an example-driven image generation algorithm emerging from the craft practice of procedural content generation. In WFC, new images are generated in the style of given examples by ensuring every local window of the output occurs somewhere in the input. Operationally, WFC implements a non-backtracking, greedy search method. This paper examines WFC as an instance of constraint solving methods. We trace WFC's explosive influence on the technical artist community, explain its operation in terms of ideas from the constraint solving literature, and probe its strengths by means of a surrogate implementation using answer set programming.},
booktitle = {Proceedings of the 12th International Conference on the Foundations of Digital Games},
articleno = {68},
numpages = {10},
keywords = {texture synthesis, constraint solving, procedural content generation},
location = {Hyannis, Massachusetts},
series = {FDG '17}
}
@inproceedings{GraphBased,
author = {Kim, Hwanhee and Lee, Seongtaek and Lee, Hyundong and Hahn, Teasung and Kang, Shinjin},
year = {2019},
month = {08},
pages = {1-4},
title = {Automatic Generation of Game Content using a Graph-based Wave Function Collapse Algorithm},
doi = {10.1109/CIG.2019.8848019}
}

@article{harrison2002patchwork,
  title={Patchwork texture synthesis},
  author={Harrison, Paul},
  year={2002},
  publisher={Monash University}
}

@online{sudoku,
    url = {https://sudoku.game/},
    urldate = {2023-01-23}
}

@online{skater,
    url = {https://arcadia-clojure.itch.io/proc-skater-2016},
    author = {Joseph Parker, Ryan Jones, Oscar Morante},
    year = {2016},
    abstract = {Proc Skater 2016 is a new kind of skateboarding game. Pick a name and enjoy your custom, artisanal, one-of-a-kind skatepark and skateboarder. Accrue points as you complete tricks and create cool recorded gifs to share your exploits. All generation is seeded, meaning that any park/rider/city combination will always be the same from a given name. Find the parks that best suit your play style},
    urldate = {2023-01-24}
}

@online{wfcpoem,
    url = {https://github.com/mewo2/oisin},
    author = {Martin O’Leary},
    year = {2017},
    urldate = {2023-01-24}
}

@inproceedings{growinggrid,
author = {Møller, Tobias and Billeskov, Jonas and Palamas, George},
year = {2020},
month = {09},
pages = {},
title = {Expanding Wave Function Collapse with Growing Grids for Procedural Map Generation},
doi = {10.1145/3402942.3402987}
}