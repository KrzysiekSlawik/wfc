<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1078" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1061.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1061.00"> </text><svg id="frames" x="10" width="1180" total_samples="7853"><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="0.0127%" y="597" width="0.0127%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="1"/><text x="0.2627%" y="607.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.0255%" y="597" width="0.0127%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="1"/><text x="0.2755%" y="607.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.0255%" y="581" width="0.0127%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="0.2755%" y="591.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.0255%" y="565" width="0.0127%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="0.2755%" y="575.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.0255%" y="549" width="0.0127%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.2755%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.0255%" y="533" width="0.0127%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.2755%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="0.0382%" y="469" width="0.0127%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="1"/><text x="0.2882%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="0.0382%" y="453" width="0.0127%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="1"/><text x="0.2882%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="0.0382%" y="437" width="0.0127%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="1"/><text x="0.2882%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="0.0382%" y="421" width="0.0127%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="0.2882%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.03%)</title><rect x="0.0382%" y="501" width="0.0255%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="2"/><text x="0.2882%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.03%)</title><rect x="0.0382%" y="485" width="0.0255%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="2"/><text x="0.2882%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="0.0509%" y="469" width="0.0127%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="1"/><text x="0.3009%" y="479.50"></text></g><g><title>core::cmp::PartialEq::ne (6 samples, 0.08%)</title><rect x="0.0000%" y="661" width="0.0764%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="6"/><text x="0.2500%" y="671.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.08%)</title><rect x="0.0000%" y="645" width="0.0764%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="6"/><text x="0.2500%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (6 samples, 0.08%)</title><rect x="0.0000%" y="629" width="0.0764%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="6"/><text x="0.2500%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.08%)</title><rect x="0.0000%" y="613" width="0.0764%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="6"/><text x="0.2500%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (3 samples, 0.04%)</title><rect x="0.0382%" y="597" width="0.0382%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="3"/><text x="0.2882%" y="607.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (3 samples, 0.04%)</title><rect x="0.0382%" y="581" width="0.0382%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="3"/><text x="0.2882%" y="591.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (3 samples, 0.04%)</title><rect x="0.0382%" y="565" width="0.0382%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="3"/><text x="0.2882%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (3 samples, 0.04%)</title><rect x="0.0382%" y="549" width="0.0382%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="3"/><text x="0.2882%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.04%)</title><rect x="0.0382%" y="533" width="0.0382%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="3"/><text x="0.2882%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.04%)</title><rect x="0.0382%" y="517" width="0.0382%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="3"/><text x="0.2882%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="0.0637%" y="501" width="0.0127%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="1"/><text x="0.3137%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.01%)</title><rect x="0.0891%" y="565" width="0.0127%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="1"/><text x="0.3391%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="0.0764%" y="645" width="0.0382%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="3"/><text x="0.3264%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="0.0891%" y="629" width="0.0255%" height="15" fill="rgb(225,111,53)" fg:x="7" fg:w="2"/><text x="0.3391%" y="639.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (2 samples, 0.03%)</title><rect x="0.0891%" y="613" width="0.0255%" height="15" fill="rgb(238,160,17)" fg:x="7" fg:w="2"/><text x="0.3391%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.03%)</title><rect x="0.0891%" y="597" width="0.0255%" height="15" fill="rgb(214,148,48)" fg:x="7" fg:w="2"/><text x="0.3391%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="0.0891%" y="581" width="0.0255%" height="15" fill="rgb(232,36,49)" fg:x="7" fg:w="2"/><text x="0.3391%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.01%)</title><rect x="0.1019%" y="565" width="0.0127%" height="15" fill="rgb(209,103,24)" fg:x="8" fg:w="1"/><text x="0.3519%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.01%)</title><rect x="0.1019%" y="549" width="0.0127%" height="15" fill="rgb(229,88,8)" fg:x="8" fg:w="1"/><text x="0.3519%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.01%)</title><rect x="0.1019%" y="533" width="0.0127%" height="15" fill="rgb(213,181,19)" fg:x="8" fg:w="1"/><text x="0.3519%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.1146%" y="501" width="0.0127%" height="15" fill="rgb(254,191,54)" fg:x="9" fg:w="1"/><text x="0.3646%" y="511.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.1146%" y="485" width="0.0127%" height="15" fill="rgb(241,83,37)" fg:x="9" fg:w="1"/><text x="0.3646%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.1146%" y="469" width="0.0127%" height="15" fill="rgb(233,36,39)" fg:x="9" fg:w="1"/><text x="0.3646%" y="479.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.01%)</title><rect x="0.1273%" y="405" width="0.0127%" height="15" fill="rgb(226,3,54)" fg:x="10" fg:w="1"/><text x="0.3773%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="0.1273%" y="389" width="0.0127%" height="15" fill="rgb(245,192,40)" fg:x="10" fg:w="1"/><text x="0.3773%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="0.1273%" y="373" width="0.0127%" height="15" fill="rgb(238,167,29)" fg:x="10" fg:w="1"/><text x="0.3773%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="0.1273%" y="357" width="0.0127%" height="15" fill="rgb(232,182,51)" fg:x="10" fg:w="1"/><text x="0.3773%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="0.1273%" y="341" width="0.0127%" height="15" fill="rgb(231,60,39)" fg:x="10" fg:w="1"/><text x="0.3773%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="0.1273%" y="325" width="0.0127%" height="15" fill="rgb(208,69,12)" fg:x="10" fg:w="1"/><text x="0.3773%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="0.1401%" y="357" width="0.0127%" height="15" fill="rgb(235,93,37)" fg:x="11" fg:w="1"/><text x="0.3901%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.03%)</title><rect x="0.1401%" y="405" width="0.0255%" height="15" fill="rgb(213,116,39)" fg:x="11" fg:w="2"/><text x="0.3901%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.03%)</title><rect x="0.1401%" y="389" width="0.0255%" height="15" fill="rgb(222,207,29)" fg:x="11" fg:w="2"/><text x="0.3901%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.03%)</title><rect x="0.1401%" y="373" width="0.0255%" height="15" fill="rgb(206,96,30)" fg:x="11" fg:w="2"/><text x="0.3901%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="0.1528%" y="357" width="0.0127%" height="15" fill="rgb(218,138,4)" fg:x="12" fg:w="1"/><text x="0.4028%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="0.1528%" y="341" width="0.0127%" height="15" fill="rgb(250,191,14)" fg:x="12" fg:w="1"/><text x="0.4028%" y="351.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.01%)</title><rect x="0.1528%" y="325" width="0.0127%" height="15" fill="rgb(239,60,40)" fg:x="12" fg:w="1"/><text x="0.4028%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (1 samples, 0.01%)</title><rect x="0.1655%" y="325" width="0.0127%" height="15" fill="rgb(206,27,48)" fg:x="13" fg:w="1"/><text x="0.4155%" y="335.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.01%)</title><rect x="0.1655%" y="309" width="0.0127%" height="15" fill="rgb(225,35,8)" fg:x="13" fg:w="1"/><text x="0.4155%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="0.1655%" y="293" width="0.0127%" height="15" fill="rgb(250,213,24)" fg:x="13" fg:w="1"/><text x="0.4155%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="0.1655%" y="277" width="0.0127%" height="15" fill="rgb(247,123,22)" fg:x="13" fg:w="1"/><text x="0.4155%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="0.1655%" y="261" width="0.0127%" height="15" fill="rgb(231,138,38)" fg:x="13" fg:w="1"/><text x="0.4155%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="0.1655%" y="245" width="0.0127%" height="15" fill="rgb(231,145,46)" fg:x="13" fg:w="1"/><text x="0.4155%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="0.1655%" y="229" width="0.0127%" height="15" fill="rgb(251,118,11)" fg:x="13" fg:w="1"/><text x="0.4155%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="0.1655%" y="213" width="0.0127%" height="15" fill="rgb(217,147,25)" fg:x="13" fg:w="1"/><text x="0.4155%" y="223.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.08%)</title><rect x="0.1146%" y="645" width="0.0764%" height="15" fill="rgb(247,81,37)" fg:x="9" fg:w="6"/><text x="0.3646%" y="655.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.08%)</title><rect x="0.1146%" y="629" width="0.0764%" height="15" fill="rgb(209,12,38)" fg:x="9" fg:w="6"/><text x="0.3646%" y="639.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.08%)</title><rect x="0.1146%" y="613" width="0.0764%" height="15" fill="rgb(227,1,9)" fg:x="9" fg:w="6"/><text x="0.3646%" y="623.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.08%)</title><rect x="0.1146%" y="597" width="0.0764%" height="15" fill="rgb(248,47,43)" fg:x="9" fg:w="6"/><text x="0.3646%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.08%)</title><rect x="0.1146%" y="581" width="0.0764%" height="15" fill="rgb(221,10,30)" fg:x="9" fg:w="6"/><text x="0.3646%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.08%)</title><rect x="0.1146%" y="565" width="0.0764%" height="15" fill="rgb(210,229,1)" fg:x="9" fg:w="6"/><text x="0.3646%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.08%)</title><rect x="0.1146%" y="549" width="0.0764%" height="15" fill="rgb(222,148,37)" fg:x="9" fg:w="6"/><text x="0.3646%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.08%)</title><rect x="0.1146%" y="533" width="0.0764%" height="15" fill="rgb(234,67,33)" fg:x="9" fg:w="6"/><text x="0.3646%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.08%)</title><rect x="0.1146%" y="517" width="0.0764%" height="15" fill="rgb(247,98,35)" fg:x="9" fg:w="6"/><text x="0.3646%" y="527.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (5 samples, 0.06%)</title><rect x="0.1273%" y="501" width="0.0637%" height="15" fill="rgb(247,138,52)" fg:x="10" fg:w="5"/><text x="0.3773%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.06%)</title><rect x="0.1273%" y="485" width="0.0637%" height="15" fill="rgb(213,79,30)" fg:x="10" fg:w="5"/><text x="0.3773%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.06%)</title><rect x="0.1273%" y="469" width="0.0637%" height="15" fill="rgb(246,177,23)" fg:x="10" fg:w="5"/><text x="0.3773%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.06%)</title><rect x="0.1273%" y="453" width="0.0637%" height="15" fill="rgb(230,62,27)" fg:x="10" fg:w="5"/><text x="0.3773%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (5 samples, 0.06%)</title><rect x="0.1273%" y="437" width="0.0637%" height="15" fill="rgb(216,154,8)" fg:x="10" fg:w="5"/><text x="0.3773%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.06%)</title><rect x="0.1273%" y="421" width="0.0637%" height="15" fill="rgb(244,35,45)" fg:x="10" fg:w="5"/><text x="0.3773%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.03%)</title><rect x="0.1655%" y="405" width="0.0255%" height="15" fill="rgb(251,115,12)" fg:x="13" fg:w="2"/><text x="0.4155%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.03%)</title><rect x="0.1655%" y="389" width="0.0255%" height="15" fill="rgb(240,54,50)" fg:x="13" fg:w="2"/><text x="0.4155%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.03%)</title><rect x="0.1655%" y="373" width="0.0255%" height="15" fill="rgb(233,84,52)" fg:x="13" fg:w="2"/><text x="0.4155%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (2 samples, 0.03%)</title><rect x="0.1655%" y="357" width="0.0255%" height="15" fill="rgb(207,117,47)" fg:x="13" fg:w="2"/><text x="0.4155%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (2 samples, 0.03%)</title><rect x="0.1655%" y="341" width="0.0255%" height="15" fill="rgb(249,43,39)" fg:x="13" fg:w="2"/><text x="0.4155%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.01%)</title><rect x="0.1783%" y="325" width="0.0127%" height="15" fill="rgb(209,38,44)" fg:x="14" fg:w="1"/><text x="0.4283%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.01%)</title><rect x="0.1783%" y="309" width="0.0127%" height="15" fill="rgb(236,212,23)" fg:x="14" fg:w="1"/><text x="0.4283%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup::{{closure}} (10 samples, 0.13%)</title><rect x="0.2547%" y="613" width="0.1273%" height="15" fill="rgb(242,79,21)" fg:x="20" fg:w="10"/><text x="0.5047%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;mut B&gt; for &amp;mut A&gt;::eq (5 samples, 0.06%)</title><rect x="0.3183%" y="597" width="0.0637%" height="15" fill="rgb(211,96,35)" fg:x="25" fg:w="5"/><text x="0.5683%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u8&gt;::eq (1 samples, 0.01%)</title><rect x="0.3693%" y="581" width="0.0127%" height="15" fill="rgb(253,215,40)" fg:x="29" fg:w="1"/><text x="0.6193%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup (16 samples, 0.20%)</title><rect x="0.1910%" y="645" width="0.2037%" height="15" fill="rgb(211,81,21)" fg:x="15" fg:w="16"/><text x="0.4410%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup_by (16 samples, 0.20%)</title><rect x="0.1910%" y="629" width="0.2037%" height="15" fill="rgb(208,190,38)" fg:x="15" fg:w="16"/><text x="0.4410%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="0.3820%" y="613" width="0.0127%" height="15" fill="rgb(235,213,38)" fg:x="30" fg:w="1"/><text x="0.6320%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="0.3948%" y="645" width="0.0127%" height="15" fill="rgb(237,122,38)" fg:x="31" fg:w="1"/><text x="0.6448%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.3948%" y="629" width="0.0127%" height="15" fill="rgb(244,218,35)" fg:x="31" fg:w="1"/><text x="0.6448%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="0.3948%" y="613" width="0.0127%" height="15" fill="rgb(240,68,47)" fg:x="31" fg:w="1"/><text x="0.6448%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="0.3948%" y="597" width="0.0127%" height="15" fill="rgb(210,16,53)" fg:x="31" fg:w="1"/><text x="0.6448%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.01%)</title><rect x="0.3948%" y="581" width="0.0127%" height="15" fill="rgb(235,124,12)" fg:x="31" fg:w="1"/><text x="0.6448%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="0.7513%" y="405" width="0.0127%" height="15" fill="rgb(224,169,11)" fg:x="59" fg:w="1"/><text x="1.0013%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (1 samples, 0.01%)</title><rect x="0.7513%" y="389" width="0.0127%" height="15" fill="rgb(250,166,2)" fg:x="59" fg:w="1"/><text x="1.0013%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (1 samples, 0.01%)</title><rect x="0.7513%" y="373" width="0.0127%" height="15" fill="rgb(242,216,29)" fg:x="59" fg:w="1"/><text x="1.0013%" y="383.50"></text></g><g><title>&lt;&amp;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.05%)</title><rect x="0.7258%" y="501" width="0.0509%" height="15" fill="rgb(230,116,27)" fg:x="57" fg:w="4"/><text x="0.9758%" y="511.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (4 samples, 0.05%)</title><rect x="0.7258%" y="485" width="0.0509%" height="15" fill="rgb(228,99,48)" fg:x="57" fg:w="4"/><text x="0.9758%" y="495.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (4 samples, 0.05%)</title><rect x="0.7258%" y="469" width="0.0509%" height="15" fill="rgb(253,11,6)" fg:x="57" fg:w="4"/><text x="0.9758%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (4 samples, 0.05%)</title><rect x="0.7258%" y="453" width="0.0509%" height="15" fill="rgb(247,143,39)" fg:x="57" fg:w="4"/><text x="0.9758%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (4 samples, 0.05%)</title><rect x="0.7258%" y="437" width="0.0509%" height="15" fill="rgb(236,97,10)" fg:x="57" fg:w="4"/><text x="0.9758%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (4 samples, 0.05%)</title><rect x="0.7258%" y="421" width="0.0509%" height="15" fill="rgb(233,208,19)" fg:x="57" fg:w="4"/><text x="0.9758%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (1 samples, 0.01%)</title><rect x="0.7640%" y="405" width="0.0127%" height="15" fill="rgb(216,164,2)" fg:x="60" fg:w="1"/><text x="1.0140%" y="415.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.7768%" y="453" width="0.0127%" height="15" fill="rgb(220,129,5)" fg:x="61" fg:w="1"/><text x="1.0268%" y="463.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.7768%" y="437" width="0.0127%" height="15" fill="rgb(242,17,10)" fg:x="61" fg:w="1"/><text x="1.0268%" y="447.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.7768%" y="421" width="0.0127%" height="15" fill="rgb(242,107,0)" fg:x="61" fg:w="1"/><text x="1.0268%" y="431.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.7768%" y="405" width="0.0127%" height="15" fill="rgb(251,28,31)" fg:x="61" fg:w="1"/><text x="1.0268%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.7768%" y="389" width="0.0127%" height="15" fill="rgb(233,223,10)" fg:x="61" fg:w="1"/><text x="1.0268%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.01%)</title><rect x="0.7768%" y="373" width="0.0127%" height="15" fill="rgb(215,21,27)" fg:x="61" fg:w="1"/><text x="1.0268%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="0.7895%" y="405" width="0.0127%" height="15" fill="rgb(232,23,21)" fg:x="62" fg:w="1"/><text x="1.0395%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="0.7895%" y="389" width="0.0127%" height="15" fill="rgb(244,5,23)" fg:x="62" fg:w="1"/><text x="1.0395%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="0.7895%" y="373" width="0.0127%" height="15" fill="rgb(226,81,46)" fg:x="62" fg:w="1"/><text x="1.0395%" y="383.50"></text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::down (1 samples, 0.01%)</title><rect x="0.8022%" y="405" width="0.0127%" height="15" fill="rgb(247,70,30)" fg:x="63" fg:w="1"/><text x="1.0522%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="0.8022%" y="389" width="0.0127%" height="15" fill="rgb(212,68,19)" fg:x="63" fg:w="1"/><text x="1.0522%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="0.8022%" y="373" width="0.0127%" height="15" fill="rgb(240,187,13)" fg:x="63" fg:w="1"/><text x="1.0522%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="0.8022%" y="357" width="0.0127%" height="15" fill="rgb(223,113,26)" fg:x="63" fg:w="1"/><text x="1.0522%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="0.8022%" y="341" width="0.0127%" height="15" fill="rgb(206,192,2)" fg:x="63" fg:w="1"/><text x="1.0522%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="0.7768%" y="469" width="0.0509%" height="15" fill="rgb(241,108,4)" fg:x="61" fg:w="4"/><text x="1.0268%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.04%)</title><rect x="0.7895%" y="453" width="0.0382%" height="15" fill="rgb(247,173,49)" fg:x="62" fg:w="3"/><text x="1.0395%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.04%)</title><rect x="0.7895%" y="437" width="0.0382%" height="15" fill="rgb(224,114,35)" fg:x="62" fg:w="3"/><text x="1.0395%" y="447.50"></text></g><g><title>wfc::wfc::baseline::BaseLine::legal_tiles::{{closure}} (3 samples, 0.04%)</title><rect x="0.7895%" y="421" width="0.0382%" height="15" fill="rgb(245,159,27)" fg:x="62" fg:w="3"/><text x="1.0395%" y="431.50"></text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::front (1 samples, 0.01%)</title><rect x="0.8150%" y="405" width="0.0127%" height="15" fill="rgb(245,172,44)" fg:x="64" fg:w="1"/><text x="1.0650%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="0.8150%" y="389" width="0.0127%" height="15" fill="rgb(236,23,11)" fg:x="64" fg:w="1"/><text x="1.0650%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="0.8150%" y="373" width="0.0127%" height="15" fill="rgb(205,117,38)" fg:x="64" fg:w="1"/><text x="1.0650%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="0.8150%" y="357" width="0.0127%" height="15" fill="rgb(237,72,25)" fg:x="64" fg:w="1"/><text x="1.0650%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.01%)</title><rect x="0.8150%" y="341" width="0.0127%" height="15" fill="rgb(244,70,9)" fg:x="64" fg:w="1"/><text x="1.0650%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.01%)</title><rect x="0.8150%" y="325" width="0.0127%" height="15" fill="rgb(217,125,39)" fg:x="64" fg:w="1"/><text x="1.0650%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.01%)</title><rect x="0.8150%" y="309" width="0.0127%" height="15" fill="rgb(235,36,10)" fg:x="64" fg:w="1"/><text x="1.0650%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="0.7768%" y="501" width="0.0637%" height="15" fill="rgb(251,123,47)" fg:x="61" fg:w="5"/><text x="1.0268%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (5 samples, 0.06%)</title><rect x="0.7768%" y="485" width="0.0637%" height="15" fill="rgb(221,13,13)" fg:x="61" fg:w="5"/><text x="1.0268%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.01%)</title><rect x="0.8277%" y="469" width="0.0127%" height="15" fill="rgb(238,131,9)" fg:x="65" fg:w="1"/><text x="1.0777%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.03%)</title><rect x="0.9296%" y="485" width="0.0255%" height="15" fill="rgb(211,50,8)" fg:x="73" fg:w="2"/><text x="1.1796%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.01%)</title><rect x="1.3498%" y="389" width="0.0127%" height="15" fill="rgb(245,182,24)" fg:x="106" fg:w="1"/><text x="1.5998%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (17 samples, 0.22%)</title><rect x="1.7573%" y="373" width="0.2165%" height="15" fill="rgb(242,14,37)" fg:x="138" fg:w="17"/><text x="2.0073%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.03%)</title><rect x="1.9483%" y="357" width="0.0255%" height="15" fill="rgb(246,228,12)" fg:x="153" fg:w="2"/><text x="2.1983%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.03%)</title><rect x="1.9483%" y="341" width="0.0255%" height="15" fill="rgb(213,55,15)" fg:x="153" fg:w="2"/><text x="2.1983%" y="351.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (16 samples, 0.20%)</title><rect x="1.9738%" y="373" width="0.2037%" height="15" fill="rgb(209,9,3)" fg:x="155" fg:w="16"/><text x="2.2238%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (11 samples, 0.14%)</title><rect x="2.0374%" y="357" width="0.1401%" height="15" fill="rgb(230,59,30)" fg:x="160" fg:w="11"/><text x="2.2874%" y="367.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="2.1775%" y="373" width="0.0127%" height="15" fill="rgb(209,121,21)" fg:x="171" fg:w="1"/><text x="2.4275%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (2 samples, 0.03%)</title><rect x="2.1902%" y="373" width="0.0255%" height="15" fill="rgb(220,109,13)" fg:x="172" fg:w="2"/><text x="2.4402%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 1.07%)</title><rect x="1.2479%" y="405" width="1.0697%" height="15" fill="rgb(232,18,1)" fg:x="98" fg:w="84"/><text x="1.4979%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (75 samples, 0.96%)</title><rect x="1.3625%" y="389" width="0.9550%" height="15" fill="rgb(215,41,42)" fg:x="107" fg:w="75"/><text x="1.6125%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (8 samples, 0.10%)</title><rect x="2.2157%" y="373" width="0.1019%" height="15" fill="rgb(224,123,36)" fg:x="174" fg:w="8"/><text x="2.4657%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (8 samples, 0.10%)</title><rect x="2.2157%" y="357" width="0.1019%" height="15" fill="rgb(240,125,3)" fg:x="174" fg:w="8"/><text x="2.4657%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (6 samples, 0.08%)</title><rect x="2.2412%" y="341" width="0.0764%" height="15" fill="rgb(205,98,50)" fg:x="176" fg:w="6"/><text x="2.4912%" y="351.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (3 samples, 0.04%)</title><rect x="2.2794%" y="325" width="0.0382%" height="15" fill="rgb(205,185,37)" fg:x="179" fg:w="3"/><text x="2.5294%" y="335.50"></text></g><g><title>core::ops::function::FnOnce::call_once (126 samples, 1.60%)</title><rect x="0.9550%" y="485" width="1.6045%" height="15" fill="rgb(238,207,15)" fg:x="75" fg:w="126"/><text x="1.2050%" y="495.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (121 samples, 1.54%)</title><rect x="1.0187%" y="469" width="1.5408%" height="15" fill="rgb(213,199,42)" fg:x="80" fg:w="121"/><text x="1.2687%" y="479.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (113 samples, 1.44%)</title><rect x="1.1206%" y="453" width="1.4389%" height="15" fill="rgb(235,201,11)" fg:x="88" fg:w="113"/><text x="1.3706%" y="463.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (112 samples, 1.43%)</title><rect x="1.1333%" y="437" width="1.4262%" height="15" fill="rgb(207,46,11)" fg:x="89" fg:w="112"/><text x="1.3833%" y="447.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (110 samples, 1.40%)</title><rect x="1.1588%" y="421" width="1.4007%" height="15" fill="rgb(241,35,35)" fg:x="91" fg:w="110"/><text x="1.4088%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (19 samples, 0.24%)</title><rect x="2.3176%" y="405" width="0.2419%" height="15" fill="rgb(243,32,47)" fg:x="182" fg:w="19"/><text x="2.5676%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (14 samples, 0.18%)</title><rect x="2.3813%" y="389" width="0.1783%" height="15" fill="rgb(247,202,23)" fg:x="187" fg:w="14"/><text x="2.6313%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.05%)</title><rect x="2.5086%" y="373" width="0.0509%" height="15" fill="rgb(219,102,11)" fg:x="197" fg:w="4"/><text x="2.7586%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.05%)</title><rect x="2.5086%" y="357" width="0.0509%" height="15" fill="rgb(243,110,44)" fg:x="197" fg:w="4"/><text x="2.7586%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (153 samples, 1.95%)</title><rect x="0.6240%" y="533" width="1.9483%" height="15" fill="rgb(222,74,54)" fg:x="49" fg:w="153"/><text x="0.8740%" y="543.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (151 samples, 1.92%)</title><rect x="0.6494%" y="517" width="1.9228%" height="15" fill="rgb(216,99,12)" fg:x="51" fg:w="151"/><text x="0.8994%" y="527.50">&lt;..</text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (136 samples, 1.73%)</title><rect x="0.8404%" y="501" width="1.7318%" height="15" fill="rgb(226,22,26)" fg:x="66" fg:w="136"/><text x="1.0904%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.01%)</title><rect x="2.5595%" y="485" width="0.0127%" height="15" fill="rgb(217,163,10)" fg:x="201" fg:w="1"/><text x="2.8095%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.01%)</title><rect x="2.5595%" y="469" width="0.0127%" height="15" fill="rgb(213,25,53)" fg:x="201" fg:w="1"/><text x="2.8095%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (187 samples, 2.38%)</title><rect x="0.5603%" y="549" width="2.3813%" height="15" fill="rgb(252,105,26)" fg:x="44" fg:w="187"/><text x="0.8103%" y="559.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (29 samples, 0.37%)</title><rect x="2.5723%" y="533" width="0.3693%" height="15" fill="rgb(220,39,43)" fg:x="202" fg:w="29"/><text x="2.8223%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10 samples, 0.13%)</title><rect x="2.8142%" y="517" width="0.1273%" height="15" fill="rgb(229,68,48)" fg:x="221" fg:w="10"/><text x="3.0642%" y="527.50"></text></g><g><title>wfc::wfc::baseline::BaseLine::legal_tiles::{{closure}} (2 samples, 0.03%)</title><rect x="2.9161%" y="501" width="0.0255%" height="15" fill="rgb(252,8,32)" fg:x="229" fg:w="2"/><text x="3.1661%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (40 samples, 0.51%)</title><rect x="3.4127%" y="517" width="0.5094%" height="15" fill="rgb(223,20,43)" fg:x="268" fg:w="40"/><text x="3.6627%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (18 samples, 0.23%)</title><rect x="3.6929%" y="501" width="0.2292%" height="15" fill="rgb(229,81,49)" fg:x="290" fg:w="18"/><text x="3.9429%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (83 samples, 1.06%)</title><rect x="2.9416%" y="549" width="1.0569%" height="15" fill="rgb(236,28,36)" fg:x="231" fg:w="83"/><text x="3.1916%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (82 samples, 1.04%)</title><rect x="2.9543%" y="533" width="1.0442%" height="15" fill="rgb(249,185,26)" fg:x="232" fg:w="82"/><text x="3.2043%" y="543.50"></text></g><g><title>core::ptr::null_mut (6 samples, 0.08%)</title><rect x="3.9221%" y="517" width="0.0764%" height="15" fill="rgb(249,174,33)" fg:x="308" fg:w="6"/><text x="4.1721%" y="527.50"></text></g><g><title>core::ptr::invalid_mut (5 samples, 0.06%)</title><rect x="3.9348%" y="501" width="0.0637%" height="15" fill="rgb(233,201,37)" fg:x="309" fg:w="5"/><text x="4.1848%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (283 samples, 3.60%)</title><rect x="0.4075%" y="581" width="3.6037%" height="15" fill="rgb(221,78,26)" fg:x="32" fg:w="283"/><text x="0.6575%" y="591.50">&lt;all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (283 samples, 3.60%)</title><rect x="0.4075%" y="565" width="3.6037%" height="15" fill="rgb(250,127,30)" fg:x="32" fg:w="283"/><text x="0.6575%" y="575.50">allo..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="3.9985%" y="549" width="0.0127%" height="15" fill="rgb(230,49,44)" fg:x="314" fg:w="1"/><text x="4.2485%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (284 samples, 3.62%)</title><rect x="0.4075%" y="645" width="3.6165%" height="15" fill="rgb(229,67,23)" fg:x="32" fg:w="284"/><text x="0.6575%" y="655.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (284 samples, 3.62%)</title><rect x="0.4075%" y="629" width="3.6165%" height="15" fill="rgb(249,83,47)" fg:x="32" fg:w="284"/><text x="0.6575%" y="639.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (284 samples, 3.62%)</title><rect x="0.4075%" y="613" width="3.6165%" height="15" fill="rgb(215,43,3)" fg:x="32" fg:w="284"/><text x="0.6575%" y="623.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (284 samples, 3.62%)</title><rect x="0.4075%" y="597" width="3.6165%" height="15" fill="rgb(238,154,13)" fg:x="32" fg:w="284"/><text x="0.6575%" y="607.50">&lt;all..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="4.0112%" y="581" width="0.0127%" height="15" fill="rgb(219,56,2)" fg:x="315" fg:w="1"/><text x="4.2612%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="4.0112%" y="565" width="0.0127%" height="15" fill="rgb(233,0,4)" fg:x="315" fg:w="1"/><text x="4.2612%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="4.0112%" y="549" width="0.0127%" height="15" fill="rgb(235,30,7)" fg:x="315" fg:w="1"/><text x="4.2612%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="4.0112%" y="533" width="0.0127%" height="15" fill="rgb(250,79,13)" fg:x="315" fg:w="1"/><text x="4.2612%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (1 samples, 0.01%)</title><rect x="4.0239%" y="645" width="0.0127%" height="15" fill="rgb(211,146,34)" fg:x="316" fg:w="1"/><text x="4.2739%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="4.0239%" y="629" width="0.0127%" height="15" fill="rgb(228,22,38)" fg:x="316" fg:w="1"/><text x="4.2739%" y="639.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="4.0367%" y="597" width="0.0127%" height="15" fill="rgb(235,168,5)" fg:x="317" fg:w="1"/><text x="4.2867%" y="607.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="4.0367%" y="581" width="0.0127%" height="15" fill="rgb(221,155,16)" fg:x="317" fg:w="1"/><text x="4.2867%" y="591.50"></text></g><g><title>core::slice::sort::choose_pivot (1 samples, 0.01%)</title><rect x="4.0494%" y="597" width="0.0127%" height="15" fill="rgb(215,215,53)" fg:x="318" fg:w="1"/><text x="4.2994%" y="607.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.01%)</title><rect x="4.0494%" y="581" width="0.0127%" height="15" fill="rgb(223,4,10)" fg:x="318" fg:w="1"/><text x="4.2994%" y="591.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.01%)</title><rect x="4.0494%" y="565" width="0.0127%" height="15" fill="rgb(234,103,6)" fg:x="318" fg:w="1"/><text x="4.2994%" y="575.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.01%)</title><rect x="4.0494%" y="549" width="0.0127%" height="15" fill="rgb(227,97,0)" fg:x="318" fg:w="1"/><text x="4.2994%" y="559.50"></text></g><g><title>core::cmp::min (2 samples, 0.03%)</title><rect x="4.5715%" y="565" width="0.0255%" height="15" fill="rgb(234,150,53)" fg:x="359" fg:w="2"/><text x="4.8215%" y="575.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="4.5842%" y="549" width="0.0127%" height="15" fill="rgb(228,201,54)" fg:x="360" fg:w="1"/><text x="4.8342%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.04%)</title><rect x="4.5970%" y="565" width="0.0382%" height="15" fill="rgb(222,22,37)" fg:x="361" fg:w="3"/><text x="4.8470%" y="575.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (5 samples, 0.06%)</title><rect x="4.9790%" y="533" width="0.0637%" height="15" fill="rgb(237,53,32)" fg:x="391" fg:w="5"/><text x="5.2290%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.04%)</title><rect x="5.0427%" y="533" width="0.0382%" height="15" fill="rgb(233,25,53)" fg:x="396" fg:w="3"/><text x="5.2927%" y="543.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (128 samples, 1.63%)</title><rect x="4.6352%" y="565" width="1.6300%" height="15" fill="rgb(210,40,34)" fg:x="364" fg:w="128"/><text x="4.8852%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (128 samples, 1.63%)</title><rect x="4.6352%" y="549" width="1.6300%" height="15" fill="rgb(241,220,44)" fg:x="364" fg:w="128"/><text x="4.8852%" y="559.50"></text></g><g><title>core::mem::replace (93 samples, 1.18%)</title><rect x="5.0809%" y="533" width="1.1843%" height="15" fill="rgb(235,28,35)" fg:x="399" fg:w="93"/><text x="5.3309%" y="543.50"></text></g><g><title>core::ptr::read (17 samples, 0.22%)</title><rect x="6.0486%" y="517" width="0.2165%" height="15" fill="rgb(210,56,17)" fg:x="475" fg:w="17"/><text x="6.2986%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (21 samples, 0.27%)</title><rect x="6.2651%" y="565" width="0.2674%" height="15" fill="rgb(224,130,29)" fg:x="492" fg:w="21"/><text x="6.5151%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (2 samples, 0.03%)</title><rect x="6.5071%" y="549" width="0.0255%" height="15" fill="rgb(235,212,8)" fg:x="511" fg:w="2"/><text x="6.7571%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (34 samples, 0.43%)</title><rect x="6.5325%" y="565" width="0.4330%" height="15" fill="rgb(223,33,50)" fg:x="513" fg:w="34"/><text x="6.7825%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (30 samples, 0.38%)</title><rect x="6.5835%" y="549" width="0.3820%" height="15" fill="rgb(219,149,13)" fg:x="517" fg:w="30"/><text x="6.8335%" y="559.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="6.9528%" y="533" width="0.0127%" height="15" fill="rgb(250,156,29)" fg:x="546" fg:w="1"/><text x="7.2028%" y="543.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="6.9528%" y="517" width="0.0127%" height="15" fill="rgb(216,193,19)" fg:x="546" fg:w="1"/><text x="7.2028%" y="527.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="6.9528%" y="501" width="0.0127%" height="15" fill="rgb(216,135,14)" fg:x="546" fg:w="1"/><text x="7.2028%" y="511.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="6.9528%" y="485" width="0.0127%" height="15" fill="rgb(241,47,5)" fg:x="546" fg:w="1"/><text x="7.2028%" y="495.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="6.9528%" y="469" width="0.0127%" height="15" fill="rgb(233,42,35)" fg:x="546" fg:w="1"/><text x="7.2028%" y="479.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="6.9528%" y="453" width="0.0127%" height="15" fill="rgb(231,13,6)" fg:x="546" fg:w="1"/><text x="7.2028%" y="463.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="6.9528%" y="437" width="0.0127%" height="15" fill="rgb(207,181,40)" fg:x="546" fg:w="1"/><text x="7.2028%" y="447.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="6.9528%" y="421" width="0.0127%" height="15" fill="rgb(254,173,49)" fg:x="546" fg:w="1"/><text x="7.2028%" y="431.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="6.9528%" y="405" width="0.0127%" height="15" fill="rgb(221,1,38)" fg:x="546" fg:w="1"/><text x="7.2028%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (6 samples, 0.08%)</title><rect x="6.9655%" y="565" width="0.0764%" height="15" fill="rgb(206,124,46)" fg:x="547" fg:w="6"/><text x="7.2155%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.06%)</title><rect x="6.9782%" y="549" width="0.0637%" height="15" fill="rgb(249,21,11)" fg:x="548" fg:w="5"/><text x="7.2282%" y="559.50"></text></g><g><title>core::slice::sort::partition (235 samples, 2.99%)</title><rect x="4.0621%" y="597" width="2.9925%" height="15" fill="rgb(222,201,40)" fg:x="319" fg:w="235"/><text x="4.3121%" y="607.50">cor..</text></g><g><title>core::slice::sort::partition_in_blocks (235 samples, 2.99%)</title><rect x="4.0621%" y="581" width="2.9925%" height="15" fill="rgb(235,61,29)" fg:x="319" fg:w="235"/><text x="4.3121%" y="591.50">cor..</text></g><g><title>core::slice::sort::partition_in_blocks::width (1 samples, 0.01%)</title><rect x="7.0419%" y="565" width="0.0127%" height="15" fill="rgb(219,207,3)" fg:x="553" fg:w="1"/><text x="7.2919%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (1 samples, 0.01%)</title><rect x="7.0546%" y="581" width="0.0127%" height="15" fill="rgb(222,56,46)" fg:x="554" fg:w="1"/><text x="7.3046%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (1 samples, 0.01%)</title><rect x="7.0546%" y="565" width="0.0127%" height="15" fill="rgb(239,76,54)" fg:x="554" fg:w="1"/><text x="7.3046%" y="575.50"></text></g><g><title>core::slice::sort::break_patterns (1 samples, 0.01%)</title><rect x="7.0674%" y="581" width="0.0127%" height="15" fill="rgb(231,124,27)" fg:x="555" fg:w="1"/><text x="7.3174%" y="591.50"></text></g><g><title>core::slice::sort::break_patterns::{{closure}} (1 samples, 0.01%)</title><rect x="7.0674%" y="565" width="0.0127%" height="15" fill="rgb(249,195,6)" fg:x="555" fg:w="1"/><text x="7.3174%" y="575.50"></text></g><g><title>core::slice::sort::break_patterns::{{closure}} (1 samples, 0.01%)</title><rect x="7.0674%" y="549" width="0.0127%" height="15" fill="rgb(237,174,47)" fg:x="555" fg:w="1"/><text x="7.3174%" y="559.50"></text></g><g><title>core::slice::sort::choose_pivot (4 samples, 0.05%)</title><rect x="7.0801%" y="581" width="0.0509%" height="15" fill="rgb(206,201,31)" fg:x="556" fg:w="4"/><text x="7.3301%" y="591.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (4 samples, 0.05%)</title><rect x="7.0801%" y="565" width="0.0509%" height="15" fill="rgb(231,57,52)" fg:x="556" fg:w="4"/><text x="7.3301%" y="575.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (3 samples, 0.04%)</title><rect x="7.0928%" y="549" width="0.0382%" height="15" fill="rgb(248,177,22)" fg:x="557" fg:w="3"/><text x="7.3428%" y="559.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (3 samples, 0.04%)</title><rect x="7.0928%" y="533" width="0.0382%" height="15" fill="rgb(215,211,37)" fg:x="557" fg:w="3"/><text x="7.3428%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="7.1183%" y="517" width="0.0127%" height="15" fill="rgb(241,128,51)" fg:x="559" fg:w="1"/><text x="7.3683%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="7.1183%" y="501" width="0.0127%" height="15" fill="rgb(227,165,31)" fg:x="559" fg:w="1"/><text x="7.3683%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="7.1183%" y="485" width="0.0127%" height="15" fill="rgb(228,167,24)" fg:x="559" fg:w="1"/><text x="7.3683%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="7.1183%" y="469" width="0.0127%" height="15" fill="rgb(228,143,12)" fg:x="559" fg:w="1"/><text x="7.3683%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.01%)</title><rect x="7.1310%" y="565" width="0.0127%" height="15" fill="rgb(249,149,8)" fg:x="560" fg:w="1"/><text x="7.3810%" y="575.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="7.1310%" y="549" width="0.0127%" height="15" fill="rgb(243,35,44)" fg:x="560" fg:w="1"/><text x="7.3810%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="7.1310%" y="533" width="0.0127%" height="15" fill="rgb(246,89,9)" fg:x="560" fg:w="1"/><text x="7.3810%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="7.1310%" y="517" width="0.0127%" height="15" fill="rgb(233,213,13)" fg:x="560" fg:w="1"/><text x="7.3810%" y="527.50"></text></g><g><title>core::slice::sort::insertion_sort (3 samples, 0.04%)</title><rect x="7.1310%" y="581" width="0.0382%" height="15" fill="rgb(233,141,41)" fg:x="560" fg:w="3"/><text x="7.3810%" y="591.50"></text></g><g><title>core::slice::sort::shift_tail (2 samples, 0.03%)</title><rect x="7.1438%" y="565" width="0.0255%" height="15" fill="rgb(239,167,4)" fg:x="561" fg:w="2"/><text x="7.3938%" y="575.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="7.6149%" y="549" width="0.0127%" height="15" fill="rgb(209,217,16)" fg:x="598" fg:w="1"/><text x="7.8649%" y="559.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="7.6149%" y="533" width="0.0127%" height="15" fill="rgb(219,88,35)" fg:x="598" fg:w="1"/><text x="7.8649%" y="543.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="7.6149%" y="517" width="0.0127%" height="15" fill="rgb(220,193,23)" fg:x="598" fg:w="1"/><text x="7.8649%" y="527.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="7.6149%" y="501" width="0.0127%" height="15" fill="rgb(230,90,52)" fg:x="598" fg:w="1"/><text x="7.8649%" y="511.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="7.6149%" y="485" width="0.0127%" height="15" fill="rgb(252,106,19)" fg:x="598" fg:w="1"/><text x="7.8649%" y="495.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="7.6149%" y="469" width="0.0127%" height="15" fill="rgb(206,74,20)" fg:x="598" fg:w="1"/><text x="7.8649%" y="479.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="7.6149%" y="453" width="0.0127%" height="15" fill="rgb(230,138,44)" fg:x="598" fg:w="1"/><text x="7.8649%" y="463.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="7.6149%" y="437" width="0.0127%" height="15" fill="rgb(235,182,43)" fg:x="598" fg:w="1"/><text x="7.8649%" y="447.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="7.6149%" y="421" width="0.0127%" height="15" fill="rgb(242,16,51)" fg:x="598" fg:w="1"/><text x="7.8649%" y="431.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="7.6277%" y="549" width="0.0127%" height="15" fill="rgb(248,9,4)" fg:x="599" fg:w="1"/><text x="7.8777%" y="559.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="7.6277%" y="533" width="0.0127%" height="15" fill="rgb(210,31,22)" fg:x="599" fg:w="1"/><text x="7.8777%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.04%)</title><rect x="7.6404%" y="549" width="0.0382%" height="15" fill="rgb(239,54,39)" fg:x="600" fg:w="3"/><text x="7.8904%" y="559.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.04%)</title><rect x="8.0733%" y="517" width="0.0382%" height="15" fill="rgb(230,99,41)" fg:x="634" fg:w="3"/><text x="8.3233%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.04%)</title><rect x="8.1115%" y="517" width="0.0382%" height="15" fill="rgb(253,106,12)" fg:x="637" fg:w="3"/><text x="8.3615%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (116 samples, 1.48%)</title><rect x="7.6786%" y="549" width="1.4771%" height="15" fill="rgb(213,46,41)" fg:x="603" fg:w="116"/><text x="7.9286%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (115 samples, 1.46%)</title><rect x="7.6913%" y="533" width="1.4644%" height="15" fill="rgb(215,133,35)" fg:x="604" fg:w="115"/><text x="7.9413%" y="543.50"></text></g><g><title>core::mem::replace (79 samples, 1.01%)</title><rect x="8.1498%" y="517" width="1.0060%" height="15" fill="rgb(213,28,5)" fg:x="640" fg:w="79"/><text x="8.3998%" y="527.50"></text></g><g><title>core::ptr::read (10 samples, 0.13%)</title><rect x="9.0284%" y="501" width="0.1273%" height="15" fill="rgb(215,77,49)" fg:x="709" fg:w="10"/><text x="9.2784%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (26 samples, 0.33%)</title><rect x="9.1557%" y="549" width="0.3311%" height="15" fill="rgb(248,100,22)" fg:x="719" fg:w="26"/><text x="9.4057%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (2 samples, 0.03%)</title><rect x="9.4614%" y="533" width="0.0255%" height="15" fill="rgb(208,67,9)" fg:x="743" fg:w="2"/><text x="9.7114%" y="543.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="9.5123%" y="533" width="0.0127%" height="15" fill="rgb(219,133,21)" fg:x="747" fg:w="1"/><text x="9.7623%" y="543.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="9.5123%" y="517" width="0.0127%" height="15" fill="rgb(246,46,29)" fg:x="747" fg:w="1"/><text x="9.7623%" y="527.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="9.5123%" y="501" width="0.0127%" height="15" fill="rgb(246,185,52)" fg:x="747" fg:w="1"/><text x="9.7623%" y="511.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="9.5123%" y="485" width="0.0127%" height="15" fill="rgb(252,136,11)" fg:x="747" fg:w="1"/><text x="9.7623%" y="495.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="9.5123%" y="469" width="0.0127%" height="15" fill="rgb(219,138,53)" fg:x="747" fg:w="1"/><text x="9.7623%" y="479.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="9.5123%" y="453" width="0.0127%" height="15" fill="rgb(211,51,23)" fg:x="747" fg:w="1"/><text x="9.7623%" y="463.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="9.5123%" y="437" width="0.0127%" height="15" fill="rgb(247,221,28)" fg:x="747" fg:w="1"/><text x="9.7623%" y="447.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="9.5123%" y="421" width="0.0127%" height="15" fill="rgb(251,222,45)" fg:x="747" fg:w="1"/><text x="9.7623%" y="431.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="9.5123%" y="405" width="0.0127%" height="15" fill="rgb(217,162,53)" fg:x="747" fg:w="1"/><text x="9.7623%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (34 samples, 0.43%)</title><rect x="9.4868%" y="549" width="0.4330%" height="15" fill="rgb(229,93,14)" fg:x="745" fg:w="34"/><text x="9.7368%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (31 samples, 0.39%)</title><rect x="9.5250%" y="533" width="0.3948%" height="15" fill="rgb(209,67,49)" fg:x="748" fg:w="31"/><text x="9.7750%" y="543.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="9.9070%" y="517" width="0.0127%" height="15" fill="rgb(213,87,29)" fg:x="778" fg:w="1"/><text x="10.1570%" y="527.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="9.9070%" y="501" width="0.0127%" height="15" fill="rgb(205,151,52)" fg:x="778" fg:w="1"/><text x="10.1570%" y="511.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="9.9070%" y="485" width="0.0127%" height="15" fill="rgb(253,215,39)" fg:x="778" fg:w="1"/><text x="10.1570%" y="495.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="9.9070%" y="469" width="0.0127%" height="15" fill="rgb(221,220,41)" fg:x="778" fg:w="1"/><text x="10.1570%" y="479.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="9.9070%" y="453" width="0.0127%" height="15" fill="rgb(218,133,21)" fg:x="778" fg:w="1"/><text x="10.1570%" y="463.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="9.9070%" y="437" width="0.0127%" height="15" fill="rgb(221,193,43)" fg:x="778" fg:w="1"/><text x="10.1570%" y="447.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="9.9070%" y="421" width="0.0127%" height="15" fill="rgb(240,128,52)" fg:x="778" fg:w="1"/><text x="10.1570%" y="431.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="9.9070%" y="405" width="0.0127%" height="15" fill="rgb(253,114,12)" fg:x="778" fg:w="1"/><text x="10.1570%" y="415.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="9.9070%" y="389" width="0.0127%" height="15" fill="rgb(215,223,47)" fg:x="778" fg:w="1"/><text x="10.1570%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (11 samples, 0.14%)</title><rect x="9.9198%" y="549" width="0.1401%" height="15" fill="rgb(248,225,23)" fg:x="779" fg:w="11"/><text x="10.1698%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8 samples, 0.10%)</title><rect x="9.9580%" y="533" width="0.1019%" height="15" fill="rgb(250,108,0)" fg:x="782" fg:w="8"/><text x="10.2080%" y="543.50"></text></g><g><title>core::ptr::read (2 samples, 0.03%)</title><rect x="10.0598%" y="549" width="0.0255%" height="15" fill="rgb(228,208,7)" fg:x="790" fg:w="2"/><text x="10.3098%" y="559.50"></text></g><g><title>core::slice::sort::partition (232 samples, 2.95%)</title><rect x="7.1692%" y="581" width="2.9543%" height="15" fill="rgb(244,45,10)" fg:x="563" fg:w="232"/><text x="7.4192%" y="591.50">cor..</text></g><g><title>core::slice::sort::partition_in_blocks (229 samples, 2.92%)</title><rect x="7.2074%" y="565" width="2.9161%" height="15" fill="rgb(207,125,25)" fg:x="566" fg:w="229"/><text x="7.4574%" y="575.50">co..</text></g><g><title>core::slice::sort::partition_in_blocks::width (3 samples, 0.04%)</title><rect x="10.0853%" y="549" width="0.0382%" height="15" fill="rgb(210,195,18)" fg:x="792" fg:w="3"/><text x="10.3353%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (1 samples, 0.01%)</title><rect x="10.1108%" y="533" width="0.0127%" height="15" fill="rgb(249,80,12)" fg:x="794" fg:w="1"/><text x="10.3608%" y="543.50"></text></g><g><title>core::slice::sort::partition_equal (1 samples, 0.01%)</title><rect x="10.1235%" y="581" width="0.0127%" height="15" fill="rgb(221,65,9)" fg:x="795" fg:w="1"/><text x="10.3735%" y="591.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="10.1363%" y="565" width="0.0127%" height="15" fill="rgb(235,49,36)" fg:x="796" fg:w="1"/><text x="10.3863%" y="575.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="10.1363%" y="549" width="0.0127%" height="15" fill="rgb(225,32,20)" fg:x="796" fg:w="1"/><text x="10.3863%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (1 samples, 0.01%)</title><rect x="10.1490%" y="565" width="0.0127%" height="15" fill="rgb(215,141,46)" fg:x="797" fg:w="1"/><text x="10.3990%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (1 samples, 0.01%)</title><rect x="10.1490%" y="549" width="0.0127%" height="15" fill="rgb(250,160,47)" fg:x="797" fg:w="1"/><text x="10.3990%" y="559.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.01%)</title><rect x="10.1490%" y="533" width="0.0127%" height="15" fill="rgb(216,222,40)" fg:x="797" fg:w="1"/><text x="10.3990%" y="543.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.01%)</title><rect x="10.1490%" y="517" width="0.0127%" height="15" fill="rgb(234,217,39)" fg:x="797" fg:w="1"/><text x="10.3990%" y="527.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.01%)</title><rect x="10.1490%" y="501" width="0.0127%" height="15" fill="rgb(207,178,40)" fg:x="797" fg:w="1"/><text x="10.3990%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="10.1617%" y="517" width="0.0127%" height="15" fill="rgb(221,136,13)" fg:x="798" fg:w="1"/><text x="10.4117%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="10.1872%" y="501" width="0.0127%" height="15" fill="rgb(249,199,10)" fg:x="800" fg:w="1"/><text x="10.4372%" y="511.50"></text></g><g><title>core::slice::sort::choose_pivot (4 samples, 0.05%)</title><rect x="10.1617%" y="565" width="0.0509%" height="15" fill="rgb(249,222,13)" fg:x="798" fg:w="4"/><text x="10.4117%" y="575.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (4 samples, 0.05%)</title><rect x="10.1617%" y="549" width="0.0509%" height="15" fill="rgb(244,185,38)" fg:x="798" fg:w="4"/><text x="10.4117%" y="559.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (4 samples, 0.05%)</title><rect x="10.1617%" y="533" width="0.0509%" height="15" fill="rgb(236,202,9)" fg:x="798" fg:w="4"/><text x="10.4117%" y="543.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (3 samples, 0.04%)</title><rect x="10.1745%" y="517" width="0.0382%" height="15" fill="rgb(250,229,37)" fg:x="799" fg:w="3"/><text x="10.4245%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="10.1999%" y="501" width="0.0127%" height="15" fill="rgb(206,174,23)" fg:x="801" fg:w="1"/><text x="10.4499%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="10.1999%" y="485" width="0.0127%" height="15" fill="rgb(211,33,43)" fg:x="801" fg:w="1"/><text x="10.4499%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="10.1999%" y="469" width="0.0127%" height="15" fill="rgb(245,58,50)" fg:x="801" fg:w="1"/><text x="10.4499%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="10.1999%" y="453" width="0.0127%" height="15" fill="rgb(244,68,36)" fg:x="801" fg:w="1"/><text x="10.4499%" y="463.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.01%)</title><rect x="10.2127%" y="565" width="0.0127%" height="15" fill="rgb(232,229,15)" fg:x="802" fg:w="1"/><text x="10.4627%" y="575.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.01%)</title><rect x="10.2127%" y="549" width="0.0127%" height="15" fill="rgb(254,30,23)" fg:x="802" fg:w="1"/><text x="10.4627%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="10.2127%" y="533" width="0.0127%" height="15" fill="rgb(235,160,14)" fg:x="802" fg:w="1"/><text x="10.4627%" y="543.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.01%)</title><rect x="10.2127%" y="517" width="0.0127%" height="15" fill="rgb(212,155,44)" fg:x="802" fg:w="1"/><text x="10.4627%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.01%)</title><rect x="10.2127%" y="501" width="0.0127%" height="15" fill="rgb(226,2,50)" fg:x="802" fg:w="1"/><text x="10.4627%" y="511.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::backward_unchecked (1 samples, 0.01%)</title><rect x="10.2127%" y="485" width="0.0127%" height="15" fill="rgb(234,177,6)" fg:x="802" fg:w="1"/><text x="10.4627%" y="495.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (5 samples, 0.06%)</title><rect x="10.2254%" y="565" width="0.0637%" height="15" fill="rgb(217,24,9)" fg:x="803" fg:w="5"/><text x="10.4754%" y="575.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.03%)</title><rect x="10.2636%" y="549" width="0.0255%" height="15" fill="rgb(220,13,46)" fg:x="806" fg:w="2"/><text x="10.5136%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.01%)</title><rect x="10.3018%" y="549" width="0.0127%" height="15" fill="rgb(239,221,27)" fg:x="809" fg:w="1"/><text x="10.5518%" y="559.50"></text></g><g><title>core::ptr::swap (1 samples, 0.01%)</title><rect x="10.3018%" y="533" width="0.0127%" height="15" fill="rgb(222,198,25)" fg:x="809" fg:w="1"/><text x="10.5518%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="10.3018%" y="517" width="0.0127%" height="15" fill="rgb(211,99,13)" fg:x="809" fg:w="1"/><text x="10.5518%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.01%)</title><rect x="10.3145%" y="549" width="0.0127%" height="15" fill="rgb(232,111,31)" fg:x="810" fg:w="1"/><text x="10.5645%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="10.3145%" y="533" width="0.0127%" height="15" fill="rgb(245,82,37)" fg:x="810" fg:w="1"/><text x="10.5645%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="10.3145%" y="517" width="0.0127%" height="15" fill="rgb(227,149,46)" fg:x="810" fg:w="1"/><text x="10.5645%" y="527.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="10.9003%" y="533" width="0.0127%" height="15" fill="rgb(218,36,50)" fg:x="856" fg:w="1"/><text x="11.1503%" y="543.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="10.9003%" y="517" width="0.0127%" height="15" fill="rgb(226,80,48)" fg:x="856" fg:w="1"/><text x="11.1503%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.04%)</title><rect x="10.9130%" y="533" width="0.0382%" height="15" fill="rgb(238,224,15)" fg:x="857" fg:w="3"/><text x="11.1630%" y="543.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (7 samples, 0.09%)</title><rect x="11.2186%" y="501" width="0.0891%" height="15" fill="rgb(241,136,10)" fg:x="881" fg:w="7"/><text x="11.4686%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (3 samples, 0.04%)</title><rect x="11.2696%" y="485" width="0.0382%" height="15" fill="rgb(208,32,45)" fg:x="885" fg:w="3"/><text x="11.5196%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.03%)</title><rect x="11.3078%" y="501" width="0.0255%" height="15" fill="rgb(207,135,9)" fg:x="888" fg:w="2"/><text x="11.5578%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (83 samples, 1.06%)</title><rect x="10.9512%" y="533" width="1.0569%" height="15" fill="rgb(206,86,44)" fg:x="860" fg:w="83"/><text x="11.2012%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (83 samples, 1.06%)</title><rect x="10.9512%" y="517" width="1.0569%" height="15" fill="rgb(245,177,15)" fg:x="860" fg:w="83"/><text x="11.2012%" y="527.50"></text></g><g><title>core::mem::replace (53 samples, 0.67%)</title><rect x="11.3332%" y="501" width="0.6749%" height="15" fill="rgb(206,64,50)" fg:x="890" fg:w="53"/><text x="11.5832%" y="511.50"></text></g><g><title>core::ptr::read (14 samples, 0.18%)</title><rect x="11.8299%" y="485" width="0.1783%" height="15" fill="rgb(234,36,40)" fg:x="929" fg:w="14"/><text x="12.0799%" y="495.50"></text></g><g><title>core::ops::function::FnMut::call_mut (17 samples, 0.22%)</title><rect x="12.0081%" y="533" width="0.2165%" height="15" fill="rgb(213,64,8)" fg:x="943" fg:w="17"/><text x="12.2581%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (2 samples, 0.03%)</title><rect x="12.1992%" y="517" width="0.0255%" height="15" fill="rgb(210,75,36)" fg:x="958" fg:w="2"/><text x="12.4492%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (27 samples, 0.34%)</title><rect x="12.2246%" y="533" width="0.3438%" height="15" fill="rgb(229,88,21)" fg:x="960" fg:w="27"/><text x="12.4746%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (27 samples, 0.34%)</title><rect x="12.2246%" y="517" width="0.3438%" height="15" fill="rgb(252,204,47)" fg:x="960" fg:w="27"/><text x="12.4746%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.03%)</title><rect x="12.5684%" y="533" width="0.0255%" height="15" fill="rgb(208,77,27)" fg:x="987" fg:w="2"/><text x="12.8184%" y="543.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (1 samples, 0.01%)</title><rect x="12.5812%" y="517" width="0.0127%" height="15" fill="rgb(221,76,26)" fg:x="988" fg:w="1"/><text x="12.8312%" y="527.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="12.5812%" y="501" width="0.0127%" height="15" fill="rgb(225,139,18)" fg:x="988" fg:w="1"/><text x="12.8312%" y="511.50"></text></g><g><title>core::slice::sort::partition (183 samples, 2.33%)</title><rect x="10.2891%" y="565" width="2.3303%" height="15" fill="rgb(230,137,11)" fg:x="808" fg:w="183"/><text x="10.5391%" y="575.50">c..</text></g><g><title>core::slice::sort::partition_in_blocks (180 samples, 2.29%)</title><rect x="10.3273%" y="549" width="2.2921%" height="15" fill="rgb(212,28,1)" fg:x="811" fg:w="180"/><text x="10.5773%" y="559.50">c..</text></g><g><title>core::ptr::swap (2 samples, 0.03%)</title><rect x="12.5939%" y="533" width="0.0255%" height="15" fill="rgb(248,164,17)" fg:x="989" fg:w="2"/><text x="12.8439%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.03%)</title><rect x="12.5939%" y="517" width="0.0255%" height="15" fill="rgb(222,171,42)" fg:x="989" fg:w="2"/><text x="12.8439%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.04%)</title><rect x="12.7595%" y="549" width="0.0382%" height="15" fill="rgb(243,84,45)" fg:x="1002" fg:w="3"/><text x="13.0095%" y="559.50"></text></g><g><title>core::ptr::swap (1 samples, 0.01%)</title><rect x="12.7977%" y="549" width="0.0127%" height="15" fill="rgb(252,49,23)" fg:x="1005" fg:w="1"/><text x="13.0477%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="12.7977%" y="533" width="0.0127%" height="15" fill="rgb(215,19,7)" fg:x="1005" fg:w="1"/><text x="13.0477%" y="543.50"></text></g><g><title>core::slice::sort::partition_equal (16 samples, 0.20%)</title><rect x="12.6194%" y="565" width="0.2037%" height="15" fill="rgb(238,81,41)" fg:x="991" fg:w="16"/><text x="12.8694%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="12.8104%" y="549" width="0.0127%" height="15" fill="rgb(210,199,37)" fg:x="1006" fg:w="1"/><text x="13.0604%" y="559.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="12.8104%" y="533" width="0.0127%" height="15" fill="rgb(244,192,49)" fg:x="1006" fg:w="1"/><text x="13.0604%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="12.8104%" y="517" width="0.0127%" height="15" fill="rgb(226,211,11)" fg:x="1006" fg:w="1"/><text x="13.0604%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="12.8104%" y="501" width="0.0127%" height="15" fill="rgb(236,162,54)" fg:x="1006" fg:w="1"/><text x="13.0604%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="12.8359%" y="501" width="0.0127%" height="15" fill="rgb(220,229,9)" fg:x="1008" fg:w="1"/><text x="13.0859%" y="511.50"></text></g><g><title>core::ptr::swap (1 samples, 0.01%)</title><rect x="12.8486%" y="501" width="0.0127%" height="15" fill="rgb(250,87,22)" fg:x="1009" fg:w="1"/><text x="13.0986%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="12.8613%" y="501" width="0.0127%" height="15" fill="rgb(239,43,17)" fg:x="1010" fg:w="1"/><text x="13.1113%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="12.8613%" y="485" width="0.0127%" height="15" fill="rgb(231,177,25)" fg:x="1010" fg:w="1"/><text x="13.1113%" y="495.50"></text></g><g><title>core::ptr::swap (1 samples, 0.01%)</title><rect x="12.8741%" y="485" width="0.0127%" height="15" fill="rgb(219,179,1)" fg:x="1011" fg:w="1"/><text x="13.1241%" y="495.50"></text></g><g><title>core::slice::sort::choose_pivot (6 samples, 0.08%)</title><rect x="12.8231%" y="549" width="0.0764%" height="15" fill="rgb(238,219,53)" fg:x="1007" fg:w="6"/><text x="13.0731%" y="559.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (6 samples, 0.08%)</title><rect x="12.8231%" y="533" width="0.0764%" height="15" fill="rgb(232,167,36)" fg:x="1007" fg:w="6"/><text x="13.0731%" y="543.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (6 samples, 0.08%)</title><rect x="12.8231%" y="517" width="0.0764%" height="15" fill="rgb(244,19,51)" fg:x="1007" fg:w="6"/><text x="13.0731%" y="527.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (2 samples, 0.03%)</title><rect x="12.8741%" y="501" width="0.0255%" height="15" fill="rgb(224,6,22)" fg:x="1011" fg:w="2"/><text x="13.1241%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="12.8868%" y="485" width="0.0127%" height="15" fill="rgb(224,145,5)" fg:x="1012" fg:w="1"/><text x="13.1368%" y="495.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.03%)</title><rect x="12.9505%" y="533" width="0.0255%" height="15" fill="rgb(234,130,49)" fg:x="1017" fg:w="2"/><text x="13.2005%" y="543.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (8 samples, 0.10%)</title><rect x="12.8995%" y="549" width="0.1019%" height="15" fill="rgb(254,6,2)" fg:x="1013" fg:w="8"/><text x="13.1495%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (2 samples, 0.03%)</title><rect x="12.9759%" y="533" width="0.0255%" height="15" fill="rgb(208,96,46)" fg:x="1019" fg:w="2"/><text x="13.2259%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="12.9887%" y="517" width="0.0127%" height="15" fill="rgb(239,3,39)" fg:x="1020" fg:w="1"/><text x="13.2387%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="12.9887%" y="501" width="0.0127%" height="15" fill="rgb(233,210,1)" fg:x="1020" fg:w="1"/><text x="13.2387%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="13.0269%" y="533" width="0.0127%" height="15" fill="rgb(244,137,37)" fg:x="1023" fg:w="1"/><text x="13.2769%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (1 samples, 0.01%)</title><rect x="13.0269%" y="517" width="0.0127%" height="15" fill="rgb(240,136,2)" fg:x="1023" fg:w="1"/><text x="13.2769%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.01%)</title><rect x="13.0396%" y="533" width="0.0127%" height="15" fill="rgb(239,18,37)" fg:x="1024" fg:w="1"/><text x="13.2896%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="13.2051%" y="517" width="0.0127%" height="15" fill="rgb(218,185,22)" fg:x="1037" fg:w="1"/><text x="13.4551%" y="527.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.01%)</title><rect x="13.2943%" y="485" width="0.0127%" height="15" fill="rgb(225,218,4)" fg:x="1044" fg:w="1"/><text x="13.5443%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (23 samples, 0.29%)</title><rect x="13.2179%" y="517" width="0.2929%" height="15" fill="rgb(230,182,32)" fg:x="1038" fg:w="23"/><text x="13.4679%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (23 samples, 0.29%)</title><rect x="13.2179%" y="501" width="0.2929%" height="15" fill="rgb(242,56,43)" fg:x="1038" fg:w="23"/><text x="13.4679%" y="511.50"></text></g><g><title>core::mem::replace (16 samples, 0.20%)</title><rect x="13.3070%" y="485" width="0.2037%" height="15" fill="rgb(233,99,24)" fg:x="1045" fg:w="16"/><text x="13.5570%" y="495.50"></text></g><g><title>core::ptr::read (5 samples, 0.06%)</title><rect x="13.4471%" y="469" width="0.0637%" height="15" fill="rgb(234,209,42)" fg:x="1056" fg:w="5"/><text x="13.6971%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (11 samples, 0.14%)</title><rect x="13.5108%" y="517" width="0.1401%" height="15" fill="rgb(227,7,12)" fg:x="1061" fg:w="11"/><text x="13.7608%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (2 samples, 0.03%)</title><rect x="13.6254%" y="501" width="0.0255%" height="15" fill="rgb(245,203,43)" fg:x="1070" fg:w="2"/><text x="13.8754%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.06%)</title><rect x="13.6508%" y="517" width="0.0637%" height="15" fill="rgb(238,205,33)" fg:x="1072" fg:w="5"/><text x="13.9008%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.06%)</title><rect x="13.6508%" y="501" width="0.0637%" height="15" fill="rgb(231,56,7)" fg:x="1072" fg:w="5"/><text x="13.9008%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.05%)</title><rect x="13.7145%" y="517" width="0.0509%" height="15" fill="rgb(244,186,29)" fg:x="1077" fg:w="4"/><text x="13.9645%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.03%)</title><rect x="13.7400%" y="501" width="0.0255%" height="15" fill="rgb(234,111,31)" fg:x="1079" fg:w="2"/><text x="13.9900%" y="511.50"></text></g><g><title>core::slice::sort::partition (61 samples, 0.78%)</title><rect x="13.0014%" y="549" width="0.7768%" height="15" fill="rgb(241,149,10)" fg:x="1021" fg:w="61"/><text x="13.2514%" y="559.50"></text></g><g><title>core::slice::sort::partition_in_blocks (57 samples, 0.73%)</title><rect x="13.0523%" y="533" width="0.7258%" height="15" fill="rgb(249,206,44)" fg:x="1025" fg:w="57"/><text x="13.3023%" y="543.50"></text></g><g><title>core::ptr::swap (1 samples, 0.01%)</title><rect x="13.7654%" y="517" width="0.0127%" height="15" fill="rgb(251,153,30)" fg:x="1081" fg:w="1"/><text x="14.0154%" y="527.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.01%)</title><rect x="13.7654%" y="501" width="0.0127%" height="15" fill="rgb(239,152,38)" fg:x="1081" fg:w="1"/><text x="14.0154%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.04%)</title><rect x="13.9182%" y="533" width="0.0382%" height="15" fill="rgb(249,139,47)" fg:x="1093" fg:w="3"/><text x="14.1682%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (1 samples, 0.01%)</title><rect x="13.9437%" y="517" width="0.0127%" height="15" fill="rgb(244,64,35)" fg:x="1095" fg:w="1"/><text x="14.1937%" y="527.50"></text></g><g><title>core::ptr::swap (1 samples, 0.01%)</title><rect x="13.9564%" y="533" width="0.0127%" height="15" fill="rgb(216,46,15)" fg:x="1096" fg:w="1"/><text x="14.2064%" y="543.50"></text></g><g><title>core::slice::sort::partition_equal (16 samples, 0.20%)</title><rect x="13.7782%" y="549" width="0.2037%" height="15" fill="rgb(250,74,19)" fg:x="1082" fg:w="16"/><text x="14.0282%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="13.9692%" y="533" width="0.0127%" height="15" fill="rgb(249,42,33)" fg:x="1097" fg:w="1"/><text x="14.2192%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="13.9692%" y="517" width="0.0127%" height="15" fill="rgb(242,149,17)" fg:x="1097" fg:w="1"/><text x="14.2192%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="13.9692%" y="501" width="0.0127%" height="15" fill="rgb(244,29,21)" fg:x="1097" fg:w="1"/><text x="14.2192%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="13.9692%" y="485" width="0.0127%" height="15" fill="rgb(220,130,37)" fg:x="1097" fg:w="1"/><text x="14.2192%" y="495.50"></text></g><g><title>core::slice::sort::break_patterns (1 samples, 0.01%)</title><rect x="13.9819%" y="533" width="0.0127%" height="15" fill="rgb(211,67,2)" fg:x="1098" fg:w="1"/><text x="14.2319%" y="543.50"></text></g><g><title>core::slice::sort::break_patterns::{{closure}} (1 samples, 0.01%)</title><rect x="13.9819%" y="517" width="0.0127%" height="15" fill="rgb(235,68,52)" fg:x="1098" fg:w="1"/><text x="14.2319%" y="527.50"></text></g><g><title>core::slice::sort::break_patterns::{{closure}} (1 samples, 0.01%)</title><rect x="13.9819%" y="501" width="0.0127%" height="15" fill="rgb(246,142,3)" fg:x="1098" fg:w="1"/><text x="14.2319%" y="511.50"></text></g><g><title>core::slice::sort::choose_pivot (3 samples, 0.04%)</title><rect x="13.9947%" y="533" width="0.0382%" height="15" fill="rgb(241,25,7)" fg:x="1099" fg:w="3"/><text x="14.2447%" y="543.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (3 samples, 0.04%)</title><rect x="13.9947%" y="517" width="0.0382%" height="15" fill="rgb(242,119,39)" fg:x="1099" fg:w="3"/><text x="14.2447%" y="527.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (3 samples, 0.04%)</title><rect x="13.9947%" y="501" width="0.0382%" height="15" fill="rgb(241,98,45)" fg:x="1099" fg:w="3"/><text x="14.2447%" y="511.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (3 samples, 0.04%)</title><rect x="13.9947%" y="485" width="0.0382%" height="15" fill="rgb(254,28,30)" fg:x="1099" fg:w="3"/><text x="14.2447%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (2 samples, 0.03%)</title><rect x="14.0074%" y="469" width="0.0255%" height="15" fill="rgb(241,142,54)" fg:x="1100" fg:w="2"/><text x="14.2574%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.03%)</title><rect x="14.0074%" y="453" width="0.0255%" height="15" fill="rgb(222,85,15)" fg:x="1100" fg:w="2"/><text x="14.2574%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.03%)</title><rect x="14.0074%" y="437" width="0.0255%" height="15" fill="rgb(210,85,47)" fg:x="1100" fg:w="2"/><text x="14.2574%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.03%)</title><rect x="14.0074%" y="421" width="0.0255%" height="15" fill="rgb(224,206,25)" fg:x="1100" fg:w="2"/><text x="14.2574%" y="431.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="14.0583%" y="517" width="0.0127%" height="15" fill="rgb(243,201,19)" fg:x="1104" fg:w="1"/><text x="14.3083%" y="527.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (6 samples, 0.08%)</title><rect x="14.0329%" y="533" width="0.0764%" height="15" fill="rgb(236,59,4)" fg:x="1102" fg:w="6"/><text x="14.2829%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (3 samples, 0.04%)</title><rect x="14.0711%" y="517" width="0.0382%" height="15" fill="rgb(254,179,45)" fg:x="1105" fg:w="3"/><text x="14.3211%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.04%)</title><rect x="14.0711%" y="501" width="0.0382%" height="15" fill="rgb(226,14,10)" fg:x="1105" fg:w="3"/><text x="14.3211%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="14.0965%" y="485" width="0.0127%" height="15" fill="rgb(244,27,41)" fg:x="1107" fg:w="1"/><text x="14.3465%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="14.0965%" y="469" width="0.0127%" height="15" fill="rgb(235,35,32)" fg:x="1107" fg:w="1"/><text x="14.3465%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.01%)</title><rect x="14.1475%" y="469" width="0.0127%" height="15" fill="rgb(218,68,31)" fg:x="1111" fg:w="1"/><text x="14.3975%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.06%)</title><rect x="14.1475%" y="501" width="0.0637%" height="15" fill="rgb(207,120,37)" fg:x="1111" fg:w="5"/><text x="14.3975%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.06%)</title><rect x="14.1475%" y="485" width="0.0637%" height="15" fill="rgb(227,98,0)" fg:x="1111" fg:w="5"/><text x="14.3975%" y="495.50"></text></g><g><title>core::mem::replace (4 samples, 0.05%)</title><rect x="14.1602%" y="469" width="0.0509%" height="15" fill="rgb(207,7,3)" fg:x="1112" fg:w="4"/><text x="14.4102%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="14.2111%" y="501" width="0.0127%" height="15" fill="rgb(206,98,19)" fg:x="1116" fg:w="1"/><text x="14.4611%" y="511.50"></text></g><g><title>core::slice::sort::partition (10 samples, 0.13%)</title><rect x="14.1093%" y="533" width="0.1273%" height="15" fill="rgb(217,5,26)" fg:x="1108" fg:w="10"/><text x="14.3593%" y="543.50"></text></g><g><title>core::slice::sort::partition_in_blocks (9 samples, 0.11%)</title><rect x="14.1220%" y="517" width="0.1146%" height="15" fill="rgb(235,190,38)" fg:x="1109" fg:w="9"/><text x="14.3720%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="14.2239%" y="501" width="0.0127%" height="15" fill="rgb(247,86,24)" fg:x="1117" fg:w="1"/><text x="14.4739%" y="511.50"></text></g><g><title>core::slice::sort::partition_equal (1 samples, 0.01%)</title><rect x="14.2366%" y="533" width="0.0127%" height="15" fill="rgb(205,101,16)" fg:x="1118" fg:w="1"/><text x="14.4866%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="14.2366%" y="517" width="0.0127%" height="15" fill="rgb(246,168,33)" fg:x="1118" fg:w="1"/><text x="14.4866%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable (803 samples, 10.23%)</title><rect x="4.0367%" y="645" width="10.2254%" height="15" fill="rgb(231,114,1)" fg:x="317" fg:w="803"/><text x="4.2867%" y="655.50">core::slice::&lt;i..</text></g><g><title>core::slice::sort::quicksort (803 samples, 10.23%)</title><rect x="4.0367%" y="629" width="10.2254%" height="15" fill="rgb(207,184,53)" fg:x="317" fg:w="803"/><text x="4.2867%" y="639.50">core::slice::so..</text></g><g><title>core::slice::sort::recurse (803 samples, 10.23%)</title><rect x="4.0367%" y="613" width="10.2254%" height="15" fill="rgb(224,95,51)" fg:x="317" fg:w="803"/><text x="4.2867%" y="623.50">core::slice::so..</text></g><g><title>core::slice::sort::recurse (566 samples, 7.21%)</title><rect x="7.0546%" y="597" width="7.2074%" height="15" fill="rgb(212,188,45)" fg:x="554" fg:w="566"/><text x="7.3046%" y="607.50">core::slic..</text></g><g><title>core::slice::sort::recurse (324 samples, 4.13%)</title><rect x="10.1363%" y="581" width="4.1258%" height="15" fill="rgb(223,154,38)" fg:x="796" fg:w="324"/><text x="10.3863%" y="591.50">core..</text></g><g><title>core::slice::sort::recurse (113 samples, 1.44%)</title><rect x="12.8231%" y="565" width="1.4389%" height="15" fill="rgb(251,22,52)" fg:x="1007" fg:w="113"/><text x="13.0731%" y="575.50"></text></g><g><title>core::slice::sort::recurse (22 samples, 0.28%)</title><rect x="13.9819%" y="549" width="0.2801%" height="15" fill="rgb(229,209,22)" fg:x="1098" fg:w="22"/><text x="14.2319%" y="559.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.01%)</title><rect x="14.2493%" y="533" width="0.0127%" height="15" fill="rgb(234,138,34)" fg:x="1119" fg:w="1"/><text x="14.4993%" y="543.50"></text></g><g><title>core::slice::sort::choose_pivot (1 samples, 0.01%)</title><rect x="14.2493%" y="517" width="0.0127%" height="15" fill="rgb(212,95,11)" fg:x="1119" fg:w="1"/><text x="14.4993%" y="527.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.01%)</title><rect x="14.2493%" y="501" width="0.0127%" height="15" fill="rgb(240,179,47)" fg:x="1119" fg:w="1"/><text x="14.4993%" y="511.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.01%)</title><rect x="14.2493%" y="485" width="0.0127%" height="15" fill="rgb(240,163,11)" fg:x="1119" fg:w="1"/><text x="14.4993%" y="495.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.01%)</title><rect x="14.2493%" y="469" width="0.0127%" height="15" fill="rgb(236,37,12)" fg:x="1119" fg:w="1"/><text x="14.4993%" y="479.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::and_modify (3 samples, 0.04%)</title><rect x="14.2621%" y="645" width="0.0382%" height="15" fill="rgb(232,164,16)" fg:x="1120" fg:w="3"/><text x="14.5121%" y="655.50"></text></g><g><title>std::collections::hash::map::OccupiedEntry&lt;K,V&gt;::get_mut (1 samples, 0.01%)</title><rect x="14.2875%" y="629" width="0.0127%" height="15" fill="rgb(244,205,15)" fg:x="1122" fg:w="1"/><text x="14.5375%" y="639.50"></text></g><g><title>hashbrown::rustc_entry::RustcOccupiedEntry&lt;K,V,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="14.2875%" y="613" width="0.0127%" height="15" fill="rgb(223,117,47)" fg:x="1122" fg:w="1"/><text x="14.5375%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_mut (1 samples, 0.01%)</title><rect x="14.2875%" y="597" width="0.0127%" height="15" fill="rgb(244,107,35)" fg:x="1122" fg:w="1"/><text x="14.5375%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="14.2875%" y="581" width="0.0127%" height="15" fill="rgb(205,140,8)" fg:x="1122" fg:w="1"/><text x="14.5375%" y="591.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (4 samples, 0.05%)</title><rect x="14.3003%" y="645" width="0.0509%" height="15" fill="rgb(228,84,46)" fg:x="1123" fg:w="4"/><text x="14.5503%" y="655.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (2 samples, 0.03%)</title><rect x="14.3257%" y="629" width="0.0255%" height="15" fill="rgb(254,188,9)" fg:x="1125" fg:w="2"/><text x="14.5757%" y="639.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.03%)</title><rect x="14.3257%" y="613" width="0.0255%" height="15" fill="rgb(206,112,54)" fg:x="1125" fg:w="2"/><text x="14.5757%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (2 samples, 0.03%)</title><rect x="14.3257%" y="597" width="0.0255%" height="15" fill="rgb(216,84,49)" fg:x="1125" fg:w="2"/><text x="14.5757%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (2 samples, 0.03%)</title><rect x="14.3257%" y="581" width="0.0255%" height="15" fill="rgb(214,194,35)" fg:x="1125" fg:w="2"/><text x="14.5757%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.03%)</title><rect x="14.3257%" y="565" width="0.0255%" height="15" fill="rgb(249,28,3)" fg:x="1125" fg:w="2"/><text x="14.5757%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="14.3385%" y="549" width="0.0127%" height="15" fill="rgb(222,56,52)" fg:x="1126" fg:w="1"/><text x="14.5885%" y="559.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.01%)</title><rect x="14.4021%" y="517" width="0.0127%" height="15" fill="rgb(245,217,50)" fg:x="1131" fg:w="1"/><text x="14.6521%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="14.4021%" y="501" width="0.0127%" height="15" fill="rgb(213,201,24)" fg:x="1131" fg:w="1"/><text x="14.6521%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="14.4021%" y="485" width="0.0127%" height="15" fill="rgb(248,116,28)" fg:x="1131" fg:w="1"/><text x="14.6521%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="14.4021%" y="469" width="0.0127%" height="15" fill="rgb(219,72,43)" fg:x="1131" fg:w="1"/><text x="14.6521%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="14.4021%" y="453" width="0.0127%" height="15" fill="rgb(209,138,14)" fg:x="1131" fg:w="1"/><text x="14.6521%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="14.4021%" y="437" width="0.0127%" height="15" fill="rgb(222,18,33)" fg:x="1131" fg:w="1"/><text x="14.6521%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="14.4021%" y="421" width="0.0127%" height="15" fill="rgb(213,199,7)" fg:x="1131" fg:w="1"/><text x="14.6521%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (3 samples, 0.04%)</title><rect x="14.3894%" y="613" width="0.0382%" height="15" fill="rgb(250,110,10)" fg:x="1130" fg:w="3"/><text x="14.6394%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="14.3894%" y="597" width="0.0382%" height="15" fill="rgb(248,123,6)" fg:x="1130" fg:w="3"/><text x="14.6394%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.03%)</title><rect x="14.4021%" y="581" width="0.0255%" height="15" fill="rgb(206,91,31)" fg:x="1131" fg:w="2"/><text x="14.6521%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (2 samples, 0.03%)</title><rect x="14.4021%" y="565" width="0.0255%" height="15" fill="rgb(211,154,13)" fg:x="1131" fg:w="2"/><text x="14.6521%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (2 samples, 0.03%)</title><rect x="14.4021%" y="549" width="0.0255%" height="15" fill="rgb(225,148,7)" fg:x="1131" fg:w="2"/><text x="14.6521%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (2 samples, 0.03%)</title><rect x="14.4021%" y="533" width="0.0255%" height="15" fill="rgb(220,160,43)" fg:x="1131" fg:w="2"/><text x="14.6521%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="14.4149%" y="517" width="0.0127%" height="15" fill="rgb(213,52,39)" fg:x="1132" fg:w="1"/><text x="14.6649%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="14.4149%" y="501" width="0.0127%" height="15" fill="rgb(243,137,7)" fg:x="1132" fg:w="1"/><text x="14.6649%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="14.4149%" y="485" width="0.0127%" height="15" fill="rgb(230,79,13)" fg:x="1132" fg:w="1"/><text x="14.6649%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.03%)</title><rect x="14.4276%" y="581" width="0.0255%" height="15" fill="rgb(247,105,23)" fg:x="1133" fg:w="2"/><text x="14.6776%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.03%)</title><rect x="14.4276%" y="565" width="0.0255%" height="15" fill="rgb(223,179,41)" fg:x="1133" fg:w="2"/><text x="14.6776%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.03%)</title><rect x="14.4276%" y="549" width="0.0255%" height="15" fill="rgb(218,9,34)" fg:x="1133" fg:w="2"/><text x="14.6776%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.03%)</title><rect x="14.4276%" y="533" width="0.0255%" height="15" fill="rgb(222,106,8)" fg:x="1133" fg:w="2"/><text x="14.6776%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.03%)</title><rect x="14.4531%" y="581" width="0.0255%" height="15" fill="rgb(211,220,0)" fg:x="1135" fg:w="2"/><text x="14.7031%" y="591.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="14.4531%" y="565" width="0.0255%" height="15" fill="rgb(229,52,16)" fg:x="1135" fg:w="2"/><text x="14.7031%" y="575.50"></text></g><g><title>hashbrown::map::make_insert_hash (5 samples, 0.06%)</title><rect x="14.4276%" y="613" width="0.0637%" height="15" fill="rgb(212,155,18)" fg:x="1133" fg:w="5"/><text x="14.6776%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.06%)</title><rect x="14.4276%" y="597" width="0.0637%" height="15" fill="rgb(242,21,14)" fg:x="1133" fg:w="5"/><text x="14.6776%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="14.4785%" y="581" width="0.0127%" height="15" fill="rgb(222,19,48)" fg:x="1137" fg:w="1"/><text x="14.7285%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash (1 samples, 0.01%)</title><rect x="14.4785%" y="565" width="0.0127%" height="15" fill="rgb(232,45,27)" fg:x="1137" fg:w="1"/><text x="14.7285%" y="575.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="14.4785%" y="549" width="0.0127%" height="15" fill="rgb(249,103,42)" fg:x="1137" fg:w="1"/><text x="14.7285%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="14.4785%" y="533" width="0.0127%" height="15" fill="rgb(246,81,33)" fg:x="1137" fg:w="1"/><text x="14.7285%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="14.4785%" y="517" width="0.0127%" height="15" fill="rgb(252,33,42)" fg:x="1137" fg:w="1"/><text x="14.7285%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="14.4785%" y="501" width="0.0127%" height="15" fill="rgb(209,212,41)" fg:x="1137" fg:w="1"/><text x="14.7285%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="14.4913%" y="581" width="0.0127%" height="15" fill="rgb(207,154,6)" fg:x="1138" fg:w="1"/><text x="14.7413%" y="591.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="14.4913%" y="565" width="0.0127%" height="15" fill="rgb(223,64,47)" fg:x="1138" fg:w="1"/><text x="14.7413%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (2 samples, 0.03%)</title><rect x="14.5167%" y="565" width="0.0255%" height="15" fill="rgb(211,161,38)" fg:x="1140" fg:w="2"/><text x="14.7667%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="14.5295%" y="549" width="0.0127%" height="15" fill="rgb(219,138,40)" fg:x="1141" fg:w="1"/><text x="14.7795%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="14.5295%" y="533" width="0.0127%" height="15" fill="rgb(241,228,46)" fg:x="1141" fg:w="1"/><text x="14.7795%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="14.5295%" y="517" width="0.0127%" height="15" fill="rgb(223,209,38)" fg:x="1141" fg:w="1"/><text x="14.7795%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.05%)</title><rect x="14.5040%" y="581" width="0.0509%" height="15" fill="rgb(236,164,45)" fg:x="1139" fg:w="4"/><text x="14.7540%" y="591.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (1 samples, 0.01%)</title><rect x="14.5422%" y="565" width="0.0127%" height="15" fill="rgb(231,15,5)" fg:x="1142" fg:w="1"/><text x="14.7922%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="14.5549%" y="581" width="0.0127%" height="15" fill="rgb(252,35,15)" fg:x="1143" fg:w="1"/><text x="14.8049%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.03%)</title><rect x="14.5804%" y="565" width="0.0255%" height="15" fill="rgb(248,181,18)" fg:x="1145" fg:w="2"/><text x="14.8304%" y="575.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (2 samples, 0.03%)</title><rect x="14.5804%" y="549" width="0.0255%" height="15" fill="rgb(233,39,42)" fg:x="1145" fg:w="2"/><text x="14.8304%" y="559.50"></text></g><g><title>wfc::wfc::baseline::BaseLine::prepare (1,149 samples, 14.63%)</title><rect x="0.0000%" y="693" width="14.6314%" height="15" fill="rgb(238,110,33)" fg:x="0" fg:w="1149"/><text x="0.2500%" y="703.50">wfc::wfc::baseline::Ba..</text></g><g><title>wfc::wfc::baseline::BaseLine::propagate (1,149 samples, 14.63%)</title><rect x="0.0000%" y="677" width="14.6314%" height="15" fill="rgb(233,195,10)" fg:x="0" fg:w="1149"/><text x="0.2500%" y="687.50">wfc::wfc::baseline::Ba..</text></g><g><title>wfc::wfc::baseline::BaseLine::legal_tiles (1,143 samples, 14.55%)</title><rect x="0.0764%" y="661" width="14.5549%" height="15" fill="rgb(254,105,3)" fg:x="6" fg:w="1143"/><text x="0.3264%" y="671.50">wfc::wfc::baseline::Ba..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (22 samples, 0.28%)</title><rect x="14.3512%" y="645" width="0.2801%" height="15" fill="rgb(221,225,9)" fg:x="1127" fg:w="22"/><text x="14.6012%" y="655.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (22 samples, 0.28%)</title><rect x="14.3512%" y="629" width="0.2801%" height="15" fill="rgb(224,227,45)" fg:x="1127" fg:w="22"/><text x="14.6012%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.14%)</title><rect x="14.4913%" y="613" width="0.1401%" height="15" fill="rgb(229,198,43)" fg:x="1138" fg:w="11"/><text x="14.7413%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (11 samples, 0.14%)</title><rect x="14.4913%" y="597" width="0.1401%" height="15" fill="rgb(206,209,35)" fg:x="1138" fg:w="11"/><text x="14.7413%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.06%)</title><rect x="14.5677%" y="581" width="0.0637%" height="15" fill="rgb(245,195,53)" fg:x="1144" fg:w="5"/><text x="14.8177%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.03%)</title><rect x="14.6059%" y="565" width="0.0255%" height="15" fill="rgb(240,92,26)" fg:x="1147" fg:w="2"/><text x="14.8559%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.03%)</title><rect x="14.6059%" y="549" width="0.0255%" height="15" fill="rgb(207,40,23)" fg:x="1147" fg:w="2"/><text x="14.8559%" y="559.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="14.6186%" y="533" width="0.0127%" height="15" fill="rgb(223,111,35)" fg:x="1148" fg:w="1"/><text x="14.8686%" y="543.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="14.6568%" y="613" width="0.0127%" height="15" fill="rgb(229,147,28)" fg:x="1151" fg:w="1"/><text x="14.9068%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="14.6823%" y="549" width="0.0509%" height="15" fill="rgb(211,29,28)" fg:x="1153" fg:w="4"/><text x="14.9323%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (4 samples, 0.05%)</title><rect x="14.6823%" y="533" width="0.0509%" height="15" fill="rgb(228,72,33)" fg:x="1153" fg:w="4"/><text x="14.9323%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.01%)</title><rect x="14.7205%" y="517" width="0.0127%" height="15" fill="rgb(205,214,31)" fg:x="1156" fg:w="1"/><text x="14.9705%" y="527.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.08%)</title><rect x="14.6696%" y="613" width="0.0764%" height="15" fill="rgb(224,111,15)" fg:x="1152" fg:w="6"/><text x="14.9196%" y="623.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.08%)</title><rect x="14.6696%" y="597" width="0.0764%" height="15" fill="rgb(253,21,26)" fg:x="1152" fg:w="6"/><text x="14.9196%" y="607.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.08%)</title><rect x="14.6696%" y="581" width="0.0764%" height="15" fill="rgb(245,139,43)" fg:x="1152" fg:w="6"/><text x="14.9196%" y="591.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.08%)</title><rect x="14.6696%" y="565" width="0.0764%" height="15" fill="rgb(252,170,7)" fg:x="1152" fg:w="6"/><text x="14.9196%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="14.7332%" y="549" width="0.0127%" height="15" fill="rgb(231,118,14)" fg:x="1157" fg:w="1"/><text x="14.9832%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="14.7969%" y="485" width="0.0382%" height="15" fill="rgb(238,83,0)" fg:x="1162" fg:w="3"/><text x="15.0469%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="14.7969%" y="469" width="0.0382%" height="15" fill="rgb(221,39,39)" fg:x="1162" fg:w="3"/><text x="15.0469%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="14.7969%" y="453" width="0.0382%" height="15" fill="rgb(222,119,46)" fg:x="1162" fg:w="3"/><text x="15.0469%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.03%)</title><rect x="14.8096%" y="437" width="0.0255%" height="15" fill="rgb(222,165,49)" fg:x="1163" fg:w="2"/><text x="15.0596%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="14.8351%" y="469" width="0.0127%" height="15" fill="rgb(219,113,52)" fg:x="1165" fg:w="1"/><text x="15.0851%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.08%)</title><rect x="14.7842%" y="517" width="0.0764%" height="15" fill="rgb(214,7,15)" fg:x="1161" fg:w="6"/><text x="15.0342%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.08%)</title><rect x="14.7842%" y="501" width="0.0764%" height="15" fill="rgb(235,32,4)" fg:x="1161" fg:w="6"/><text x="15.0342%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.03%)</title><rect x="14.8351%" y="485" width="0.0255%" height="15" fill="rgb(238,90,54)" fg:x="1165" fg:w="2"/><text x="15.0851%" y="495.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="14.8478%" y="469" width="0.0127%" height="15" fill="rgb(213,208,19)" fg:x="1166" fg:w="1"/><text x="15.0978%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="14.8478%" y="453" width="0.0127%" height="15" fill="rgb(233,156,4)" fg:x="1166" fg:w="1"/><text x="15.0978%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="14.8733%" y="469" width="0.0255%" height="15" fill="rgb(207,194,5)" fg:x="1168" fg:w="2"/><text x="15.1233%" y="479.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="14.8860%" y="453" width="0.0127%" height="15" fill="rgb(206,111,30)" fg:x="1169" fg:w="1"/><text x="15.1360%" y="463.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="14.9115%" y="453" width="0.0127%" height="15" fill="rgb(243,70,54)" fg:x="1171" fg:w="1"/><text x="15.1615%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.04%)</title><rect x="14.8988%" y="469" width="0.0382%" height="15" fill="rgb(242,28,8)" fg:x="1170" fg:w="3"/><text x="15.1488%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.01%)</title><rect x="14.9242%" y="453" width="0.0127%" height="15" fill="rgb(219,106,18)" fg:x="1172" fg:w="1"/><text x="15.1742%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (1 samples, 0.01%)</title><rect x="14.9242%" y="437" width="0.0127%" height="15" fill="rgb(244,222,10)" fg:x="1172" fg:w="1"/><text x="15.1742%" y="447.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.03%)</title><rect x="14.9370%" y="469" width="0.0255%" height="15" fill="rgb(236,179,52)" fg:x="1173" fg:w="2"/><text x="15.1870%" y="479.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.03%)</title><rect x="14.9370%" y="453" width="0.0255%" height="15" fill="rgb(213,23,39)" fg:x="1173" fg:w="2"/><text x="15.1870%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="14.9624%" y="469" width="0.0127%" height="15" fill="rgb(238,48,10)" fg:x="1175" fg:w="1"/><text x="15.2124%" y="479.50"></text></g><g><title>core::cmp::PartialEq::ne (26 samples, 0.33%)</title><rect x="14.6568%" y="677" width="0.3311%" height="15" fill="rgb(251,196,23)" fg:x="1151" fg:w="26"/><text x="14.9068%" y="687.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (26 samples, 0.33%)</title><rect x="14.6568%" y="661" width="0.3311%" height="15" fill="rgb(250,152,24)" fg:x="1151" fg:w="26"/><text x="14.9068%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (26 samples, 0.33%)</title><rect x="14.6568%" y="645" width="0.3311%" height="15" fill="rgb(209,150,17)" fg:x="1151" fg:w="26"/><text x="14.9068%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.33%)</title><rect x="14.6568%" y="629" width="0.3311%" height="15" fill="rgb(234,202,34)" fg:x="1151" fg:w="26"/><text x="14.9068%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (19 samples, 0.24%)</title><rect x="14.7460%" y="613" width="0.2419%" height="15" fill="rgb(253,148,53)" fg:x="1158" fg:w="19"/><text x="14.9960%" y="623.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (19 samples, 0.24%)</title><rect x="14.7460%" y="597" width="0.2419%" height="15" fill="rgb(218,129,16)" fg:x="1158" fg:w="19"/><text x="14.9960%" y="607.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (19 samples, 0.24%)</title><rect x="14.7460%" y="581" width="0.2419%" height="15" fill="rgb(216,85,19)" fg:x="1158" fg:w="19"/><text x="14.9960%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (19 samples, 0.24%)</title><rect x="14.7460%" y="565" width="0.2419%" height="15" fill="rgb(235,228,7)" fg:x="1158" fg:w="19"/><text x="14.9960%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (17 samples, 0.22%)</title><rect x="14.7714%" y="549" width="0.2165%" height="15" fill="rgb(245,175,0)" fg:x="1160" fg:w="17"/><text x="15.0214%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (17 samples, 0.22%)</title><rect x="14.7714%" y="533" width="0.2165%" height="15" fill="rgb(208,168,36)" fg:x="1160" fg:w="17"/><text x="15.0214%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.13%)</title><rect x="14.8606%" y="517" width="0.1273%" height="15" fill="rgb(246,171,24)" fg:x="1167" fg:w="10"/><text x="15.1106%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.13%)</title><rect x="14.8606%" y="501" width="0.1273%" height="15" fill="rgb(215,142,24)" fg:x="1167" fg:w="10"/><text x="15.1106%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.13%)</title><rect x="14.8606%" y="485" width="0.1273%" height="15" fill="rgb(250,187,7)" fg:x="1167" fg:w="10"/><text x="15.1106%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="14.9752%" y="469" width="0.0127%" height="15" fill="rgb(228,66,33)" fg:x="1176" fg:w="1"/><text x="15.2252%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="14.9752%" y="453" width="0.0127%" height="15" fill="rgb(234,215,21)" fg:x="1176" fg:w="1"/><text x="15.2252%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="14.9752%" y="437" width="0.0127%" height="15" fill="rgb(222,191,20)" fg:x="1176" fg:w="1"/><text x="15.2252%" y="447.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="14.9752%" y="421" width="0.0127%" height="15" fill="rgb(245,79,54)" fg:x="1176" fg:w="1"/><text x="15.2252%" y="431.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="15.2426%" y="565" width="0.0127%" height="15" fill="rgb(240,10,37)" fg:x="1197" fg:w="1"/><text x="15.4926%" y="575.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="15.2426%" y="549" width="0.0127%" height="15" fill="rgb(214,192,32)" fg:x="1197" fg:w="1"/><text x="15.4926%" y="559.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="15.2426%" y="533" width="0.0127%" height="15" fill="rgb(209,36,54)" fg:x="1197" fg:w="1"/><text x="15.4926%" y="543.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="15.2426%" y="517" width="0.0127%" height="15" fill="rgb(220,10,11)" fg:x="1197" fg:w="1"/><text x="15.4926%" y="527.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="15.2426%" y="501" width="0.0127%" height="15" fill="rgb(221,106,17)" fg:x="1197" fg:w="1"/><text x="15.4926%" y="511.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="15.2426%" y="485" width="0.0127%" height="15" fill="rgb(251,142,44)" fg:x="1197" fg:w="1"/><text x="15.4926%" y="495.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="15.2426%" y="469" width="0.0127%" height="15" fill="rgb(238,13,15)" fg:x="1197" fg:w="1"/><text x="15.4926%" y="479.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="15.2426%" y="453" width="0.0127%" height="15" fill="rgb(208,107,27)" fg:x="1197" fg:w="1"/><text x="15.4926%" y="463.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="15.2426%" y="437" width="0.0127%" height="15" fill="rgb(205,136,37)" fg:x="1197" fg:w="1"/><text x="15.4926%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.01%)</title><rect x="15.2553%" y="565" width="0.0127%" height="15" fill="rgb(250,205,27)" fg:x="1198" fg:w="1"/><text x="15.5053%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (11 samples, 0.14%)</title><rect x="15.1662%" y="581" width="0.1401%" height="15" fill="rgb(210,80,43)" fg:x="1191" fg:w="11"/><text x="15.4162%" y="591.50"></text></g><g><title>core::ptr::null (3 samples, 0.04%)</title><rect x="15.2681%" y="565" width="0.0382%" height="15" fill="rgb(247,160,36)" fg:x="1199" fg:w="3"/><text x="15.5181%" y="575.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="15.3572%" y="565" width="0.0127%" height="15" fill="rgb(234,13,49)" fg:x="1206" fg:w="1"/><text x="15.6072%" y="575.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="15.3572%" y="549" width="0.0127%" height="15" fill="rgb(234,122,0)" fg:x="1206" fg:w="1"/><text x="15.6072%" y="559.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="15.3572%" y="533" width="0.0127%" height="15" fill="rgb(207,146,38)" fg:x="1206" fg:w="1"/><text x="15.6072%" y="543.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="15.3572%" y="517" width="0.0127%" height="15" fill="rgb(207,177,25)" fg:x="1206" fg:w="1"/><text x="15.6072%" y="527.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="15.3572%" y="501" width="0.0127%" height="15" fill="rgb(211,178,42)" fg:x="1206" fg:w="1"/><text x="15.6072%" y="511.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="15.3572%" y="485" width="0.0127%" height="15" fill="rgb(230,69,54)" fg:x="1206" fg:w="1"/><text x="15.6072%" y="495.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="15.3572%" y="469" width="0.0127%" height="15" fill="rgb(214,135,41)" fg:x="1206" fg:w="1"/><text x="15.6072%" y="479.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="15.3572%" y="453" width="0.0127%" height="15" fill="rgb(237,67,25)" fg:x="1206" fg:w="1"/><text x="15.6072%" y="463.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="15.3572%" y="437" width="0.0127%" height="15" fill="rgb(222,189,50)" fg:x="1206" fg:w="1"/><text x="15.6072%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.06%)</title><rect x="15.3699%" y="565" width="0.0637%" height="15" fill="rgb(245,148,34)" fg:x="1207" fg:w="5"/><text x="15.6199%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.04%)</title><rect x="15.3954%" y="549" width="0.0382%" height="15" fill="rgb(222,29,6)" fg:x="1209" fg:w="3"/><text x="15.6454%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.38%)</title><rect x="15.0643%" y="661" width="0.3820%" height="15" fill="rgb(221,189,43)" fg:x="1183" fg:w="30"/><text x="15.3143%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.38%)</title><rect x="15.0643%" y="645" width="0.3820%" height="15" fill="rgb(207,36,27)" fg:x="1183" fg:w="30"/><text x="15.3143%" y="655.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (29 samples, 0.37%)</title><rect x="15.0770%" y="629" width="0.3693%" height="15" fill="rgb(217,90,24)" fg:x="1184" fg:w="29"/><text x="15.3270%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (29 samples, 0.37%)</title><rect x="15.0770%" y="613" width="0.3693%" height="15" fill="rgb(224,66,35)" fg:x="1184" fg:w="29"/><text x="15.3270%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.37%)</title><rect x="15.0770%" y="597" width="0.3693%" height="15" fill="rgb(221,13,50)" fg:x="1184" fg:w="29"/><text x="15.3270%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (11 samples, 0.14%)</title><rect x="15.3063%" y="581" width="0.1401%" height="15" fill="rgb(236,68,49)" fg:x="1202" fg:w="11"/><text x="15.5563%" y="591.50"></text></g><g><title>core::ptr::null_mut (1 samples, 0.01%)</title><rect x="15.4336%" y="565" width="0.0127%" height="15" fill="rgb(229,146,28)" fg:x="1212" fg:w="1"/><text x="15.6836%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="15.4973%" y="517" width="0.0637%" height="15" fill="rgb(225,31,38)" fg:x="1217" fg:w="5"/><text x="15.7473%" y="527.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="15.4973%" y="501" width="0.0637%" height="15" fill="rgb(250,208,3)" fg:x="1217" fg:w="5"/><text x="15.7473%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="15.4973%" y="485" width="0.0637%" height="15" fill="rgb(246,54,23)" fg:x="1217" fg:w="5"/><text x="15.7473%" y="495.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (3 samples, 0.04%)</title><rect x="15.5227%" y="469" width="0.0382%" height="15" fill="rgb(243,76,11)" fg:x="1219" fg:w="3"/><text x="15.7727%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.01%)</title><rect x="15.5482%" y="453" width="0.0127%" height="15" fill="rgb(245,21,50)" fg:x="1221" fg:w="1"/><text x="15.7982%" y="463.50"></text></g><g><title>hashbrown::map::make_insert_hash (5 samples, 0.06%)</title><rect x="15.5864%" y="421" width="0.0637%" height="15" fill="rgb(228,9,43)" fg:x="1224" fg:w="5"/><text x="15.8364%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.06%)</title><rect x="15.5864%" y="405" width="0.0637%" height="15" fill="rgb(208,100,47)" fg:x="1224" fg:w="5"/><text x="15.8364%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.06%)</title><rect x="15.5864%" y="389" width="0.0637%" height="15" fill="rgb(232,26,8)" fg:x="1224" fg:w="5"/><text x="15.8364%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.06%)</title><rect x="15.5864%" y="373" width="0.0637%" height="15" fill="rgb(216,166,38)" fg:x="1224" fg:w="5"/><text x="15.8364%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.06%)</title><rect x="15.5864%" y="357" width="0.0637%" height="15" fill="rgb(251,202,51)" fg:x="1224" fg:w="5"/><text x="15.8364%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.05%)</title><rect x="15.5991%" y="341" width="0.0509%" height="15" fill="rgb(254,216,34)" fg:x="1225" fg:w="4"/><text x="15.8491%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.03%)</title><rect x="15.6246%" y="325" width="0.0255%" height="15" fill="rgb(251,32,27)" fg:x="1227" fg:w="2"/><text x="15.8746%" y="335.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="15.6373%" y="309" width="0.0127%" height="15" fill="rgb(208,127,28)" fg:x="1228" fg:w="1"/><text x="15.8873%" y="319.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="15.6373%" y="293" width="0.0127%" height="15" fill="rgb(224,137,22)" fg:x="1228" fg:w="1"/><text x="15.8873%" y="303.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="15.6373%" y="277" width="0.0127%" height="15" fill="rgb(254,70,32)" fg:x="1228" fg:w="1"/><text x="15.8873%" y="287.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="15.6373%" y="261" width="0.0127%" height="15" fill="rgb(229,75,37)" fg:x="1228" fg:w="1"/><text x="15.8873%" y="271.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="15.6628%" y="373" width="0.0127%" height="15" fill="rgb(252,64,23)" fg:x="1230" fg:w="1"/><text x="15.9128%" y="383.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="15.6628%" y="357" width="0.0127%" height="15" fill="rgb(232,162,48)" fg:x="1230" fg:w="1"/><text x="15.9128%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.01%)</title><rect x="15.6628%" y="341" width="0.0127%" height="15" fill="rgb(246,160,12)" fg:x="1230" fg:w="1"/><text x="15.9128%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (2 samples, 0.03%)</title><rect x="15.6883%" y="357" width="0.0255%" height="15" fill="rgb(247,166,0)" fg:x="1232" fg:w="2"/><text x="15.9383%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.03%)</title><rect x="15.7137%" y="357" width="0.0255%" height="15" fill="rgb(249,219,21)" fg:x="1234" fg:w="2"/><text x="15.9637%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10 samples, 0.13%)</title><rect x="15.6501%" y="421" width="0.1273%" height="15" fill="rgb(205,209,3)" fg:x="1229" fg:w="10"/><text x="15.9001%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.13%)</title><rect x="15.6501%" y="405" width="0.1273%" height="15" fill="rgb(243,44,1)" fg:x="1229" fg:w="10"/><text x="15.9001%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.13%)</title><rect x="15.6501%" y="389" width="0.1273%" height="15" fill="rgb(206,159,16)" fg:x="1229" fg:w="10"/><text x="15.9001%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (8 samples, 0.10%)</title><rect x="15.6755%" y="373" width="0.1019%" height="15" fill="rgb(244,77,30)" fg:x="1231" fg:w="8"/><text x="15.9255%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.04%)</title><rect x="15.7392%" y="357" width="0.0382%" height="15" fill="rgb(218,69,12)" fg:x="1236" fg:w="3"/><text x="15.9892%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.03%)</title><rect x="15.7519%" y="341" width="0.0255%" height="15" fill="rgb(212,87,7)" fg:x="1237" fg:w="2"/><text x="16.0019%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="15.7901%" y="277" width="0.0382%" height="15" fill="rgb(245,114,25)" fg:x="1240" fg:w="3"/><text x="16.0401%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="15.7901%" y="261" width="0.0382%" height="15" fill="rgb(210,61,42)" fg:x="1240" fg:w="3"/><text x="16.0401%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="15.7901%" y="245" width="0.0382%" height="15" fill="rgb(211,52,33)" fg:x="1240" fg:w="3"/><text x="16.0401%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="15.8156%" y="229" width="0.0127%" height="15" fill="rgb(234,58,33)" fg:x="1242" fg:w="1"/><text x="16.0656%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.03%)</title><rect x="15.8283%" y="277" width="0.0255%" height="15" fill="rgb(220,115,36)" fg:x="1243" fg:w="2"/><text x="16.0783%" y="287.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.03%)</title><rect x="15.8283%" y="261" width="0.0255%" height="15" fill="rgb(243,153,54)" fg:x="1243" fg:w="2"/><text x="16.0783%" y="271.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.03%)</title><rect x="15.8283%" y="245" width="0.0255%" height="15" fill="rgb(251,47,18)" fg:x="1243" fg:w="2"/><text x="16.0783%" y="255.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="15.8411%" y="229" width="0.0127%" height="15" fill="rgb(242,102,42)" fg:x="1244" fg:w="1"/><text x="16.0911%" y="239.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (7 samples, 0.09%)</title><rect x="15.7774%" y="325" width="0.0891%" height="15" fill="rgb(234,31,38)" fg:x="1239" fg:w="7"/><text x="16.0274%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.09%)</title><rect x="15.7774%" y="309" width="0.0891%" height="15" fill="rgb(221,117,51)" fg:x="1239" fg:w="7"/><text x="16.0274%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.09%)</title><rect x="15.7774%" y="293" width="0.0891%" height="15" fill="rgb(212,20,18)" fg:x="1239" fg:w="7"/><text x="16.0274%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="15.8538%" y="277" width="0.0127%" height="15" fill="rgb(245,133,36)" fg:x="1245" fg:w="1"/><text x="16.1038%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash (1 samples, 0.01%)</title><rect x="15.8538%" y="261" width="0.0127%" height="15" fill="rgb(212,6,19)" fg:x="1245" fg:w="1"/><text x="16.1038%" y="271.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="15.8538%" y="245" width="0.0127%" height="15" fill="rgb(218,1,36)" fg:x="1245" fg:w="1"/><text x="16.1038%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="15.8538%" y="229" width="0.0127%" height="15" fill="rgb(246,84,54)" fg:x="1245" fg:w="1"/><text x="16.1038%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="15.8538%" y="213" width="0.0127%" height="15" fill="rgb(242,110,6)" fg:x="1245" fg:w="1"/><text x="16.1038%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="15.8538%" y="197" width="0.0127%" height="15" fill="rgb(214,47,5)" fg:x="1245" fg:w="1"/><text x="16.1038%" y="207.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="15.8538%" y="181" width="0.0127%" height="15" fill="rgb(218,159,25)" fg:x="1245" fg:w="1"/><text x="16.1038%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (9 samples, 0.11%)</title><rect x="15.7774%" y="341" width="0.1146%" height="15" fill="rgb(215,211,28)" fg:x="1239" fg:w="9"/><text x="16.0274%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (2 samples, 0.03%)</title><rect x="15.8665%" y="325" width="0.0255%" height="15" fill="rgb(238,59,32)" fg:x="1246" fg:w="2"/><text x="16.1165%" y="335.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.03%)</title><rect x="15.8665%" y="309" width="0.0255%" height="15" fill="rgb(226,82,3)" fg:x="1246" fg:w="2"/><text x="16.1165%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (5 samples, 0.06%)</title><rect x="15.8920%" y="341" width="0.0637%" height="15" fill="rgb(240,164,32)" fg:x="1248" fg:w="5"/><text x="16.1420%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (3 samples, 0.04%)</title><rect x="15.9175%" y="325" width="0.0382%" height="15" fill="rgb(232,46,7)" fg:x="1250" fg:w="3"/><text x="16.1675%" y="335.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.03%)</title><rect x="15.9302%" y="309" width="0.0255%" height="15" fill="rgb(229,129,53)" fg:x="1251" fg:w="2"/><text x="16.1802%" y="319.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (2 samples, 0.03%)</title><rect x="15.9302%" y="293" width="0.0255%" height="15" fill="rgb(234,188,29)" fg:x="1251" fg:w="2"/><text x="16.1802%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="15.9557%" y="325" width="0.0127%" height="15" fill="rgb(246,141,4)" fg:x="1253" fg:w="1"/><text x="16.2057%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (16 samples, 0.20%)</title><rect x="15.7774%" y="405" width="0.2037%" height="15" fill="rgb(229,23,39)" fg:x="1239" fg:w="16"/><text x="16.0274%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (16 samples, 0.20%)</title><rect x="15.7774%" y="389" width="0.2037%" height="15" fill="rgb(206,12,3)" fg:x="1239" fg:w="16"/><text x="16.0274%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (16 samples, 0.20%)</title><rect x="15.7774%" y="373" width="0.2037%" height="15" fill="rgb(252,226,20)" fg:x="1239" fg:w="16"/><text x="16.0274%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (16 samples, 0.20%)</title><rect x="15.7774%" y="357" width="0.2037%" height="15" fill="rgb(216,123,35)" fg:x="1239" fg:w="16"/><text x="16.0274%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.03%)</title><rect x="15.9557%" y="341" width="0.0255%" height="15" fill="rgb(212,68,40)" fg:x="1253" fg:w="2"/><text x="16.2057%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.01%)</title><rect x="15.9684%" y="325" width="0.0127%" height="15" fill="rgb(254,125,32)" fg:x="1254" fg:w="1"/><text x="16.2184%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="15.9684%" y="309" width="0.0127%" height="15" fill="rgb(253,97,22)" fg:x="1254" fg:w="1"/><text x="16.2184%" y="319.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="15.9684%" y="293" width="0.0127%" height="15" fill="rgb(241,101,14)" fg:x="1254" fg:w="1"/><text x="16.2184%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="15.9684%" y="277" width="0.0127%" height="15" fill="rgb(238,103,29)" fg:x="1254" fg:w="1"/><text x="16.2184%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="15.9684%" y="261" width="0.0127%" height="15" fill="rgb(233,195,47)" fg:x="1254" fg:w="1"/><text x="16.2184%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="15.9684%" y="245" width="0.0127%" height="15" fill="rgb(246,218,30)" fg:x="1254" fg:w="1"/><text x="16.2184%" y="255.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="15.9684%" y="229" width="0.0127%" height="15" fill="rgb(219,145,47)" fg:x="1254" fg:w="1"/><text x="16.2184%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.03%)</title><rect x="15.9812%" y="389" width="0.0255%" height="15" fill="rgb(243,12,26)" fg:x="1255" fg:w="2"/><text x="16.2312%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="15.9939%" y="373" width="0.0127%" height="15" fill="rgb(214,87,16)" fg:x="1256" fg:w="1"/><text x="16.2439%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="15.9939%" y="357" width="0.0127%" height="15" fill="rgb(208,99,42)" fg:x="1256" fg:w="1"/><text x="16.2439%" y="367.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (45 samples, 0.57%)</title><rect x="15.4463%" y="661" width="0.5730%" height="15" fill="rgb(253,99,2)" fg:x="1213" fg:w="45"/><text x="15.6963%" y="671.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (44 samples, 0.56%)</title><rect x="15.4591%" y="645" width="0.5603%" height="15" fill="rgb(220,168,23)" fg:x="1214" fg:w="44"/><text x="15.7091%" y="655.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (44 samples, 0.56%)</title><rect x="15.4591%" y="629" width="0.5603%" height="15" fill="rgb(242,38,24)" fg:x="1214" fg:w="44"/><text x="15.7091%" y="639.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (44 samples, 0.56%)</title><rect x="15.4591%" y="613" width="0.5603%" height="15" fill="rgb(225,182,9)" fg:x="1214" fg:w="44"/><text x="15.7091%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (44 samples, 0.56%)</title><rect x="15.4591%" y="597" width="0.5603%" height="15" fill="rgb(243,178,37)" fg:x="1214" fg:w="44"/><text x="15.7091%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (43 samples, 0.55%)</title><rect x="15.4718%" y="581" width="0.5476%" height="15" fill="rgb(232,139,19)" fg:x="1215" fg:w="43"/><text x="15.7218%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (43 samples, 0.55%)</title><rect x="15.4718%" y="565" width="0.5476%" height="15" fill="rgb(225,201,24)" fg:x="1215" fg:w="43"/><text x="15.7218%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (42 samples, 0.53%)</title><rect x="15.4845%" y="549" width="0.5348%" height="15" fill="rgb(221,47,46)" fg:x="1216" fg:w="42"/><text x="15.7345%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (42 samples, 0.53%)</title><rect x="15.4845%" y="533" width="0.5348%" height="15" fill="rgb(249,23,13)" fg:x="1216" fg:w="42"/><text x="15.7345%" y="543.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (36 samples, 0.46%)</title><rect x="15.5609%" y="517" width="0.4584%" height="15" fill="rgb(219,9,5)" fg:x="1222" fg:w="36"/><text x="15.8109%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (36 samples, 0.46%)</title><rect x="15.5609%" y="501" width="0.4584%" height="15" fill="rgb(254,171,16)" fg:x="1222" fg:w="36"/><text x="15.8109%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (36 samples, 0.46%)</title><rect x="15.5609%" y="485" width="0.4584%" height="15" fill="rgb(230,171,20)" fg:x="1222" fg:w="36"/><text x="15.8109%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (34 samples, 0.43%)</title><rect x="15.5864%" y="469" width="0.4330%" height="15" fill="rgb(210,71,41)" fg:x="1224" fg:w="34"/><text x="15.8364%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (34 samples, 0.43%)</title><rect x="15.5864%" y="453" width="0.4330%" height="15" fill="rgb(206,173,20)" fg:x="1224" fg:w="34"/><text x="15.8364%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (34 samples, 0.43%)</title><rect x="15.5864%" y="437" width="0.4330%" height="15" fill="rgb(233,88,34)" fg:x="1224" fg:w="34"/><text x="15.8364%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (19 samples, 0.24%)</title><rect x="15.7774%" y="421" width="0.2419%" height="15" fill="rgb(223,209,46)" fg:x="1239" fg:w="19"/><text x="16.0274%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (3 samples, 0.04%)</title><rect x="15.9812%" y="405" width="0.0382%" height="15" fill="rgb(250,43,18)" fg:x="1255" fg:w="3"/><text x="16.2312%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.01%)</title><rect x="16.0066%" y="389" width="0.0127%" height="15" fill="rgb(208,13,10)" fg:x="1257" fg:w="1"/><text x="16.2566%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup::{{closure}} (62 samples, 0.79%)</title><rect x="16.8343%" y="629" width="0.7895%" height="15" fill="rgb(212,200,36)" fg:x="1322" fg:w="62"/><text x="17.0843%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;mut B&gt; for &amp;mut A&gt;::eq (29 samples, 0.37%)</title><rect x="17.2546%" y="613" width="0.3693%" height="15" fill="rgb(225,90,30)" fg:x="1355" fg:w="29"/><text x="17.5046%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u8&gt;::eq (9 samples, 0.11%)</title><rect x="17.5092%" y="597" width="0.1146%" height="15" fill="rgb(236,182,39)" fg:x="1375" fg:w="9"/><text x="17.7592%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.01%)</title><rect x="17.6238%" y="629" width="0.0127%" height="15" fill="rgb(212,144,35)" fg:x="1384" fg:w="1"/><text x="17.8738%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (3 samples, 0.04%)</title><rect x="17.6366%" y="629" width="0.0382%" height="15" fill="rgb(228,63,44)" fg:x="1385" fg:w="3"/><text x="17.8866%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup (151 samples, 1.92%)</title><rect x="16.0194%" y="661" width="1.9228%" height="15" fill="rgb(228,109,6)" fg:x="1258" fg:w="151"/><text x="16.2694%" y="671.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup_by (151 samples, 1.92%)</title><rect x="16.0194%" y="645" width="1.9228%" height="15" fill="rgb(238,117,24)" fg:x="1258" fg:w="151"/><text x="16.2694%" y="655.50">a..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (21 samples, 0.27%)</title><rect x="17.6748%" y="629" width="0.2674%" height="15" fill="rgb(242,26,26)" fg:x="1388" fg:w="21"/><text x="17.9248%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (21 samples, 0.27%)</title><rect x="17.6748%" y="613" width="0.2674%" height="15" fill="rgb(221,92,48)" fg:x="1388" fg:w="21"/><text x="17.9248%" y="623.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="17.9167%" y="597" width="0.0255%" height="15" fill="rgb(209,209,32)" fg:x="1407" fg:w="2"/><text x="18.1667%" y="607.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="17.9167%" y="581" width="0.0255%" height="15" fill="rgb(221,70,22)" fg:x="1407" fg:w="2"/><text x="18.1667%" y="591.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.03%)</title><rect x="17.9167%" y="565" width="0.0255%" height="15" fill="rgb(248,145,5)" fg:x="1407" fg:w="2"/><text x="18.1667%" y="575.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="17.9167%" y="549" width="0.0255%" height="15" fill="rgb(226,116,26)" fg:x="1407" fg:w="2"/><text x="18.1667%" y="559.50"></text></g><g><title>run_timer_softirq (2 samples, 0.03%)</title><rect x="17.9167%" y="533" width="0.0255%" height="15" fill="rgb(244,5,17)" fg:x="1407" fg:w="2"/><text x="18.1667%" y="543.50"></text></g><g><title>__run_timers.part.0 (2 samples, 0.03%)</title><rect x="17.9167%" y="517" width="0.0255%" height="15" fill="rgb(252,159,33)" fg:x="1407" fg:w="2"/><text x="18.1667%" y="527.50"></text></g><g><title>call_timer_fn (2 samples, 0.03%)</title><rect x="17.9167%" y="501" width="0.0255%" height="15" fill="rgb(206,71,0)" fg:x="1407" fg:w="2"/><text x="18.1667%" y="511.50"></text></g><g><title>vbg_heartbeat_timer (2 samples, 0.03%)</title><rect x="17.9167%" y="485" width="0.0255%" height="15" fill="rgb(233,118,54)" fg:x="1407" fg:w="2"/><text x="18.1667%" y="495.50"></text></g><g><title>vbg_req_perform (2 samples, 0.03%)</title><rect x="17.9167%" y="469" width="0.0255%" height="15" fill="rgb(234,83,48)" fg:x="1407" fg:w="2"/><text x="18.1667%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.03%)</title><rect x="17.9422%" y="661" width="0.0255%" height="15" fill="rgb(228,3,54)" fg:x="1409" fg:w="2"/><text x="18.1922%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.03%)</title><rect x="17.9422%" y="645" width="0.0255%" height="15" fill="rgb(226,155,13)" fg:x="1409" fg:w="2"/><text x="18.1922%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.03%)</title><rect x="17.9422%" y="629" width="0.0255%" height="15" fill="rgb(241,28,37)" fg:x="1409" fg:w="2"/><text x="18.1922%" y="639.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="17.9549%" y="613" width="0.0127%" height="15" fill="rgb(233,93,10)" fg:x="1410" fg:w="1"/><text x="18.2049%" y="623.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="17.9549%" y="597" width="0.0127%" height="15" fill="rgb(225,113,19)" fg:x="1410" fg:w="1"/><text x="18.2049%" y="607.50"></text></g><g><title>core::alloc::layout::Layout::max_size_for_align (1 samples, 0.01%)</title><rect x="17.9549%" y="581" width="0.0127%" height="15" fill="rgb(241,2,18)" fg:x="1410" fg:w="1"/><text x="18.2049%" y="591.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="20.6673%" y="485" width="0.0127%" height="15" fill="rgb(228,207,21)" fg:x="1623" fg:w="1"/><text x="20.9173%" y="495.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="20.6800%" y="469" width="0.0255%" height="15" fill="rgb(213,211,35)" fg:x="1624" fg:w="2"/><text x="20.9300%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="20.7055%" y="453" width="0.0127%" height="15" fill="rgb(209,83,10)" fg:x="1626" fg:w="1"/><text x="20.9555%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.03%)</title><rect x="20.7564%" y="421" width="0.0255%" height="15" fill="rgb(209,164,1)" fg:x="1630" fg:w="2"/><text x="21.0064%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="20.7691%" y="405" width="0.0127%" height="15" fill="rgb(213,184,43)" fg:x="1631" fg:w="1"/><text x="21.0191%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="20.7691%" y="389" width="0.0127%" height="15" fill="rgb(231,61,34)" fg:x="1631" fg:w="1"/><text x="21.0191%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="20.8073%" y="405" width="0.0127%" height="15" fill="rgb(235,75,3)" fg:x="1634" fg:w="1"/><text x="21.0573%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="20.8073%" y="389" width="0.0127%" height="15" fill="rgb(220,106,47)" fg:x="1634" fg:w="1"/><text x="21.0573%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (10 samples, 0.13%)</title><rect x="20.8201%" y="405" width="0.1273%" height="15" fill="rgb(210,196,33)" fg:x="1635" fg:w="10"/><text x="21.0701%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (10 samples, 0.13%)</title><rect x="20.8201%" y="389" width="0.1273%" height="15" fill="rgb(229,154,42)" fg:x="1635" fg:w="10"/><text x="21.0701%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (1 samples, 0.01%)</title><rect x="20.9601%" y="389" width="0.0127%" height="15" fill="rgb(228,114,26)" fg:x="1646" fg:w="1"/><text x="21.2101%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (18 samples, 0.23%)</title><rect x="20.7819%" y="421" width="0.2292%" height="15" fill="rgb(208,144,1)" fg:x="1632" fg:w="18"/><text x="21.0319%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (5 samples, 0.06%)</title><rect x="20.9474%" y="405" width="0.0637%" height="15" fill="rgb(239,112,37)" fg:x="1645" fg:w="5"/><text x="21.1974%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (3 samples, 0.04%)</title><rect x="20.9729%" y="389" width="0.0382%" height="15" fill="rgb(210,96,50)" fg:x="1647" fg:w="3"/><text x="21.2229%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.03%)</title><rect x="20.9856%" y="373" width="0.0255%" height="15" fill="rgb(222,178,2)" fg:x="1648" fg:w="2"/><text x="21.2356%" y="383.50"></text></g><g><title>&lt;&amp;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (37 samples, 0.47%)</title><rect x="20.6673%" y="517" width="0.4712%" height="15" fill="rgb(226,74,18)" fg:x="1623" fg:w="37"/><text x="20.9173%" y="527.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (37 samples, 0.47%)</title><rect x="20.6673%" y="501" width="0.4712%" height="15" fill="rgb(225,67,54)" fg:x="1623" fg:w="37"/><text x="20.9173%" y="511.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (36 samples, 0.46%)</title><rect x="20.6800%" y="485" width="0.4584%" height="15" fill="rgb(251,92,32)" fg:x="1624" fg:w="36"/><text x="20.9300%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (34 samples, 0.43%)</title><rect x="20.7055%" y="469" width="0.4330%" height="15" fill="rgb(228,149,22)" fg:x="1626" fg:w="34"/><text x="20.9555%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (33 samples, 0.42%)</title><rect x="20.7182%" y="453" width="0.4202%" height="15" fill="rgb(243,54,13)" fg:x="1627" fg:w="33"/><text x="20.9682%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (33 samples, 0.42%)</title><rect x="20.7182%" y="437" width="0.4202%" height="15" fill="rgb(243,180,28)" fg:x="1627" fg:w="33"/><text x="20.9682%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (10 samples, 0.13%)</title><rect x="21.0111%" y="421" width="0.1273%" height="15" fill="rgb(208,167,24)" fg:x="1650" fg:w="10"/><text x="21.2611%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (5 samples, 0.06%)</title><rect x="21.2148%" y="373" width="0.0637%" height="15" fill="rgb(245,73,45)" fg:x="1666" fg:w="5"/><text x="21.4648%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (5 samples, 0.06%)</title><rect x="21.2148%" y="357" width="0.0637%" height="15" fill="rgb(237,203,48)" fg:x="1666" fg:w="5"/><text x="21.4648%" y="367.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="21.2785%" y="373" width="0.0127%" height="15" fill="rgb(211,197,16)" fg:x="1671" fg:w="1"/><text x="21.5285%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.11%)</title><rect x="21.1894%" y="405" width="0.1146%" height="15" fill="rgb(243,99,51)" fg:x="1664" fg:w="9"/><text x="21.4394%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (8 samples, 0.10%)</title><rect x="21.2021%" y="389" width="0.1019%" height="15" fill="rgb(215,123,29)" fg:x="1665" fg:w="8"/><text x="21.4521%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="21.2912%" y="373" width="0.0127%" height="15" fill="rgb(239,186,37)" fg:x="1672" fg:w="1"/><text x="21.5412%" y="383.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.14%)</title><rect x="21.1766%" y="421" width="0.1401%" height="15" fill="rgb(252,136,39)" fg:x="1663" fg:w="11"/><text x="21.4266%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="21.3040%" y="405" width="0.0127%" height="15" fill="rgb(223,213,32)" fg:x="1673" fg:w="1"/><text x="21.5540%" y="415.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.17%)</title><rect x="21.1639%" y="469" width="0.1655%" height="15" fill="rgb(233,115,5)" fg:x="1662" fg:w="13"/><text x="21.4139%" y="479.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.17%)</title><rect x="21.1639%" y="453" width="0.1655%" height="15" fill="rgb(207,226,44)" fg:x="1662" fg:w="13"/><text x="21.4139%" y="463.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.17%)</title><rect x="21.1639%" y="437" width="0.1655%" height="15" fill="rgb(208,126,0)" fg:x="1662" fg:w="13"/><text x="21.4139%" y="447.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="21.3167%" y="421" width="0.0127%" height="15" fill="rgb(244,66,21)" fg:x="1674" fg:w="1"/><text x="21.5667%" y="431.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="21.3167%" y="405" width="0.0127%" height="15" fill="rgb(222,97,12)" fg:x="1674" fg:w="1"/><text x="21.5667%" y="415.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="21.3167%" y="389" width="0.0127%" height="15" fill="rgb(219,213,19)" fg:x="1674" fg:w="1"/><text x="21.5667%" y="399.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="21.3167%" y="373" width="0.0127%" height="15" fill="rgb(252,169,30)" fg:x="1674" fg:w="1"/><text x="21.5667%" y="383.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="21.3167%" y="357" width="0.0127%" height="15" fill="rgb(206,32,51)" fg:x="1674" fg:w="1"/><text x="21.5667%" y="367.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="21.3167%" y="341" width="0.0127%" height="15" fill="rgb(250,172,42)" fg:x="1674" fg:w="1"/><text x="21.5667%" y="351.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="21.3167%" y="325" width="0.0127%" height="15" fill="rgb(209,34,43)" fg:x="1674" fg:w="1"/><text x="21.5667%" y="335.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="21.3167%" y="309" width="0.0127%" height="15" fill="rgb(223,11,35)" fg:x="1674" fg:w="1"/><text x="21.5667%" y="319.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="21.3167%" y="293" width="0.0127%" height="15" fill="rgb(251,219,26)" fg:x="1674" fg:w="1"/><text x="21.5667%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (7 samples, 0.09%)</title><rect x="21.3294%" y="389" width="0.0891%" height="15" fill="rgb(231,119,3)" fg:x="1675" fg:w="7"/><text x="21.5794%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (7 samples, 0.09%)</title><rect x="21.3294%" y="373" width="0.0891%" height="15" fill="rgb(216,97,11)" fg:x="1675" fg:w="7"/><text x="21.5794%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.06%)</title><rect x="21.3549%" y="357" width="0.0637%" height="15" fill="rgb(223,59,9)" fg:x="1677" fg:w="5"/><text x="21.6049%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (8 samples, 0.10%)</title><rect x="21.3294%" y="421" width="0.1019%" height="15" fill="rgb(233,93,31)" fg:x="1675" fg:w="8"/><text x="21.5794%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.10%)</title><rect x="21.3294%" y="405" width="0.1019%" height="15" fill="rgb(239,81,33)" fg:x="1675" fg:w="8"/><text x="21.5794%" y="415.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.01%)</title><rect x="21.4186%" y="389" width="0.0127%" height="15" fill="rgb(213,120,34)" fg:x="1682" fg:w="1"/><text x="21.6686%" y="399.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.01%)</title><rect x="21.4186%" y="373" width="0.0127%" height="15" fill="rgb(243,49,53)" fg:x="1682" fg:w="1"/><text x="21.6686%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.01%)</title><rect x="21.4186%" y="357" width="0.0127%" height="15" fill="rgb(247,216,33)" fg:x="1682" fg:w="1"/><text x="21.6686%" y="367.50"></text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::back (1 samples, 0.01%)</title><rect x="21.4313%" y="421" width="0.0127%" height="15" fill="rgb(226,26,14)" fg:x="1683" fg:w="1"/><text x="21.6813%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="21.4313%" y="405" width="0.0127%" height="15" fill="rgb(215,49,53)" fg:x="1683" fg:w="1"/><text x="21.6813%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="21.4313%" y="389" width="0.0127%" height="15" fill="rgb(245,162,40)" fg:x="1683" fg:w="1"/><text x="21.6813%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="21.4313%" y="373" width="0.0127%" height="15" fill="rgb(229,68,17)" fg:x="1683" fg:w="1"/><text x="21.6813%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.01%)</title><rect x="21.4313%" y="357" width="0.0127%" height="15" fill="rgb(213,182,10)" fg:x="1683" fg:w="1"/><text x="21.6813%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.03%)</title><rect x="21.4440%" y="357" width="0.0255%" height="15" fill="rgb(245,125,30)" fg:x="1684" fg:w="2"/><text x="21.6940%" y="367.50"></text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::down (3 samples, 0.04%)</title><rect x="21.4440%" y="421" width="0.0382%" height="15" fill="rgb(232,202,2)" fg:x="1684" fg:w="3"/><text x="21.6940%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.04%)</title><rect x="21.4440%" y="405" width="0.0382%" height="15" fill="rgb(237,140,51)" fg:x="1684" fg:w="3"/><text x="21.6940%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.04%)</title><rect x="21.4440%" y="389" width="0.0382%" height="15" fill="rgb(236,157,25)" fg:x="1684" fg:w="3"/><text x="21.6940%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (3 samples, 0.04%)</title><rect x="21.4440%" y="373" width="0.0382%" height="15" fill="rgb(219,209,0)" fg:x="1684" fg:w="3"/><text x="21.6940%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.01%)</title><rect x="21.4695%" y="357" width="0.0127%" height="15" fill="rgb(240,116,54)" fg:x="1686" fg:w="1"/><text x="21.7195%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.01%)</title><rect x="21.4695%" y="341" width="0.0127%" height="15" fill="rgb(216,10,36)" fg:x="1686" fg:w="1"/><text x="21.7195%" y="351.50"></text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::left (1 samples, 0.01%)</title><rect x="21.4822%" y="421" width="0.0127%" height="15" fill="rgb(222,72,44)" fg:x="1687" fg:w="1"/><text x="21.7322%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="21.4822%" y="405" width="0.0127%" height="15" fill="rgb(232,159,9)" fg:x="1687" fg:w="1"/><text x="21.7322%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="21.4822%" y="389" width="0.0127%" height="15" fill="rgb(210,39,32)" fg:x="1687" fg:w="1"/><text x="21.7322%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="21.4822%" y="373" width="0.0127%" height="15" fill="rgb(216,194,45)" fg:x="1687" fg:w="1"/><text x="21.7322%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.01%)</title><rect x="21.4822%" y="357" width="0.0127%" height="15" fill="rgb(218,18,35)" fg:x="1687" fg:w="1"/><text x="21.7322%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.01%)</title><rect x="21.4822%" y="341" width="0.0127%" height="15" fill="rgb(207,83,51)" fg:x="1687" fg:w="1"/><text x="21.7322%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.01%)</title><rect x="21.5077%" y="341" width="0.0127%" height="15" fill="rgb(225,63,43)" fg:x="1689" fg:w="1"/><text x="21.7577%" y="351.50"></text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::right (3 samples, 0.04%)</title><rect x="21.4950%" y="421" width="0.0382%" height="15" fill="rgb(207,57,36)" fg:x="1688" fg:w="3"/><text x="21.7450%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.04%)</title><rect x="21.4950%" y="405" width="0.0382%" height="15" fill="rgb(216,99,33)" fg:x="1688" fg:w="3"/><text x="21.7450%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.04%)</title><rect x="21.4950%" y="389" width="0.0382%" height="15" fill="rgb(225,42,16)" fg:x="1688" fg:w="3"/><text x="21.7450%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (3 samples, 0.04%)</title><rect x="21.4950%" y="373" width="0.0382%" height="15" fill="rgb(220,201,45)" fg:x="1688" fg:w="3"/><text x="21.7450%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.04%)</title><rect x="21.4950%" y="357" width="0.0382%" height="15" fill="rgb(225,33,4)" fg:x="1688" fg:w="3"/><text x="21.7450%" y="367.50"></text></g><g><title>core::ptr::null_mut (1 samples, 0.01%)</title><rect x="21.5204%" y="341" width="0.0127%" height="15" fill="rgb(224,33,50)" fg:x="1690" fg:w="1"/><text x="21.7704%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.01%)</title><rect x="21.5204%" y="325" width="0.0127%" height="15" fill="rgb(246,198,51)" fg:x="1690" fg:w="1"/><text x="21.7704%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.43%)</title><rect x="21.1384%" y="517" width="0.4330%" height="15" fill="rgb(205,22,4)" fg:x="1660" fg:w="34"/><text x="21.3884%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (34 samples, 0.43%)</title><rect x="21.1384%" y="501" width="0.4330%" height="15" fill="rgb(206,3,8)" fg:x="1660" fg:w="34"/><text x="21.3884%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.42%)</title><rect x="21.1512%" y="485" width="0.4202%" height="15" fill="rgb(251,23,15)" fg:x="1661" fg:w="33"/><text x="21.4012%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19 samples, 0.24%)</title><rect x="21.3294%" y="469" width="0.2419%" height="15" fill="rgb(252,88,28)" fg:x="1675" fg:w="19"/><text x="21.5794%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (19 samples, 0.24%)</title><rect x="21.3294%" y="453" width="0.2419%" height="15" fill="rgb(212,127,14)" fg:x="1675" fg:w="19"/><text x="21.5794%" y="463.50"></text></g><g><title>wfc::wfc::baseline::BaseLine::legal_tiles::{{closure}} (19 samples, 0.24%)</title><rect x="21.3294%" y="437" width="0.2419%" height="15" fill="rgb(247,145,37)" fg:x="1675" fg:w="19"/><text x="21.5794%" y="447.50"></text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::up (3 samples, 0.04%)</title><rect x="21.5332%" y="421" width="0.0382%" height="15" fill="rgb(209,117,53)" fg:x="1691" fg:w="3"/><text x="21.7832%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.03%)</title><rect x="21.5459%" y="405" width="0.0255%" height="15" fill="rgb(212,90,42)" fg:x="1692" fg:w="2"/><text x="21.7959%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="21.5586%" y="389" width="0.0127%" height="15" fill="rgb(218,164,37)" fg:x="1693" fg:w="1"/><text x="21.8086%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="21.5586%" y="373" width="0.0127%" height="15" fill="rgb(246,65,34)" fg:x="1693" fg:w="1"/><text x="21.8086%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.01%)</title><rect x="21.5586%" y="357" width="0.0127%" height="15" fill="rgb(231,100,33)" fg:x="1693" fg:w="1"/><text x="21.8086%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.01%)</title><rect x="21.5586%" y="341" width="0.0127%" height="15" fill="rgb(228,126,14)" fg:x="1693" fg:w="1"/><text x="21.8086%" y="351.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="21.5714%" y="517" width="0.0382%" height="15" fill="rgb(215,173,21)" fg:x="1694" fg:w="3"/><text x="21.8214%" y="527.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="21.6096%" y="517" width="0.0127%" height="15" fill="rgb(210,6,40)" fg:x="1697" fg:w="1"/><text x="21.8596%" y="527.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="21.6096%" y="501" width="0.0127%" height="15" fill="rgb(212,48,18)" fg:x="1697" fg:w="1"/><text x="21.8596%" y="511.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="21.6096%" y="485" width="0.0127%" height="15" fill="rgb(230,214,11)" fg:x="1697" fg:w="1"/><text x="21.8596%" y="495.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="21.6096%" y="469" width="0.0127%" height="15" fill="rgb(254,105,39)" fg:x="1697" fg:w="1"/><text x="21.8596%" y="479.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="21.6096%" y="453" width="0.0127%" height="15" fill="rgb(245,158,5)" fg:x="1697" fg:w="1"/><text x="21.8596%" y="463.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="21.6096%" y="437" width="0.0127%" height="15" fill="rgb(249,208,11)" fg:x="1697" fg:w="1"/><text x="21.8596%" y="447.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="21.6096%" y="421" width="0.0127%" height="15" fill="rgb(210,39,28)" fg:x="1697" fg:w="1"/><text x="21.8596%" y="431.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="21.6096%" y="405" width="0.0127%" height="15" fill="rgb(211,56,53)" fg:x="1697" fg:w="1"/><text x="21.8596%" y="415.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="21.6096%" y="389" width="0.0127%" height="15" fill="rgb(226,201,30)" fg:x="1697" fg:w="1"/><text x="21.8596%" y="399.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.17%)</title><rect x="22.0807%" y="501" width="0.1655%" height="15" fill="rgb(239,101,34)" fg:x="1734" fg:w="13"/><text x="22.3307%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="22.2463%" y="501" width="0.0127%" height="15" fill="rgb(226,209,5)" fg:x="1747" fg:w="1"/><text x="22.4963%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (18 samples, 0.23%)</title><rect x="24.7803%" y="405" width="0.2292%" height="15" fill="rgb(250,105,47)" fg:x="1946" fg:w="18"/><text x="25.0303%" y="415.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="26.7541%" y="389" width="0.0127%" height="15" fill="rgb(230,72,3)" fg:x="2101" fg:w="1"/><text x="27.0041%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="26.7541%" y="373" width="0.0127%" height="15" fill="rgb(232,218,39)" fg:x="2101" fg:w="1"/><text x="27.0041%" y="383.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="26.7541%" y="357" width="0.0127%" height="15" fill="rgb(248,166,6)" fg:x="2101" fg:w="1"/><text x="27.0041%" y="367.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="26.7541%" y="341" width="0.0127%" height="15" fill="rgb(247,89,20)" fg:x="2101" fg:w="1"/><text x="27.0041%" y="351.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="26.7541%" y="325" width="0.0127%" height="15" fill="rgb(248,130,54)" fg:x="2101" fg:w="1"/><text x="27.0041%" y="335.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="26.7541%" y="309" width="0.0127%" height="15" fill="rgb(234,196,4)" fg:x="2101" fg:w="1"/><text x="27.0041%" y="319.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="26.7541%" y="293" width="0.0127%" height="15" fill="rgb(250,143,31)" fg:x="2101" fg:w="1"/><text x="27.0041%" y="303.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="26.7541%" y="277" width="0.0127%" height="15" fill="rgb(211,110,34)" fg:x="2101" fg:w="1"/><text x="27.0041%" y="287.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="26.7541%" y="261" width="0.0127%" height="15" fill="rgb(215,124,48)" fg:x="2101" fg:w="1"/><text x="27.0041%" y="271.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="27.8492%" y="373" width="0.0255%" height="15" fill="rgb(216,46,13)" fg:x="2187" fg:w="2"/><text x="28.0992%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="27.8492%" y="357" width="0.0255%" height="15" fill="rgb(205,184,25)" fg:x="2187" fg:w="2"/><text x="28.0992%" y="367.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.03%)</title><rect x="27.8492%" y="341" width="0.0255%" height="15" fill="rgb(228,1,10)" fg:x="2187" fg:w="2"/><text x="28.0992%" y="351.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="27.8492%" y="325" width="0.0255%" height="15" fill="rgb(213,116,27)" fg:x="2187" fg:w="2"/><text x="28.0992%" y="335.50"></text></g><g><title>run_timer_softirq (2 samples, 0.03%)</title><rect x="27.8492%" y="309" width="0.0255%" height="15" fill="rgb(241,95,50)" fg:x="2187" fg:w="2"/><text x="28.0992%" y="319.50"></text></g><g><title>__run_timers.part.0 (2 samples, 0.03%)</title><rect x="27.8492%" y="293" width="0.0255%" height="15" fill="rgb(238,48,32)" fg:x="2187" fg:w="2"/><text x="28.0992%" y="303.50"></text></g><g><title>call_timer_fn (2 samples, 0.03%)</title><rect x="27.8492%" y="277" width="0.0255%" height="15" fill="rgb(235,113,49)" fg:x="2187" fg:w="2"/><text x="28.0992%" y="287.50"></text></g><g><title>vbg_heartbeat_timer (2 samples, 0.03%)</title><rect x="27.8492%" y="261" width="0.0255%" height="15" fill="rgb(205,127,43)" fg:x="2187" fg:w="2"/><text x="28.0992%" y="271.50"></text></g><g><title>vbg_req_perform (2 samples, 0.03%)</title><rect x="27.8492%" y="245" width="0.0255%" height="15" fill="rgb(250,162,2)" fg:x="2187" fg:w="2"/><text x="28.0992%" y="255.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (90 samples, 1.15%)</title><rect x="26.7668%" y="389" width="1.1461%" height="15" fill="rgb(220,13,41)" fg:x="2102" fg:w="90"/><text x="27.0168%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.04%)</title><rect x="27.8747%" y="373" width="0.0382%" height="15" fill="rgb(249,221,25)" fg:x="2189" fg:w="3"/><text x="28.1247%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.04%)</title><rect x="27.8747%" y="357" width="0.0382%" height="15" fill="rgb(215,208,19)" fg:x="2189" fg:w="3"/><text x="28.1247%" y="367.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (107 samples, 1.36%)</title><rect x="27.9129%" y="389" width="1.3625%" height="15" fill="rgb(236,175,2)" fg:x="2192" fg:w="107"/><text x="28.1629%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (94 samples, 1.20%)</title><rect x="28.0784%" y="373" width="1.1970%" height="15" fill="rgb(241,52,2)" fg:x="2205" fg:w="94"/><text x="28.3284%" y="383.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="29.2627%" y="357" width="0.0127%" height="15" fill="rgb(248,140,14)" fg:x="2298" fg:w="1"/><text x="29.5127%" y="367.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="29.2627%" y="341" width="0.0127%" height="15" fill="rgb(253,22,42)" fg:x="2298" fg:w="1"/><text x="29.5127%" y="351.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="29.2627%" y="325" width="0.0127%" height="15" fill="rgb(234,61,47)" fg:x="2298" fg:w="1"/><text x="29.5127%" y="335.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="29.2627%" y="309" width="0.0127%" height="15" fill="rgb(208,226,15)" fg:x="2298" fg:w="1"/><text x="29.5127%" y="319.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="29.2627%" y="293" width="0.0127%" height="15" fill="rgb(217,221,4)" fg:x="2298" fg:w="1"/><text x="29.5127%" y="303.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="29.2627%" y="277" width="0.0127%" height="15" fill="rgb(212,174,34)" fg:x="2298" fg:w="1"/><text x="29.5127%" y="287.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="29.2627%" y="261" width="0.0127%" height="15" fill="rgb(253,83,4)" fg:x="2298" fg:w="1"/><text x="29.5127%" y="271.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="29.2627%" y="245" width="0.0127%" height="15" fill="rgb(250,195,49)" fg:x="2298" fg:w="1"/><text x="29.5127%" y="255.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="29.2627%" y="229" width="0.0127%" height="15" fill="rgb(241,192,25)" fg:x="2298" fg:w="1"/><text x="29.5127%" y="239.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (9 samples, 0.11%)</title><rect x="29.2754%" y="389" width="0.1146%" height="15" fill="rgb(208,124,10)" fg:x="2299" fg:w="9"/><text x="29.5254%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (5 samples, 0.06%)</title><rect x="29.3900%" y="389" width="0.0637%" height="15" fill="rgb(222,33,0)" fg:x="2308" fg:w="5"/><text x="29.6400%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (427 samples, 5.44%)</title><rect x="24.3983%" y="421" width="5.4374%" height="15" fill="rgb(234,209,28)" fg:x="1916" fg:w="427"/><text x="24.6483%" y="431.50">&lt;hashbr..</text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (379 samples, 4.83%)</title><rect x="25.0096%" y="405" width="4.8262%" height="15" fill="rgb(224,11,23)" fg:x="1964" fg:w="379"/><text x="25.2596%" y="415.50">hashbr..</text></g><g><title>hashbrown::raw::sse2::Group::match_full (30 samples, 0.38%)</title><rect x="29.4537%" y="389" width="0.3820%" height="15" fill="rgb(232,99,1)" fg:x="2313" fg:w="30"/><text x="29.7037%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (26 samples, 0.33%)</title><rect x="29.5046%" y="373" width="0.3311%" height="15" fill="rgb(237,95,45)" fg:x="2317" fg:w="26"/><text x="29.7546%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (14 samples, 0.18%)</title><rect x="29.6575%" y="357" width="0.1783%" height="15" fill="rgb(208,109,11)" fg:x="2329" fg:w="14"/><text x="29.9075%" y="367.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (4 samples, 0.05%)</title><rect x="29.7848%" y="341" width="0.0509%" height="15" fill="rgb(216,190,48)" fg:x="2339" fg:w="4"/><text x="30.0348%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once (656 samples, 8.35%)</title><rect x="22.2590%" y="501" width="8.3535%" height="15" fill="rgb(251,171,36)" fg:x="1748" fg:w="656"/><text x="22.5090%" y="511.50">core::ops::f..</text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (619 samples, 7.88%)</title><rect x="22.7302%" y="485" width="7.8823%" height="15" fill="rgb(230,62,22)" fg:x="1785" fg:w="619"/><text x="22.9802%" y="495.50">&lt;std::colle..</text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (583 samples, 7.42%)</title><rect x="23.1886%" y="469" width="7.4239%" height="15" fill="rgb(225,114,35)" fg:x="1821" fg:w="583"/><text x="23.4386%" y="479.50">&lt;hashbrown..</text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (557 samples, 7.09%)</title><rect x="23.5197%" y="453" width="7.0928%" height="15" fill="rgb(215,118,42)" fg:x="1847" fg:w="557"/><text x="23.7697%" y="463.50">&lt;hashbrown..</text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (542 samples, 6.90%)</title><rect x="23.7107%" y="437" width="6.9018%" height="15" fill="rgb(243,119,21)" fg:x="1862" fg:w="542"/><text x="23.9607%" y="447.50">&lt;hashbrow..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (61 samples, 0.78%)</title><rect x="29.8357%" y="421" width="0.7768%" height="15" fill="rgb(252,177,53)" fg:x="2343" fg:w="61"/><text x="30.0857%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (36 samples, 0.46%)</title><rect x="30.1541%" y="405" width="0.4584%" height="15" fill="rgb(237,209,29)" fg:x="2368" fg:w="36"/><text x="30.4041%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (16 samples, 0.20%)</title><rect x="30.4088%" y="389" width="0.2037%" height="15" fill="rgb(212,65,23)" fg:x="2388" fg:w="16"/><text x="30.6588%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (12 samples, 0.15%)</title><rect x="30.4597%" y="373" width="0.1528%" height="15" fill="rgb(230,222,46)" fg:x="2392" fg:w="12"/><text x="30.7097%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (5 samples, 0.06%)</title><rect x="30.6125%" y="501" width="0.0637%" height="15" fill="rgb(215,135,32)" fg:x="2404" fg:w="5"/><text x="30.8625%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (828 samples, 10.54%)</title><rect x="20.2216%" y="533" width="10.5437%" height="15" fill="rgb(246,101,22)" fg:x="1588" fg:w="828"/><text x="20.4716%" y="543.50">&lt;core::iter::ad..</text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (718 samples, 9.14%)</title><rect x="21.6223%" y="517" width="9.1430%" height="15" fill="rgb(206,107,13)" fg:x="1698" fg:w="718"/><text x="21.8723%" y="527.50">core::iter::a..</text></g><g><title>core::option::Option&lt;T&gt;::is_none (7 samples, 0.09%)</title><rect x="30.6762%" y="501" width="0.0891%" height="15" fill="rgb(250,100,44)" fg:x="2409" fg:w="7"/><text x="30.9262%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (6 samples, 0.08%)</title><rect x="30.6889%" y="485" width="0.0764%" height="15" fill="rgb(231,147,38)" fg:x="2410" fg:w="6"/><text x="30.9389%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (876 samples, 11.15%)</title><rect x="19.6358%" y="549" width="11.1550%" height="15" fill="rgb(229,8,40)" fg:x="1542" fg:w="876"/><text x="19.8858%" y="559.50">&lt;core::iter::ada..</text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="30.7653%" y="533" width="0.0255%" height="15" fill="rgb(221,135,30)" fg:x="2416" fg:w="2"/><text x="31.0153%" y="543.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="30.7653%" y="517" width="0.0255%" height="15" fill="rgb(249,193,18)" fg:x="2416" fg:w="2"/><text x="31.0153%" y="527.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.03%)</title><rect x="30.7653%" y="501" width="0.0255%" height="15" fill="rgb(209,133,39)" fg:x="2416" fg:w="2"/><text x="31.0153%" y="511.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="30.7653%" y="485" width="0.0255%" height="15" fill="rgb(232,100,14)" fg:x="2416" fg:w="2"/><text x="31.0153%" y="495.50"></text></g><g><title>run_timer_softirq (2 samples, 0.03%)</title><rect x="30.7653%" y="469" width="0.0255%" height="15" fill="rgb(224,185,1)" fg:x="2416" fg:w="2"/><text x="31.0153%" y="479.50"></text></g><g><title>__run_timers.part.0 (2 samples, 0.03%)</title><rect x="30.7653%" y="453" width="0.0255%" height="15" fill="rgb(223,139,8)" fg:x="2416" fg:w="2"/><text x="31.0153%" y="463.50"></text></g><g><title>call_timer_fn (2 samples, 0.03%)</title><rect x="30.7653%" y="437" width="0.0255%" height="15" fill="rgb(232,213,38)" fg:x="2416" fg:w="2"/><text x="31.0153%" y="447.50"></text></g><g><title>vbg_heartbeat_timer (2 samples, 0.03%)</title><rect x="30.7653%" y="421" width="0.0255%" height="15" fill="rgb(207,94,22)" fg:x="2416" fg:w="2"/><text x="31.0153%" y="431.50"></text></g><g><title>vbg_req_perform (2 samples, 0.03%)</title><rect x="30.7653%" y="405" width="0.0255%" height="15" fill="rgb(219,183,54)" fg:x="2416" fg:w="2"/><text x="31.0153%" y="415.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="30.7908%" y="549" width="0.0127%" height="15" fill="rgb(216,185,54)" fg:x="2418" fg:w="1"/><text x="31.0408%" y="559.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="30.7908%" y="533" width="0.0127%" height="15" fill="rgb(254,217,39)" fg:x="2418" fg:w="1"/><text x="31.0408%" y="543.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="30.7908%" y="517" width="0.0127%" height="15" fill="rgb(240,178,23)" fg:x="2418" fg:w="1"/><text x="31.0408%" y="527.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="30.7908%" y="501" width="0.0127%" height="15" fill="rgb(218,11,47)" fg:x="2418" fg:w="1"/><text x="31.0408%" y="511.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.06%)</title><rect x="32.0387%" y="533" width="0.0637%" height="15" fill="rgb(218,51,51)" fg:x="2516" fg:w="5"/><text x="32.2887%" y="543.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.06%)</title><rect x="32.0387%" y="517" width="0.0637%" height="15" fill="rgb(238,126,27)" fg:x="2516" fg:w="5"/><text x="32.2887%" y="527.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.06%)</title><rect x="32.0387%" y="501" width="0.0637%" height="15" fill="rgb(249,202,22)" fg:x="2516" fg:w="5"/><text x="32.2887%" y="511.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.06%)</title><rect x="32.0387%" y="485" width="0.0637%" height="15" fill="rgb(254,195,49)" fg:x="2516" fg:w="5"/><text x="32.2887%" y="495.50"></text></g><g><title>run_timer_softirq (5 samples, 0.06%)</title><rect x="32.0387%" y="469" width="0.0637%" height="15" fill="rgb(208,123,14)" fg:x="2516" fg:w="5"/><text x="32.2887%" y="479.50"></text></g><g><title>__run_timers.part.0 (5 samples, 0.06%)</title><rect x="32.0387%" y="453" width="0.0637%" height="15" fill="rgb(224,200,8)" fg:x="2516" fg:w="5"/><text x="32.2887%" y="463.50"></text></g><g><title>call_timer_fn (5 samples, 0.06%)</title><rect x="32.0387%" y="437" width="0.0637%" height="15" fill="rgb(217,61,36)" fg:x="2516" fg:w="5"/><text x="32.2887%" y="447.50"></text></g><g><title>vbg_heartbeat_timer (5 samples, 0.06%)</title><rect x="32.0387%" y="421" width="0.0637%" height="15" fill="rgb(206,35,45)" fg:x="2516" fg:w="5"/><text x="32.2887%" y="431.50"></text></g><g><title>vbg_req_perform (5 samples, 0.06%)</title><rect x="32.0387%" y="405" width="0.0637%" height="15" fill="rgb(217,65,33)" fg:x="2516" fg:w="5"/><text x="32.2887%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,070 samples, 13.63%)</title><rect x="19.1519%" y="565" width="13.6254%" height="15" fill="rgb(222,158,48)" fg:x="1504" fg:w="1070"/><text x="19.4019%" y="575.50">&lt;core::iter::adapters..</text></g><g><title>core::option::Option&lt;T&gt;::map (155 samples, 1.97%)</title><rect x="30.8035%" y="549" width="1.9738%" height="15" fill="rgb(254,2,54)" fg:x="2419" fg:w="155"/><text x="31.0535%" y="559.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (53 samples, 0.67%)</title><rect x="32.1024%" y="533" width="0.6749%" height="15" fill="rgb(250,143,38)" fg:x="2521" fg:w="53"/><text x="32.3524%" y="543.50"></text></g><g><title>wfc::wfc::baseline::BaseLine::legal_tiles::{{closure}} (7 samples, 0.09%)</title><rect x="32.6881%" y="517" width="0.0891%" height="15" fill="rgb(248,25,0)" fg:x="2567" fg:w="7"/><text x="32.9381%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="32.7773%" y="565" width="0.0127%" height="15" fill="rgb(206,152,27)" fg:x="2574" fg:w="1"/><text x="33.0273%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="32.7773%" y="549" width="0.0127%" height="15" fill="rgb(240,77,30)" fg:x="2574" fg:w="1"/><text x="33.0273%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="32.7773%" y="533" width="0.0127%" height="15" fill="rgb(231,5,3)" fg:x="2574" fg:w="1"/><text x="33.0273%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (1 samples, 0.01%)</title><rect x="32.7773%" y="517" width="0.0127%" height="15" fill="rgb(207,226,32)" fg:x="2574" fg:w="1"/><text x="33.0273%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.01%)</title><rect x="32.7773%" y="501" width="0.0127%" height="15" fill="rgb(222,207,47)" fg:x="2574" fg:w="1"/><text x="33.0273%" y="511.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="32.7773%" y="485" width="0.0127%" height="15" fill="rgb(229,115,45)" fg:x="2574" fg:w="1"/><text x="33.0273%" y="495.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="32.7773%" y="469" width="0.0127%" height="15" fill="rgb(224,191,6)" fg:x="2574" fg:w="1"/><text x="33.0273%" y="479.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="32.7773%" y="453" width="0.0127%" height="15" fill="rgb(230,227,24)" fg:x="2574" fg:w="1"/><text x="33.0273%" y="463.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="32.7773%" y="437" width="0.0127%" height="15" fill="rgb(228,80,19)" fg:x="2574" fg:w="1"/><text x="33.0273%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="32.7773%" y="421" width="0.0127%" height="15" fill="rgb(247,229,0)" fg:x="2574" fg:w="1"/><text x="33.0273%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.05%)</title><rect x="32.8155%" y="549" width="0.0509%" height="15" fill="rgb(237,194,15)" fg:x="2577" fg:w="4"/><text x="33.0655%" y="559.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="32.8537%" y="533" width="0.0127%" height="15" fill="rgb(219,203,20)" fg:x="2580" fg:w="1"/><text x="33.1037%" y="543.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="32.8537%" y="517" width="0.0127%" height="15" fill="rgb(234,128,8)" fg:x="2580" fg:w="1"/><text x="33.1037%" y="527.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="35.4769%" y="533" width="0.0127%" height="15" fill="rgb(248,202,8)" fg:x="2786" fg:w="1"/><text x="35.7269%" y="543.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="35.4769%" y="517" width="0.0127%" height="15" fill="rgb(206,104,37)" fg:x="2786" fg:w="1"/><text x="35.7269%" y="527.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="35.4769%" y="501" width="0.0127%" height="15" fill="rgb(223,8,27)" fg:x="2786" fg:w="1"/><text x="35.7269%" y="511.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="35.4769%" y="485" width="0.0127%" height="15" fill="rgb(216,217,28)" fg:x="2786" fg:w="1"/><text x="35.7269%" y="495.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="35.4769%" y="469" width="0.0127%" height="15" fill="rgb(249,199,1)" fg:x="2786" fg:w="1"/><text x="35.7269%" y="479.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="35.4769%" y="453" width="0.0127%" height="15" fill="rgb(240,85,17)" fg:x="2786" fg:w="1"/><text x="35.7269%" y="463.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="35.4769%" y="437" width="0.0127%" height="15" fill="rgb(206,108,45)" fg:x="2786" fg:w="1"/><text x="35.7269%" y="447.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="35.4769%" y="421" width="0.0127%" height="15" fill="rgb(245,210,41)" fg:x="2786" fg:w="1"/><text x="35.7269%" y="431.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="35.4769%" y="405" width="0.0127%" height="15" fill="rgb(206,13,37)" fg:x="2786" fg:w="1"/><text x="35.7269%" y="415.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="37.0432%" y="517" width="0.0127%" height="15" fill="rgb(250,61,18)" fg:x="2909" fg:w="1"/><text x="37.2932%" y="527.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="37.0432%" y="501" width="0.0127%" height="15" fill="rgb(235,172,48)" fg:x="2909" fg:w="1"/><text x="37.2932%" y="511.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="37.0432%" y="485" width="0.0127%" height="15" fill="rgb(249,201,17)" fg:x="2909" fg:w="1"/><text x="37.2932%" y="495.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="37.0432%" y="469" width="0.0127%" height="15" fill="rgb(219,208,6)" fg:x="2909" fg:w="1"/><text x="37.2932%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (230 samples, 2.93%)</title><rect x="35.4896%" y="533" width="2.9288%" height="15" fill="rgb(248,31,23)" fg:x="2787" fg:w="230"/><text x="35.7396%" y="543.50">co..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (107 samples, 1.36%)</title><rect x="37.0559%" y="517" width="1.3625%" height="15" fill="rgb(245,15,42)" fg:x="2910" fg:w="107"/><text x="37.3059%" y="527.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="38.3930%" y="501" width="0.0255%" height="15" fill="rgb(222,217,39)" fg:x="3015" fg:w="2"/><text x="38.6430%" y="511.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="38.3930%" y="485" width="0.0255%" height="15" fill="rgb(210,219,27)" fg:x="3015" fg:w="2"/><text x="38.6430%" y="495.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.03%)</title><rect x="38.3930%" y="469" width="0.0255%" height="15" fill="rgb(252,166,36)" fg:x="3015" fg:w="2"/><text x="38.6430%" y="479.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="38.3930%" y="453" width="0.0255%" height="15" fill="rgb(245,132,34)" fg:x="3015" fg:w="2"/><text x="38.6430%" y="463.50"></text></g><g><title>run_timer_softirq (2 samples, 0.03%)</title><rect x="38.3930%" y="437" width="0.0255%" height="15" fill="rgb(236,54,3)" fg:x="3015" fg:w="2"/><text x="38.6430%" y="447.50"></text></g><g><title>__run_timers.part.0 (2 samples, 0.03%)</title><rect x="38.3930%" y="421" width="0.0255%" height="15" fill="rgb(241,173,43)" fg:x="3015" fg:w="2"/><text x="38.6430%" y="431.50"></text></g><g><title>call_timer_fn (2 samples, 0.03%)</title><rect x="38.3930%" y="405" width="0.0255%" height="15" fill="rgb(215,190,9)" fg:x="3015" fg:w="2"/><text x="38.6430%" y="415.50"></text></g><g><title>vbg_heartbeat_timer (2 samples, 0.03%)</title><rect x="38.3930%" y="389" width="0.0255%" height="15" fill="rgb(242,101,16)" fg:x="3015" fg:w="2"/><text x="38.6430%" y="399.50"></text></g><g><title>vbg_req_perform (2 samples, 0.03%)</title><rect x="38.3930%" y="373" width="0.0255%" height="15" fill="rgb(223,190,21)" fg:x="3015" fg:w="2"/><text x="38.6430%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (474 samples, 6.04%)</title><rect x="32.7900%" y="565" width="6.0359%" height="15" fill="rgb(215,228,25)" fg:x="2575" fg:w="474"/><text x="33.0400%" y="575.50">alloc::v..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (468 samples, 5.96%)</title><rect x="32.8664%" y="549" width="5.9595%" height="15" fill="rgb(225,36,22)" fg:x="2581" fg:w="468"/><text x="33.1164%" y="559.50">core::pt..</text></g><g><title>core::ptr::null_mut (32 samples, 0.41%)</title><rect x="38.4184%" y="533" width="0.4075%" height="15" fill="rgb(251,106,46)" fg:x="3017" fg:w="32"/><text x="38.6684%" y="543.50"></text></g><g><title>core::ptr::invalid_mut (24 samples, 0.31%)</title><rect x="38.5203%" y="517" width="0.3056%" height="15" fill="rgb(208,90,1)" fg:x="3025" fg:w="24"/><text x="38.7703%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (3 samples, 0.04%)</title><rect x="38.8259%" y="565" width="0.0382%" height="15" fill="rgb(243,10,4)" fg:x="3049" fg:w="3"/><text x="39.0759%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (3 samples, 0.04%)</title><rect x="38.8259%" y="549" width="0.0382%" height="15" fill="rgb(212,137,27)" fg:x="3049" fg:w="3"/><text x="39.0759%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="38.8769%" y="501" width="0.0127%" height="15" fill="rgb(231,220,49)" fg:x="3053" fg:w="1"/><text x="39.1269%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="38.8896%" y="501" width="0.0127%" height="15" fill="rgb(237,96,20)" fg:x="3054" fg:w="1"/><text x="39.1396%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="38.8896%" y="485" width="0.0127%" height="15" fill="rgb(239,229,30)" fg:x="3054" fg:w="1"/><text x="39.1396%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="38.8896%" y="469" width="0.0127%" height="15" fill="rgb(219,65,33)" fg:x="3054" fg:w="1"/><text x="39.1396%" y="479.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="38.9023%" y="437" width="0.0127%" height="15" fill="rgb(243,134,7)" fg:x="3055" fg:w="1"/><text x="39.1523%" y="447.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.03%)</title><rect x="38.9023%" y="453" width="0.0255%" height="15" fill="rgb(216,177,54)" fg:x="3055" fg:w="2"/><text x="39.1523%" y="463.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="38.9151%" y="437" width="0.0127%" height="15" fill="rgb(211,160,20)" fg:x="3056" fg:w="1"/><text x="39.1651%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="38.9151%" y="421" width="0.0127%" height="15" fill="rgb(239,85,39)" fg:x="3056" fg:w="1"/><text x="39.1651%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="38.9151%" y="405" width="0.0127%" height="15" fill="rgb(232,125,22)" fg:x="3056" fg:w="1"/><text x="39.1651%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.04%)</title><rect x="38.9023%" y="485" width="0.0382%" height="15" fill="rgb(244,57,34)" fg:x="3055" fg:w="3"/><text x="39.1523%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.04%)</title><rect x="38.9023%" y="469" width="0.0382%" height="15" fill="rgb(214,203,32)" fg:x="3055" fg:w="3"/><text x="39.1523%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="38.9278%" y="453" width="0.0127%" height="15" fill="rgb(207,58,43)" fg:x="3057" fg:w="1"/><text x="39.1778%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.01%)</title><rect x="38.9278%" y="437" width="0.0127%" height="15" fill="rgb(215,193,15)" fg:x="3057" fg:w="1"/><text x="39.1778%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.05%)</title><rect x="38.9023%" y="501" width="0.0509%" height="15" fill="rgb(232,15,44)" fg:x="3055" fg:w="4"/><text x="39.1523%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::align (1 samples, 0.01%)</title><rect x="38.9405%" y="485" width="0.0127%" height="15" fill="rgb(212,3,48)" fg:x="3058" fg:w="1"/><text x="39.1905%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.10%)</title><rect x="38.8641%" y="565" width="0.1019%" height="15" fill="rgb(218,128,7)" fg:x="3052" fg:w="8"/><text x="39.1141%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.10%)</title><rect x="38.8641%" y="549" width="0.1019%" height="15" fill="rgb(226,216,39)" fg:x="3052" fg:w="8"/><text x="39.1141%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.09%)</title><rect x="38.8769%" y="533" width="0.0891%" height="15" fill="rgb(243,47,51)" fg:x="3053" fg:w="7"/><text x="39.1269%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.09%)</title><rect x="38.8769%" y="517" width="0.0891%" height="15" fill="rgb(241,183,40)" fg:x="3053" fg:w="7"/><text x="39.1269%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="38.9533%" y="501" width="0.0127%" height="15" fill="rgb(231,217,32)" fg:x="3059" fg:w="1"/><text x="39.2033%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="38.9533%" y="485" width="0.0127%" height="15" fill="rgb(229,61,38)" fg:x="3059" fg:w="1"/><text x="39.2033%" y="495.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="38.9660%" y="565" width="0.0255%" height="15" fill="rgb(225,210,5)" fg:x="3060" fg:w="2"/><text x="39.2160%" y="575.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="38.9660%" y="549" width="0.0255%" height="15" fill="rgb(231,79,45)" fg:x="3060" fg:w="2"/><text x="39.2160%" y="559.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.03%)</title><rect x="38.9660%" y="533" width="0.0255%" height="15" fill="rgb(224,100,7)" fg:x="3060" fg:w="2"/><text x="39.2160%" y="543.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="38.9660%" y="517" width="0.0255%" height="15" fill="rgb(241,198,18)" fg:x="3060" fg:w="2"/><text x="39.2160%" y="527.50"></text></g><g><title>run_timer_softirq (2 samples, 0.03%)</title><rect x="38.9660%" y="501" width="0.0255%" height="15" fill="rgb(252,97,53)" fg:x="3060" fg:w="2"/><text x="39.2160%" y="511.50"></text></g><g><title>__run_timers.part.0 (2 samples, 0.03%)</title><rect x="38.9660%" y="485" width="0.0255%" height="15" fill="rgb(220,88,7)" fg:x="3060" fg:w="2"/><text x="39.2160%" y="495.50"></text></g><g><title>call_timer_fn (2 samples, 0.03%)</title><rect x="38.9660%" y="469" width="0.0255%" height="15" fill="rgb(213,176,14)" fg:x="3060" fg:w="2"/><text x="39.2160%" y="479.50"></text></g><g><title>vbg_heartbeat_timer (2 samples, 0.03%)</title><rect x="38.9660%" y="453" width="0.0255%" height="15" fill="rgb(246,73,7)" fg:x="3060" fg:w="2"/><text x="39.2160%" y="463.50"></text></g><g><title>vbg_req_perform (2 samples, 0.03%)</title><rect x="38.9660%" y="437" width="0.0255%" height="15" fill="rgb(245,64,36)" fg:x="3060" fg:w="2"/><text x="39.2160%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,656 samples, 21.09%)</title><rect x="17.9677%" y="597" width="21.0875%" height="15" fill="rgb(245,80,10)" fg:x="1411" fg:w="1656"/><text x="18.2177%" y="607.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::v..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,656 samples, 21.09%)</title><rect x="17.9677%" y="581" width="21.0875%" height="15" fill="rgb(232,107,50)" fg:x="1411" fg:w="1656"/><text x="18.2177%" y="591.50">alloc::vec::Vec&lt;T,A&gt;::extend_desu..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.06%)</title><rect x="38.9915%" y="565" width="0.0637%" height="15" fill="rgb(253,3,0)" fg:x="3062" fg:w="5"/><text x="39.2415%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.03%)</title><rect x="39.0297%" y="549" width="0.0255%" height="15" fill="rgb(212,99,53)" fg:x="3065" fg:w="2"/><text x="39.2797%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="39.0551%" y="437" width="0.0127%" height="15" fill="rgb(249,111,54)" fg:x="3067" fg:w="1"/><text x="39.3051%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="39.0551%" y="421" width="0.0127%" height="15" fill="rgb(249,55,30)" fg:x="3067" fg:w="1"/><text x="39.3051%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,658 samples, 21.11%)</title><rect x="17.9677%" y="661" width="21.1130%" height="15" fill="rgb(237,47,42)" fg:x="1411" fg:w="1658"/><text x="18.2177%" y="671.50">core::iter::traits::iterator::Ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,658 samples, 21.11%)</title><rect x="17.9677%" y="645" width="21.1130%" height="15" fill="rgb(211,20,18)" fg:x="1411" fg:w="1658"/><text x="18.2177%" y="655.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,658 samples, 21.11%)</title><rect x="17.9677%" y="629" width="21.1130%" height="15" fill="rgb(231,203,46)" fg:x="1411" fg:w="1658"/><text x="18.2177%" y="639.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,658 samples, 21.11%)</title><rect x="17.9677%" y="613" width="21.1130%" height="15" fill="rgb(237,142,3)" fg:x="1411" fg:w="1658"/><text x="18.2177%" y="623.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="39.0551%" y="597" width="0.0255%" height="15" fill="rgb(241,107,1)" fg:x="3067" fg:w="2"/><text x="39.3051%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="39.0551%" y="581" width="0.0255%" height="15" fill="rgb(229,83,13)" fg:x="3067" fg:w="2"/><text x="39.3051%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="39.0551%" y="565" width="0.0255%" height="15" fill="rgb(241,91,40)" fg:x="3067" fg:w="2"/><text x="39.3051%" y="575.50"></text></g><g><title>&lt;&amp;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.03%)</title><rect x="39.0551%" y="549" width="0.0255%" height="15" fill="rgb(225,3,45)" fg:x="3067" fg:w="2"/><text x="39.3051%" y="559.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (2 samples, 0.03%)</title><rect x="39.0551%" y="533" width="0.0255%" height="15" fill="rgb(244,223,14)" fg:x="3067" fg:w="2"/><text x="39.3051%" y="543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (2 samples, 0.03%)</title><rect x="39.0551%" y="517" width="0.0255%" height="15" fill="rgb(224,124,37)" fg:x="3067" fg:w="2"/><text x="39.3051%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (2 samples, 0.03%)</title><rect x="39.0551%" y="501" width="0.0255%" height="15" fill="rgb(251,171,30)" fg:x="3067" fg:w="2"/><text x="39.3051%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (2 samples, 0.03%)</title><rect x="39.0551%" y="485" width="0.0255%" height="15" fill="rgb(236,46,54)" fg:x="3067" fg:w="2"/><text x="39.3051%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2 samples, 0.03%)</title><rect x="39.0551%" y="469" width="0.0255%" height="15" fill="rgb(245,213,5)" fg:x="3067" fg:w="2"/><text x="39.3051%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (2 samples, 0.03%)</title><rect x="39.0551%" y="453" width="0.0255%" height="15" fill="rgb(230,144,27)" fg:x="3067" fg:w="2"/><text x="39.3051%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (1 samples, 0.01%)</title><rect x="39.0679%" y="437" width="0.0127%" height="15" fill="rgb(220,86,6)" fg:x="3068" fg:w="1"/><text x="39.3179%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (1 samples, 0.01%)</title><rect x="39.0679%" y="421" width="0.0127%" height="15" fill="rgb(240,20,13)" fg:x="3068" fg:w="1"/><text x="39.3179%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="39.0806%" y="661" width="0.0127%" height="15" fill="rgb(217,89,34)" fg:x="3069" fg:w="1"/><text x="39.3306%" y="671.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="39.0806%" y="645" width="0.0127%" height="15" fill="rgb(229,13,5)" fg:x="3069" fg:w="1"/><text x="39.3306%" y="655.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (1 samples, 0.01%)</title><rect x="39.0806%" y="629" width="0.0127%" height="15" fill="rgb(244,67,35)" fg:x="3069" fg:w="1"/><text x="39.3306%" y="639.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.01%)</title><rect x="39.0806%" y="613" width="0.0127%" height="15" fill="rgb(221,40,2)" fg:x="3069" fg:w="1"/><text x="39.3306%" y="623.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (1 samples, 0.01%)</title><rect x="39.0806%" y="597" width="0.0127%" height="15" fill="rgb(237,157,21)" fg:x="3069" fg:w="1"/><text x="39.3306%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (1 samples, 0.01%)</title><rect x="39.0933%" y="613" width="0.0127%" height="15" fill="rgb(222,94,11)" fg:x="3070" fg:w="1"/><text x="39.3433%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (1 samples, 0.01%)</title><rect x="39.0933%" y="597" width="0.0127%" height="15" fill="rgb(249,113,6)" fg:x="3070" fg:w="1"/><text x="39.3433%" y="607.50"></text></g><g><title>core::slice::sort::choose_pivot (7 samples, 0.09%)</title><rect x="39.1061%" y="613" width="0.0891%" height="15" fill="rgb(238,137,36)" fg:x="3071" fg:w="7"/><text x="39.3561%" y="623.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (7 samples, 0.09%)</title><rect x="39.1061%" y="597" width="0.0891%" height="15" fill="rgb(210,102,26)" fg:x="3071" fg:w="7"/><text x="39.3561%" y="607.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (7 samples, 0.09%)</title><rect x="39.1061%" y="581" width="0.0891%" height="15" fill="rgb(218,30,30)" fg:x="3071" fg:w="7"/><text x="39.3561%" y="591.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (5 samples, 0.06%)</title><rect x="39.1315%" y="565" width="0.0637%" height="15" fill="rgb(214,67,26)" fg:x="3073" fg:w="5"/><text x="39.3815%" y="575.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="39.1825%" y="549" width="0.0127%" height="15" fill="rgb(251,9,53)" fg:x="3077" fg:w="1"/><text x="39.4325%" y="559.50"></text></g><g><title>core::slice::sort::insertion_sort (2 samples, 0.03%)</title><rect x="39.1952%" y="613" width="0.0255%" height="15" fill="rgb(228,204,25)" fg:x="3078" fg:w="2"/><text x="39.4452%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.03%)</title><rect x="39.1952%" y="597" width="0.0255%" height="15" fill="rgb(207,153,8)" fg:x="3078" fg:w="2"/><text x="39.4452%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.03%)</title><rect x="39.1952%" y="581" width="0.0255%" height="15" fill="rgb(242,9,16)" fg:x="3078" fg:w="2"/><text x="39.4452%" y="591.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.01%)</title><rect x="39.2589%" y="597" width="0.0127%" height="15" fill="rgb(217,211,10)" fg:x="3083" fg:w="1"/><text x="39.5089%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="39.2589%" y="581" width="0.0127%" height="15" fill="rgb(219,228,52)" fg:x="3083" fg:w="1"/><text x="39.5089%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="39.2589%" y="565" width="0.0127%" height="15" fill="rgb(231,92,29)" fg:x="3083" fg:w="1"/><text x="39.5089%" y="575.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="43.0409%" y="549" width="0.0127%" height="15" fill="rgb(232,8,23)" fg:x="3380" fg:w="1"/><text x="43.2909%" y="559.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="43.0409%" y="533" width="0.0127%" height="15" fill="rgb(216,211,34)" fg:x="3380" fg:w="1"/><text x="43.2909%" y="543.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="43.0409%" y="517" width="0.0127%" height="15" fill="rgb(236,151,0)" fg:x="3380" fg:w="1"/><text x="43.2909%" y="527.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="43.0409%" y="501" width="0.0127%" height="15" fill="rgb(209,168,3)" fg:x="3380" fg:w="1"/><text x="43.2909%" y="511.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="43.0409%" y="485" width="0.0127%" height="15" fill="rgb(208,129,28)" fg:x="3380" fg:w="1"/><text x="43.2909%" y="495.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="43.0409%" y="469" width="0.0127%" height="15" fill="rgb(229,78,22)" fg:x="3380" fg:w="1"/><text x="43.2909%" y="479.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="43.0409%" y="453" width="0.0127%" height="15" fill="rgb(228,187,13)" fg:x="3380" fg:w="1"/><text x="43.2909%" y="463.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="43.0409%" y="581" width="0.0255%" height="15" fill="rgb(240,119,24)" fg:x="3380" fg:w="2"/><text x="43.2909%" y="591.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="43.0409%" y="565" width="0.0255%" height="15" fill="rgb(209,194,42)" fg:x="3380" fg:w="2"/><text x="43.2909%" y="575.50"></text></g><g><title>irqentry_exit (1 samples, 0.01%)</title><rect x="43.0536%" y="549" width="0.0127%" height="15" fill="rgb(247,200,46)" fg:x="3381" fg:w="1"/><text x="43.3036%" y="559.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.01%)</title><rect x="43.0536%" y="533" width="0.0127%" height="15" fill="rgb(218,76,16)" fg:x="3381" fg:w="1"/><text x="43.3036%" y="543.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.01%)</title><rect x="43.0536%" y="517" width="0.0127%" height="15" fill="rgb(225,21,48)" fg:x="3381" fg:w="1"/><text x="43.3036%" y="527.50"></text></g><g><title>exit_to_user_mode_loop (1 samples, 0.01%)</title><rect x="43.0536%" y="501" width="0.0127%" height="15" fill="rgb(239,223,50)" fg:x="3381" fg:w="1"/><text x="43.3036%" y="511.50"></text></g><g><title>schedule (1 samples, 0.01%)</title><rect x="43.0536%" y="485" width="0.0127%" height="15" fill="rgb(244,45,21)" fg:x="3381" fg:w="1"/><text x="43.3036%" y="495.50"></text></g><g><title>__schedule (1 samples, 0.01%)</title><rect x="43.0536%" y="469" width="0.0127%" height="15" fill="rgb(232,33,43)" fg:x="3381" fg:w="1"/><text x="43.3036%" y="479.50"></text></g><g><title>finish_task_switch.isra.0 (1 samples, 0.01%)</title><rect x="43.0536%" y="453" width="0.0127%" height="15" fill="rgb(209,8,3)" fg:x="3381" fg:w="1"/><text x="43.3036%" y="463.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="43.0536%" y="437" width="0.0127%" height="15" fill="rgb(214,25,53)" fg:x="3381" fg:w="1"/><text x="43.3036%" y="447.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="43.0536%" y="421" width="0.0127%" height="15" fill="rgb(254,186,54)" fg:x="3381" fg:w="1"/><text x="43.3036%" y="431.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="43.0536%" y="405" width="0.0127%" height="15" fill="rgb(208,174,49)" fg:x="3381" fg:w="1"/><text x="43.3036%" y="415.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="43.0536%" y="389" width="0.0127%" height="15" fill="rgb(233,191,51)" fg:x="3381" fg:w="1"/><text x="43.3036%" y="399.50"></text></g><g><title>core::cmp::min (4 samples, 0.05%)</title><rect x="43.0663%" y="581" width="0.0509%" height="15" fill="rgb(222,134,10)" fg:x="3382" fg:w="4"/><text x="43.3163%" y="591.50"></text></g><g><title>core::cmp::Ord::min (4 samples, 0.05%)</title><rect x="43.0663%" y="565" width="0.0509%" height="15" fill="rgb(230,226,20)" fg:x="3382" fg:w="4"/><text x="43.3163%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.01%)</title><rect x="43.1045%" y="549" width="0.0127%" height="15" fill="rgb(251,111,25)" fg:x="3385" fg:w="1"/><text x="43.3545%" y="559.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u8&gt; for usize&gt;::from (7 samples, 0.09%)</title><rect x="43.1173%" y="581" width="0.0891%" height="15" fill="rgb(224,40,46)" fg:x="3386" fg:w="7"/><text x="43.3673%" y="591.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="43.1937%" y="565" width="0.0127%" height="15" fill="rgb(236,108,47)" fg:x="3392" fg:w="1"/><text x="43.4437%" y="575.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="43.1937%" y="549" width="0.0127%" height="15" fill="rgb(234,93,0)" fg:x="3392" fg:w="1"/><text x="43.4437%" y="559.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="43.1937%" y="533" width="0.0127%" height="15" fill="rgb(224,213,32)" fg:x="3392" fg:w="1"/><text x="43.4437%" y="543.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="43.1937%" y="517" width="0.0127%" height="15" fill="rgb(251,11,48)" fg:x="3392" fg:w="1"/><text x="43.4437%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.18%)</title><rect x="43.2064%" y="581" width="0.1783%" height="15" fill="rgb(236,173,5)" fg:x="3393" fg:w="14"/><text x="43.4564%" y="591.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="43.3720%" y="565" width="0.0127%" height="15" fill="rgb(230,95,12)" fg:x="3406" fg:w="1"/><text x="43.6220%" y="575.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="43.3720%" y="549" width="0.0127%" height="15" fill="rgb(232,209,1)" fg:x="3406" fg:w="1"/><text x="43.6220%" y="559.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="43.3720%" y="533" width="0.0127%" height="15" fill="rgb(232,6,1)" fg:x="3406" fg:w="1"/><text x="43.6220%" y="543.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="43.3720%" y="517" width="0.0127%" height="15" fill="rgb(210,224,50)" fg:x="3406" fg:w="1"/><text x="43.6220%" y="527.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="46.0079%" y="533" width="0.0255%" height="15" fill="rgb(228,127,35)" fg:x="3613" fg:w="2"/><text x="46.2579%" y="543.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="46.0079%" y="517" width="0.0255%" height="15" fill="rgb(245,102,45)" fg:x="3613" fg:w="2"/><text x="46.2579%" y="527.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.03%)</title><rect x="46.0079%" y="501" width="0.0255%" height="15" fill="rgb(214,1,49)" fg:x="3613" fg:w="2"/><text x="46.2579%" y="511.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="46.0079%" y="485" width="0.0255%" height="15" fill="rgb(226,163,40)" fg:x="3613" fg:w="2"/><text x="46.2579%" y="495.50"></text></g><g><title>run_timer_softirq (2 samples, 0.03%)</title><rect x="46.0079%" y="469" width="0.0255%" height="15" fill="rgb(239,212,28)" fg:x="3613" fg:w="2"/><text x="46.2579%" y="479.50"></text></g><g><title>__run_timers.part.0 (2 samples, 0.03%)</title><rect x="46.0079%" y="453" width="0.0255%" height="15" fill="rgb(220,20,13)" fg:x="3613" fg:w="2"/><text x="46.2579%" y="463.50"></text></g><g><title>call_timer_fn (2 samples, 0.03%)</title><rect x="46.0079%" y="437" width="0.0255%" height="15" fill="rgb(210,164,35)" fg:x="3613" fg:w="2"/><text x="46.2579%" y="447.50"></text></g><g><title>vbg_heartbeat_timer (2 samples, 0.03%)</title><rect x="46.0079%" y="421" width="0.0255%" height="15" fill="rgb(248,109,41)" fg:x="3613" fg:w="2"/><text x="46.2579%" y="431.50"></text></g><g><title>vbg_req_perform (2 samples, 0.03%)</title><rect x="46.0079%" y="405" width="0.0255%" height="15" fill="rgb(238,23,50)" fg:x="3613" fg:w="2"/><text x="46.2579%" y="415.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (39 samples, 0.50%)</title><rect x="45.5877%" y="549" width="0.4966%" height="15" fill="rgb(211,48,49)" fg:x="3580" fg:w="39"/><text x="45.8377%" y="559.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (4 samples, 0.05%)</title><rect x="46.0334%" y="533" width="0.0509%" height="15" fill="rgb(223,36,21)" fg:x="3615" fg:w="4"/><text x="46.2834%" y="543.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="46.0843%" y="549" width="0.0127%" height="15" fill="rgb(207,123,46)" fg:x="3619" fg:w="1"/><text x="46.3343%" y="559.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="46.0843%" y="533" width="0.0127%" height="15" fill="rgb(240,218,32)" fg:x="3619" fg:w="1"/><text x="46.3343%" y="543.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="46.0843%" y="517" width="0.0127%" height="15" fill="rgb(252,5,43)" fg:x="3619" fg:w="1"/><text x="46.3343%" y="527.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="46.0843%" y="501" width="0.0127%" height="15" fill="rgb(252,84,19)" fg:x="3619" fg:w="1"/><text x="46.3343%" y="511.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="46.0970%" y="549" width="0.0255%" height="15" fill="rgb(243,152,39)" fg:x="3620" fg:w="2"/><text x="46.3470%" y="559.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="46.0970%" y="533" width="0.0255%" height="15" fill="rgb(234,160,15)" fg:x="3620" fg:w="2"/><text x="46.3470%" y="543.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.03%)</title><rect x="46.0970%" y="517" width="0.0255%" height="15" fill="rgb(237,34,20)" fg:x="3620" fg:w="2"/><text x="46.3470%" y="527.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="46.0970%" y="501" width="0.0255%" height="15" fill="rgb(229,97,13)" fg:x="3620" fg:w="2"/><text x="46.3470%" y="511.50"></text></g><g><title>run_timer_softirq (2 samples, 0.03%)</title><rect x="46.0970%" y="485" width="0.0255%" height="15" fill="rgb(234,71,50)" fg:x="3620" fg:w="2"/><text x="46.3470%" y="495.50"></text></g><g><title>__run_timers.part.0 (2 samples, 0.03%)</title><rect x="46.0970%" y="469" width="0.0255%" height="15" fill="rgb(253,155,4)" fg:x="3620" fg:w="2"/><text x="46.3470%" y="479.50"></text></g><g><title>call_timer_fn (2 samples, 0.03%)</title><rect x="46.0970%" y="453" width="0.0255%" height="15" fill="rgb(222,185,37)" fg:x="3620" fg:w="2"/><text x="46.3470%" y="463.50"></text></g><g><title>vbg_heartbeat_timer (2 samples, 0.03%)</title><rect x="46.0970%" y="437" width="0.0255%" height="15" fill="rgb(251,177,13)" fg:x="3620" fg:w="2"/><text x="46.3470%" y="447.50"></text></g><g><title>vbg_req_perform (2 samples, 0.03%)</title><rect x="46.0970%" y="421" width="0.0255%" height="15" fill="rgb(250,179,40)" fg:x="3620" fg:w="2"/><text x="46.3470%" y="431.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (2 samples, 0.03%)</title><rect x="46.1225%" y="549" width="0.0255%" height="15" fill="rgb(242,44,2)" fg:x="3622" fg:w="2"/><text x="46.3725%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (26 samples, 0.33%)</title><rect x="46.1480%" y="549" width="0.3311%" height="15" fill="rgb(216,177,13)" fg:x="3624" fg:w="26"/><text x="46.3980%" y="559.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="51.2288%" y="533" width="0.0127%" height="15" fill="rgb(216,106,43)" fg:x="4023" fg:w="1"/><text x="51.4788%" y="543.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="51.2288%" y="517" width="0.0127%" height="15" fill="rgb(216,183,2)" fg:x="4023" fg:w="1"/><text x="51.4788%" y="527.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="51.2288%" y="501" width="0.0127%" height="15" fill="rgb(249,75,3)" fg:x="4023" fg:w="1"/><text x="51.4788%" y="511.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="51.2288%" y="485" width="0.0127%" height="15" fill="rgb(219,67,39)" fg:x="4023" fg:w="1"/><text x="51.4788%" y="495.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="52.3622%" y="517" width="0.0127%" height="15" fill="rgb(253,228,2)" fg:x="4112" fg:w="1"/><text x="52.6122%" y="527.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="52.3622%" y="501" width="0.0127%" height="15" fill="rgb(235,138,27)" fg:x="4112" fg:w="1"/><text x="52.6122%" y="511.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="52.3622%" y="485" width="0.0127%" height="15" fill="rgb(236,97,51)" fg:x="4112" fg:w="1"/><text x="52.6122%" y="495.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="52.3622%" y="469" width="0.0127%" height="15" fill="rgb(240,80,30)" fg:x="4112" fg:w="1"/><text x="52.6122%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (707 samples, 9.00%)</title><rect x="43.3847%" y="581" width="9.0029%" height="15" fill="rgb(230,178,19)" fg:x="3407" fg:w="707"/><text x="43.6347%" y="591.50">core::iter::r..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (705 samples, 8.98%)</title><rect x="43.4102%" y="565" width="8.9775%" height="15" fill="rgb(210,190,27)" fg:x="3409" fg:w="705"/><text x="43.6602%" y="575.50">&lt;core::ops::r..</text></g><g><title>core::mem::replace (464 samples, 5.91%)</title><rect x="46.4791%" y="549" width="5.9086%" height="15" fill="rgb(222,107,31)" fg:x="3650" fg:w="464"/><text x="46.7291%" y="559.50">core::me..</text></g><g><title>core::ptr::read (90 samples, 1.15%)</title><rect x="51.2416%" y="533" width="1.1461%" height="15" fill="rgb(216,127,34)" fg:x="4024" fg:w="90"/><text x="51.4916%" y="543.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="52.3749%" y="517" width="0.0127%" height="15" fill="rgb(234,116,52)" fg:x="4113" fg:w="1"/><text x="52.6249%" y="527.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="52.3749%" y="501" width="0.0127%" height="15" fill="rgb(222,124,15)" fg:x="4113" fg:w="1"/><text x="52.6249%" y="511.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="52.3749%" y="485" width="0.0127%" height="15" fill="rgb(231,179,28)" fg:x="4113" fg:w="1"/><text x="52.6249%" y="495.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="52.3749%" y="469" width="0.0127%" height="15" fill="rgb(226,93,45)" fg:x="4113" fg:w="1"/><text x="52.6249%" y="479.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="52.3749%" y="453" width="0.0127%" height="15" fill="rgb(215,8,51)" fg:x="4113" fg:w="1"/><text x="52.6249%" y="463.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="52.3749%" y="437" width="0.0127%" height="15" fill="rgb(223,106,5)" fg:x="4113" fg:w="1"/><text x="52.6249%" y="447.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="52.3749%" y="421" width="0.0127%" height="15" fill="rgb(250,191,5)" fg:x="4113" fg:w="1"/><text x="52.6249%" y="431.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="52.3749%" y="405" width="0.0127%" height="15" fill="rgb(242,132,44)" fg:x="4113" fg:w="1"/><text x="52.6249%" y="415.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="52.3749%" y="389" width="0.0127%" height="15" fill="rgb(251,152,29)" fg:x="4113" fg:w="1"/><text x="52.6249%" y="399.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.04%)</title><rect x="54.2595%" y="565" width="0.0382%" height="15" fill="rgb(218,179,5)" fg:x="4261" fg:w="3"/><text x="54.5095%" y="575.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.04%)</title><rect x="54.2595%" y="549" width="0.0382%" height="15" fill="rgb(227,67,19)" fg:x="4261" fg:w="3"/><text x="54.5095%" y="559.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.04%)</title><rect x="54.2595%" y="533" width="0.0382%" height="15" fill="rgb(233,119,31)" fg:x="4261" fg:w="3"/><text x="54.5095%" y="543.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.04%)</title><rect x="54.2595%" y="517" width="0.0382%" height="15" fill="rgb(241,120,22)" fg:x="4261" fg:w="3"/><text x="54.5095%" y="527.50"></text></g><g><title>run_timer_softirq (3 samples, 0.04%)</title><rect x="54.2595%" y="501" width="0.0382%" height="15" fill="rgb(224,102,30)" fg:x="4261" fg:w="3"/><text x="54.5095%" y="511.50"></text></g><g><title>__run_timers.part.0 (3 samples, 0.04%)</title><rect x="54.2595%" y="485" width="0.0382%" height="15" fill="rgb(210,164,37)" fg:x="4261" fg:w="3"/><text x="54.5095%" y="495.50"></text></g><g><title>call_timer_fn (3 samples, 0.04%)</title><rect x="54.2595%" y="469" width="0.0382%" height="15" fill="rgb(226,191,16)" fg:x="4261" fg:w="3"/><text x="54.5095%" y="479.50"></text></g><g><title>vbg_heartbeat_timer (3 samples, 0.04%)</title><rect x="54.2595%" y="453" width="0.0382%" height="15" fill="rgb(214,40,45)" fg:x="4261" fg:w="3"/><text x="54.5095%" y="463.50"></text></g><g><title>vbg_req_perform (3 samples, 0.04%)</title><rect x="54.2595%" y="437" width="0.0382%" height="15" fill="rgb(244,29,26)" fg:x="4261" fg:w="3"/><text x="54.5095%" y="447.50"></text></g><g><title>core::ops::function::FnMut::call_mut (159 samples, 2.02%)</title><rect x="52.3876%" y="581" width="2.0247%" height="15" fill="rgb(216,16,5)" fg:x="4114" fg:w="159"/><text x="52.6376%" y="591.50">c..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (9 samples, 0.11%)</title><rect x="54.2977%" y="565" width="0.1146%" height="15" fill="rgb(249,76,35)" fg:x="4264" fg:w="9"/><text x="54.5477%" y="575.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.04%)</title><rect x="56.9719%" y="517" width="0.0382%" height="15" fill="rgb(207,11,44)" fg:x="4474" fg:w="3"/><text x="57.2219%" y="527.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.04%)</title><rect x="56.9719%" y="501" width="0.0382%" height="15" fill="rgb(228,190,49)" fg:x="4474" fg:w="3"/><text x="57.2219%" y="511.50"></text></g><g><title>run_timer_softirq (2 samples, 0.03%)</title><rect x="56.9846%" y="485" width="0.0255%" height="15" fill="rgb(214,173,12)" fg:x="4475" fg:w="2"/><text x="57.2346%" y="495.50"></text></g><g><title>__run_timers.part.0 (2 samples, 0.03%)</title><rect x="56.9846%" y="469" width="0.0255%" height="15" fill="rgb(218,26,35)" fg:x="4475" fg:w="2"/><text x="57.2346%" y="479.50"></text></g><g><title>call_timer_fn (2 samples, 0.03%)</title><rect x="56.9846%" y="453" width="0.0255%" height="15" fill="rgb(220,200,19)" fg:x="4475" fg:w="2"/><text x="57.2346%" y="463.50"></text></g><g><title>vbg_heartbeat_timer (2 samples, 0.03%)</title><rect x="56.9846%" y="437" width="0.0255%" height="15" fill="rgb(239,95,49)" fg:x="4475" fg:w="2"/><text x="57.2346%" y="447.50"></text></g><g><title>vbg_req_perform (2 samples, 0.03%)</title><rect x="56.9846%" y="421" width="0.0255%" height="15" fill="rgb(235,85,53)" fg:x="4475" fg:w="2"/><text x="57.2346%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (205 samples, 2.61%)</title><rect x="54.4123%" y="581" width="2.6105%" height="15" fill="rgb(233,133,31)" fg:x="4273" fg:w="205"/><text x="54.6623%" y="591.50">co..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (181 samples, 2.30%)</title><rect x="54.7179%" y="565" width="2.3049%" height="15" fill="rgb(218,25,20)" fg:x="4297" fg:w="181"/><text x="54.9679%" y="575.50">c..</text></g><g><title>asm_sysvec_apic_timer_interrupt (4 samples, 0.05%)</title><rect x="56.9719%" y="549" width="0.0509%" height="15" fill="rgb(252,210,38)" fg:x="4474" fg:w="4"/><text x="57.2219%" y="559.50"></text></g><g><title>sysvec_apic_timer_interrupt (4 samples, 0.05%)</title><rect x="56.9719%" y="533" width="0.0509%" height="15" fill="rgb(242,134,21)" fg:x="4474" fg:w="4"/><text x="57.2219%" y="543.50"></text></g><g><title>irqentry_exit (1 samples, 0.01%)</title><rect x="57.0101%" y="517" width="0.0127%" height="15" fill="rgb(213,28,48)" fg:x="4477" fg:w="1"/><text x="57.2601%" y="527.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.01%)</title><rect x="57.0101%" y="501" width="0.0127%" height="15" fill="rgb(250,196,2)" fg:x="4477" fg:w="1"/><text x="57.2601%" y="511.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.01%)</title><rect x="57.0101%" y="485" width="0.0127%" height="15" fill="rgb(227,5,17)" fg:x="4477" fg:w="1"/><text x="57.2601%" y="495.50"></text></g><g><title>exit_to_user_mode_loop (1 samples, 0.01%)</title><rect x="57.0101%" y="469" width="0.0127%" height="15" fill="rgb(221,226,24)" fg:x="4477" fg:w="1"/><text x="57.2601%" y="479.50"></text></g><g><title>schedule (1 samples, 0.01%)</title><rect x="57.0101%" y="453" width="0.0127%" height="15" fill="rgb(211,5,48)" fg:x="4477" fg:w="1"/><text x="57.2601%" y="463.50"></text></g><g><title>__schedule (1 samples, 0.01%)</title><rect x="57.0101%" y="437" width="0.0127%" height="15" fill="rgb(219,150,6)" fg:x="4477" fg:w="1"/><text x="57.2601%" y="447.50"></text></g><g><title>finish_task_switch.isra.0 (1 samples, 0.01%)</title><rect x="57.0101%" y="421" width="0.0127%" height="15" fill="rgb(251,46,16)" fg:x="4477" fg:w="1"/><text x="57.2601%" y="431.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="57.0101%" y="405" width="0.0127%" height="15" fill="rgb(220,204,40)" fg:x="4477" fg:w="1"/><text x="57.2601%" y="415.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="57.0101%" y="389" width="0.0127%" height="15" fill="rgb(211,85,2)" fg:x="4477" fg:w="1"/><text x="57.2601%" y="399.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="57.0101%" y="373" width="0.0127%" height="15" fill="rgb(229,17,7)" fg:x="4477" fg:w="1"/><text x="57.2601%" y="383.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="57.0101%" y="357" width="0.0127%" height="15" fill="rgb(239,72,28)" fg:x="4477" fg:w="1"/><text x="57.2601%" y="367.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="57.0865%" y="565" width="0.0127%" height="15" fill="rgb(230,47,54)" fg:x="4483" fg:w="1"/><text x="57.3365%" y="575.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="57.0865%" y="549" width="0.0127%" height="15" fill="rgb(214,50,8)" fg:x="4483" fg:w="1"/><text x="57.3365%" y="559.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="57.0865%" y="533" width="0.0127%" height="15" fill="rgb(216,198,43)" fg:x="4483" fg:w="1"/><text x="57.3365%" y="543.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="57.0865%" y="517" width="0.0127%" height="15" fill="rgb(234,20,35)" fg:x="4483" fg:w="1"/><text x="57.3365%" y="527.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="57.0865%" y="501" width="0.0127%" height="15" fill="rgb(254,45,19)" fg:x="4483" fg:w="1"/><text x="57.3365%" y="511.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="57.0865%" y="485" width="0.0127%" height="15" fill="rgb(219,14,44)" fg:x="4483" fg:w="1"/><text x="57.3365%" y="495.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="57.0865%" y="469" width="0.0127%" height="15" fill="rgb(217,220,26)" fg:x="4483" fg:w="1"/><text x="57.3365%" y="479.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="57.0865%" y="453" width="0.0127%" height="15" fill="rgb(213,158,28)" fg:x="4483" fg:w="1"/><text x="57.3365%" y="463.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="57.0865%" y="437" width="0.0127%" height="15" fill="rgb(252,51,52)" fg:x="4483" fg:w="1"/><text x="57.3365%" y="447.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (3 samples, 0.04%)</title><rect x="57.0992%" y="565" width="0.0382%" height="15" fill="rgb(246,89,16)" fg:x="4484" fg:w="3"/><text x="57.3492%" y="575.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (3 samples, 0.04%)</title><rect x="57.0992%" y="549" width="0.0382%" height="15" fill="rgb(216,158,49)" fg:x="4484" fg:w="3"/><text x="57.3492%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (52 samples, 0.66%)</title><rect x="57.0228%" y="581" width="0.6622%" height="15" fill="rgb(236,107,19)" fg:x="4478" fg:w="52"/><text x="57.2728%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (43 samples, 0.55%)</title><rect x="57.1374%" y="565" width="0.5476%" height="15" fill="rgb(228,185,30)" fg:x="4487" fg:w="43"/><text x="57.3874%" y="575.50"></text></g><g><title>core::ptr::null_mut (1 samples, 0.01%)</title><rect x="57.6850%" y="581" width="0.0127%" height="15" fill="rgb(246,134,8)" fg:x="4530" fg:w="1"/><text x="57.9350%" y="591.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.01%)</title><rect x="57.6850%" y="565" width="0.0127%" height="15" fill="rgb(214,143,50)" fg:x="4530" fg:w="1"/><text x="57.9350%" y="575.50"></text></g><g><title>core::ptr::read (2 samples, 0.03%)</title><rect x="57.6977%" y="581" width="0.0255%" height="15" fill="rgb(228,75,8)" fg:x="4531" fg:w="2"/><text x="57.9477%" y="591.50"></text></g><g><title>core::ptr::swap (2 samples, 0.03%)</title><rect x="57.7232%" y="581" width="0.0255%" height="15" fill="rgb(207,175,4)" fg:x="4533" fg:w="2"/><text x="57.9732%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.03%)</title><rect x="57.7232%" y="565" width="0.0255%" height="15" fill="rgb(205,108,24)" fg:x="4533" fg:w="2"/><text x="57.9732%" y="575.50"></text></g><g><title>core::slice::sort::partition (1,464 samples, 18.64%)</title><rect x="39.2207%" y="613" width="18.6426%" height="15" fill="rgb(244,120,49)" fg:x="3080" fg:w="1464"/><text x="39.4707%" y="623.50">core::slice::sort::partition</text></g><g><title>core::slice::sort::partition_in_blocks (1,460 samples, 18.59%)</title><rect x="39.2716%" y="597" width="18.5916%" height="15" fill="rgb(223,47,38)" fg:x="3084" fg:w="1460"/><text x="39.5216%" y="607.50">core::slice::sort::partition_..</text></g><g><title>core::slice::sort::partition_in_blocks::width (9 samples, 0.11%)</title><rect x="57.7486%" y="581" width="0.1146%" height="15" fill="rgb(229,179,11)" fg:x="4535" fg:w="9"/><text x="57.9986%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (1 samples, 0.01%)</title><rect x="57.8505%" y="565" width="0.0127%" height="15" fill="rgb(231,122,1)" fg:x="4543" fg:w="1"/><text x="58.1005%" y="575.50"></text></g><g><title>core::slice::sort::partition_equal (4 samples, 0.05%)</title><rect x="57.8632%" y="613" width="0.0509%" height="15" fill="rgb(245,119,9)" fg:x="4544" fg:w="4"/><text x="58.1132%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="57.9014%" y="597" width="0.0127%" height="15" fill="rgb(241,163,25)" fg:x="4547" fg:w="1"/><text x="58.1514%" y="607.50"></text></g><g><title>core::cmp::min (2 samples, 0.03%)</title><rect x="57.9269%" y="597" width="0.0255%" height="15" fill="rgb(217,214,3)" fg:x="4549" fg:w="2"/><text x="58.1769%" y="607.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.03%)</title><rect x="57.9269%" y="581" width="0.0255%" height="15" fill="rgb(240,86,28)" fg:x="4549" fg:w="2"/><text x="58.1769%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (2 samples, 0.03%)</title><rect x="57.9524%" y="597" width="0.0255%" height="15" fill="rgb(215,47,9)" fg:x="4551" fg:w="2"/><text x="58.2024%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (2 samples, 0.03%)</title><rect x="57.9524%" y="581" width="0.0255%" height="15" fill="rgb(252,25,45)" fg:x="4551" fg:w="2"/><text x="58.2024%" y="591.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (2 samples, 0.03%)</title><rect x="57.9524%" y="565" width="0.0255%" height="15" fill="rgb(251,164,9)" fg:x="4551" fg:w="2"/><text x="58.2024%" y="575.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (2 samples, 0.03%)</title><rect x="57.9524%" y="549" width="0.0255%" height="15" fill="rgb(233,194,0)" fg:x="4551" fg:w="2"/><text x="58.2024%" y="559.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.03%)</title><rect x="57.9524%" y="533" width="0.0255%" height="15" fill="rgb(249,111,24)" fg:x="4551" fg:w="2"/><text x="58.2024%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.01%)</title><rect x="57.9778%" y="597" width="0.0127%" height="15" fill="rgb(250,223,3)" fg:x="4553" fg:w="1"/><text x="58.2278%" y="607.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="57.9778%" y="581" width="0.0127%" height="15" fill="rgb(236,178,37)" fg:x="4553" fg:w="1"/><text x="58.2278%" y="591.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="57.9778%" y="565" width="0.0127%" height="15" fill="rgb(241,158,50)" fg:x="4553" fg:w="1"/><text x="58.2278%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="57.9778%" y="549" width="0.0127%" height="15" fill="rgb(213,121,41)" fg:x="4553" fg:w="1"/><text x="58.2278%" y="559.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.01%)</title><rect x="57.9778%" y="533" width="0.0127%" height="15" fill="rgb(240,92,3)" fg:x="4553" fg:w="1"/><text x="58.2278%" y="543.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.01%)</title><rect x="57.9778%" y="517" width="0.0127%" height="15" fill="rgb(205,123,3)" fg:x="4553" fg:w="1"/><text x="58.2278%" y="527.50"></text></g><g><title>core::slice::sort::break_patterns (1 samples, 0.01%)</title><rect x="57.9906%" y="597" width="0.0127%" height="15" fill="rgb(205,97,47)" fg:x="4554" fg:w="1"/><text x="58.2406%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.03%)</title><rect x="58.0542%" y="549" width="0.0255%" height="15" fill="rgb(247,152,14)" fg:x="4559" fg:w="2"/><text x="58.3042%" y="559.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="58.1179%" y="533" width="0.0127%" height="15" fill="rgb(248,195,53)" fg:x="4564" fg:w="1"/><text x="58.3679%" y="543.50"></text></g><g><title>core::slice::sort::choose_pivot (13 samples, 0.17%)</title><rect x="58.0033%" y="597" width="0.1655%" height="15" fill="rgb(226,201,16)" fg:x="4555" fg:w="13"/><text x="58.2533%" y="607.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (11 samples, 0.14%)</title><rect x="58.0288%" y="581" width="0.1401%" height="15" fill="rgb(205,98,0)" fg:x="4557" fg:w="11"/><text x="58.2788%" y="591.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (11 samples, 0.14%)</title><rect x="58.0288%" y="565" width="0.1401%" height="15" fill="rgb(214,191,48)" fg:x="4557" fg:w="11"/><text x="58.2788%" y="575.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (7 samples, 0.09%)</title><rect x="58.0797%" y="549" width="0.0891%" height="15" fill="rgb(237,112,39)" fg:x="4561" fg:w="7"/><text x="58.3297%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (3 samples, 0.04%)</title><rect x="58.1307%" y="533" width="0.0382%" height="15" fill="rgb(247,203,27)" fg:x="4565" fg:w="3"/><text x="58.3807%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.04%)</title><rect x="58.1307%" y="517" width="0.0382%" height="15" fill="rgb(235,124,28)" fg:x="4565" fg:w="3"/><text x="58.3807%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.03%)</title><rect x="58.1434%" y="501" width="0.0255%" height="15" fill="rgb(208,207,46)" fg:x="4566" fg:w="2"/><text x="58.3934%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="58.1689%" y="581" width="0.0127%" height="15" fill="rgb(234,176,4)" fg:x="4568" fg:w="1"/><text x="58.4189%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="58.1689%" y="565" width="0.0127%" height="15" fill="rgb(230,133,28)" fg:x="4568" fg:w="1"/><text x="58.4189%" y="575.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.01%)</title><rect x="58.1689%" y="549" width="0.0127%" height="15" fill="rgb(211,137,40)" fg:x="4568" fg:w="1"/><text x="58.4189%" y="559.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (3 samples, 0.04%)</title><rect x="58.1816%" y="581" width="0.0382%" height="15" fill="rgb(254,35,13)" fg:x="4569" fg:w="3"/><text x="58.4316%" y="591.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3 samples, 0.04%)</title><rect x="58.1816%" y="565" width="0.0382%" height="15" fill="rgb(225,49,51)" fg:x="4569" fg:w="3"/><text x="58.4316%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3 samples, 0.04%)</title><rect x="58.1816%" y="549" width="0.0382%" height="15" fill="rgb(251,10,15)" fg:x="4569" fg:w="3"/><text x="58.4316%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (2 samples, 0.03%)</title><rect x="58.1943%" y="533" width="0.0255%" height="15" fill="rgb(228,207,15)" fg:x="4570" fg:w="2"/><text x="58.4443%" y="543.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.01%)</title><rect x="58.2071%" y="517" width="0.0127%" height="15" fill="rgb(241,99,19)" fg:x="4571" fg:w="1"/><text x="58.4571%" y="527.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.01%)</title><rect x="58.2071%" y="501" width="0.0127%" height="15" fill="rgb(207,104,49)" fg:x="4571" fg:w="1"/><text x="58.4571%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="58.2198%" y="565" width="0.0127%" height="15" fill="rgb(234,99,18)" fg:x="4572" fg:w="1"/><text x="58.4698%" y="575.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.01%)</title><rect x="58.2198%" y="549" width="0.0127%" height="15" fill="rgb(213,191,49)" fg:x="4572" fg:w="1"/><text x="58.4698%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.01%)</title><rect x="58.2198%" y="533" width="0.0127%" height="15" fill="rgb(210,226,19)" fg:x="4572" fg:w="1"/><text x="58.4698%" y="543.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (1 samples, 0.01%)</title><rect x="58.2198%" y="517" width="0.0127%" height="15" fill="rgb(229,97,18)" fg:x="4572" fg:w="1"/><text x="58.4698%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.04%)</title><rect x="58.2325%" y="565" width="0.0382%" height="15" fill="rgb(211,167,15)" fg:x="4573" fg:w="3"/><text x="58.4825%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (1 samples, 0.01%)</title><rect x="58.2580%" y="549" width="0.0127%" height="15" fill="rgb(210,169,34)" fg:x="4575" fg:w="1"/><text x="58.5080%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::CopyOnDrop&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="58.2707%" y="565" width="0.0127%" height="15" fill="rgb(241,121,31)" fg:x="4576" fg:w="1"/><text x="58.5207%" y="575.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="58.2707%" y="549" width="0.0127%" height="15" fill="rgb(232,40,11)" fg:x="4576" fg:w="1"/><text x="58.5207%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="58.2835%" y="565" width="0.0127%" height="15" fill="rgb(205,86,26)" fg:x="4577" fg:w="1"/><text x="58.5335%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="58.2835%" y="549" width="0.0127%" height="15" fill="rgb(231,126,28)" fg:x="4577" fg:w="1"/><text x="58.5335%" y="559.50"></text></g><g><title>core::slice::sort::insertion_sort (11 samples, 0.14%)</title><rect x="58.1689%" y="597" width="0.1401%" height="15" fill="rgb(219,221,18)" fg:x="4568" fg:w="11"/><text x="58.4189%" y="607.50"></text></g><g><title>core::slice::sort::shift_tail (7 samples, 0.09%)</title><rect x="58.2198%" y="581" width="0.0891%" height="15" fill="rgb(211,40,0)" fg:x="4572" fg:w="7"/><text x="58.4698%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="58.2962%" y="565" width="0.0127%" height="15" fill="rgb(239,85,43)" fg:x="4578" fg:w="1"/><text x="58.5462%" y="575.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="58.2962%" y="549" width="0.0127%" height="15" fill="rgb(231,55,21)" fg:x="4578" fg:w="1"/><text x="58.5462%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="58.2962%" y="533" width="0.0127%" height="15" fill="rgb(225,184,43)" fg:x="4578" fg:w="1"/><text x="58.5462%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="58.2962%" y="517" width="0.0127%" height="15" fill="rgb(251,158,41)" fg:x="4578" fg:w="1"/><text x="58.5462%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.03%)</title><rect x="58.3217%" y="581" width="0.0255%" height="15" fill="rgb(234,159,37)" fg:x="4580" fg:w="2"/><text x="58.5717%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (1 samples, 0.01%)</title><rect x="58.3344%" y="565" width="0.0127%" height="15" fill="rgb(216,204,22)" fg:x="4581" fg:w="1"/><text x="58.5844%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (2 samples, 0.03%)</title><rect x="58.3471%" y="581" width="0.0255%" height="15" fill="rgb(214,17,3)" fg:x="4582" fg:w="2"/><text x="58.5971%" y="591.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.03%)</title><rect x="58.3471%" y="565" width="0.0255%" height="15" fill="rgb(212,111,17)" fg:x="4582" fg:w="2"/><text x="58.5971%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.03%)</title><rect x="58.3471%" y="549" width="0.0255%" height="15" fill="rgb(221,157,24)" fg:x="4582" fg:w="2"/><text x="58.5971%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.03%)</title><rect x="58.3471%" y="533" width="0.0255%" height="15" fill="rgb(252,16,13)" fg:x="4582" fg:w="2"/><text x="58.5971%" y="543.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (6 samples, 0.08%)</title><rect x="58.3089%" y="597" width="0.0764%" height="15" fill="rgb(221,62,2)" fg:x="4579" fg:w="6"/><text x="58.5589%" y="607.50"></text></g><g><title>core::slice::sort::shift_head (1 samples, 0.01%)</title><rect x="58.3726%" y="581" width="0.0127%" height="15" fill="rgb(247,87,22)" fg:x="4584" fg:w="1"/><text x="58.6226%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="58.3726%" y="565" width="0.0127%" height="15" fill="rgb(215,73,9)" fg:x="4584" fg:w="1"/><text x="58.6226%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="58.3726%" y="549" width="0.0127%" height="15" fill="rgb(207,175,33)" fg:x="4584" fg:w="1"/><text x="58.6226%" y="559.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="58.4490%" y="581" width="0.0127%" height="15" fill="rgb(243,129,54)" fg:x="4590" fg:w="1"/><text x="58.6990%" y="591.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.01%)</title><rect x="58.4490%" y="565" width="0.0127%" height="15" fill="rgb(227,119,45)" fg:x="4590" fg:w="1"/><text x="58.6990%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="58.4617%" y="581" width="0.0127%" height="15" fill="rgb(205,109,36)" fg:x="4591" fg:w="1"/><text x="58.7117%" y="591.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="58.4617%" y="565" width="0.0127%" height="15" fill="rgb(205,6,39)" fg:x="4591" fg:w="1"/><text x="58.7117%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (1 samples, 0.01%)</title><rect x="58.4745%" y="581" width="0.0127%" height="15" fill="rgb(221,32,16)" fg:x="4592" fg:w="1"/><text x="58.7245%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (1 samples, 0.01%)</title><rect x="58.4745%" y="565" width="0.0127%" height="15" fill="rgb(228,144,50)" fg:x="4592" fg:w="1"/><text x="58.7245%" y="575.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.01%)</title><rect x="58.4745%" y="549" width="0.0127%" height="15" fill="rgb(229,201,53)" fg:x="4592" fg:w="1"/><text x="58.7245%" y="559.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.01%)</title><rect x="58.4745%" y="533" width="0.0127%" height="15" fill="rgb(249,153,27)" fg:x="4592" fg:w="1"/><text x="58.7245%" y="543.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.01%)</title><rect x="58.4745%" y="517" width="0.0127%" height="15" fill="rgb(227,106,25)" fg:x="4592" fg:w="1"/><text x="58.7245%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.03%)</title><rect x="58.4872%" y="581" width="0.0255%" height="15" fill="rgb(230,65,29)" fg:x="4593" fg:w="2"/><text x="58.7372%" y="591.50"></text></g><g><title>core::ptr::swap (2 samples, 0.03%)</title><rect x="58.4872%" y="565" width="0.0255%" height="15" fill="rgb(221,57,46)" fg:x="4593" fg:w="2"/><text x="58.7372%" y="575.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.01%)</title><rect x="58.4999%" y="549" width="0.0127%" height="15" fill="rgb(229,161,17)" fg:x="4594" fg:w="1"/><text x="58.7499%" y="559.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.01%)</title><rect x="58.5127%" y="581" width="0.0127%" height="15" fill="rgb(222,213,11)" fg:x="4595" fg:w="1"/><text x="58.7627%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="58.5127%" y="565" width="0.0127%" height="15" fill="rgb(235,35,13)" fg:x="4595" fg:w="1"/><text x="58.7627%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="58.5127%" y="549" width="0.0127%" height="15" fill="rgb(233,158,34)" fg:x="4595" fg:w="1"/><text x="58.7627%" y="559.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="61.5306%" y="565" width="0.0255%" height="15" fill="rgb(215,151,48)" fg:x="4832" fg:w="2"/><text x="61.7806%" y="575.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.05%)</title><rect x="61.5561%" y="533" width="0.0509%" height="15" fill="rgb(229,84,14)" fg:x="4834" fg:w="4"/><text x="61.8061%" y="543.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.05%)</title><rect x="61.5561%" y="517" width="0.0509%" height="15" fill="rgb(229,68,14)" fg:x="4834" fg:w="4"/><text x="61.8061%" y="527.50"></text></g><g><title>run_timer_softirq (4 samples, 0.05%)</title><rect x="61.5561%" y="501" width="0.0509%" height="15" fill="rgb(243,106,26)" fg:x="4834" fg:w="4"/><text x="61.8061%" y="511.50"></text></g><g><title>__run_timers.part.0 (4 samples, 0.05%)</title><rect x="61.5561%" y="485" width="0.0509%" height="15" fill="rgb(206,45,38)" fg:x="4834" fg:w="4"/><text x="61.8061%" y="495.50"></text></g><g><title>call_timer_fn (4 samples, 0.05%)</title><rect x="61.5561%" y="469" width="0.0509%" height="15" fill="rgb(226,6,15)" fg:x="4834" fg:w="4"/><text x="61.8061%" y="479.50"></text></g><g><title>vbg_heartbeat_timer (4 samples, 0.05%)</title><rect x="61.5561%" y="453" width="0.0509%" height="15" fill="rgb(232,22,54)" fg:x="4834" fg:w="4"/><text x="61.8061%" y="463.50"></text></g><g><title>vbg_req_perform (4 samples, 0.05%)</title><rect x="61.5561%" y="437" width="0.0509%" height="15" fill="rgb(229,222,32)" fg:x="4834" fg:w="4"/><text x="61.8061%" y="447.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.06%)</title><rect x="61.5561%" y="565" width="0.0637%" height="15" fill="rgb(228,62,29)" fg:x="4834" fg:w="5"/><text x="61.8061%" y="575.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.06%)</title><rect x="61.5561%" y="549" width="0.0637%" height="15" fill="rgb(251,103,34)" fg:x="4834" fg:w="5"/><text x="61.8061%" y="559.50"></text></g><g><title>irqentry_exit (1 samples, 0.01%)</title><rect x="61.6070%" y="533" width="0.0127%" height="15" fill="rgb(233,12,30)" fg:x="4838" fg:w="1"/><text x="61.8570%" y="543.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.01%)</title><rect x="61.6070%" y="517" width="0.0127%" height="15" fill="rgb(238,52,0)" fg:x="4838" fg:w="1"/><text x="61.8570%" y="527.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.01%)</title><rect x="61.6070%" y="501" width="0.0127%" height="15" fill="rgb(223,98,5)" fg:x="4838" fg:w="1"/><text x="61.8570%" y="511.50"></text></g><g><title>exit_to_user_mode_loop (1 samples, 0.01%)</title><rect x="61.6070%" y="485" width="0.0127%" height="15" fill="rgb(228,75,37)" fg:x="4838" fg:w="1"/><text x="61.8570%" y="495.50"></text></g><g><title>schedule (1 samples, 0.01%)</title><rect x="61.6070%" y="469" width="0.0127%" height="15" fill="rgb(205,115,49)" fg:x="4838" fg:w="1"/><text x="61.8570%" y="479.50"></text></g><g><title>__schedule (1 samples, 0.01%)</title><rect x="61.6070%" y="453" width="0.0127%" height="15" fill="rgb(250,154,43)" fg:x="4838" fg:w="1"/><text x="61.8570%" y="463.50"></text></g><g><title>finish_task_switch.isra.0 (1 samples, 0.01%)</title><rect x="61.6070%" y="437" width="0.0127%" height="15" fill="rgb(226,43,29)" fg:x="4838" fg:w="1"/><text x="61.8570%" y="447.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="61.6070%" y="421" width="0.0127%" height="15" fill="rgb(249,228,39)" fg:x="4838" fg:w="1"/><text x="61.8570%" y="431.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="61.6070%" y="405" width="0.0127%" height="15" fill="rgb(216,79,43)" fg:x="4838" fg:w="1"/><text x="61.8570%" y="415.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="61.6070%" y="389" width="0.0127%" height="15" fill="rgb(228,95,12)" fg:x="4838" fg:w="1"/><text x="61.8570%" y="399.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="61.6070%" y="373" width="0.0127%" height="15" fill="rgb(249,221,15)" fg:x="4838" fg:w="1"/><text x="61.8570%" y="383.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="61.6070%" y="357" width="0.0127%" height="15" fill="rgb(233,34,13)" fg:x="4838" fg:w="1"/><text x="61.8570%" y="367.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="61.6070%" y="341" width="0.0127%" height="15" fill="rgb(214,103,39)" fg:x="4838" fg:w="1"/><text x="61.8570%" y="351.50"></text></g><g><title>e1000_clean (1 samples, 0.01%)</title><rect x="61.6070%" y="325" width="0.0127%" height="15" fill="rgb(251,126,39)" fg:x="4838" fg:w="1"/><text x="61.8570%" y="335.50"></text></g><g><title>e1000_clean_rx_irq (1 samples, 0.01%)</title><rect x="61.6070%" y="309" width="0.0127%" height="15" fill="rgb(214,216,36)" fg:x="4838" fg:w="1"/><text x="61.8570%" y="319.50"></text></g><g><title>e1000_alloc_rx_buffers (1 samples, 0.01%)</title><rect x="61.6070%" y="293" width="0.0127%" height="15" fill="rgb(220,221,8)" fg:x="4838" fg:w="1"/><text x="61.8570%" y="303.50"></text></g><g><title>core::cmp::min (6 samples, 0.08%)</title><rect x="61.6198%" y="565" width="0.0764%" height="15" fill="rgb(240,216,3)" fg:x="4839" fg:w="6"/><text x="61.8698%" y="575.50"></text></g><g><title>core::cmp::Ord::min (6 samples, 0.08%)</title><rect x="61.6198%" y="549" width="0.0764%" height="15" fill="rgb(232,218,17)" fg:x="4839" fg:w="6"/><text x="61.8698%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (3 samples, 0.04%)</title><rect x="61.6580%" y="533" width="0.0382%" height="15" fill="rgb(229,163,45)" fg:x="4842" fg:w="3"/><text x="61.9080%" y="543.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u8&gt; for usize&gt;::from (1 samples, 0.01%)</title><rect x="61.6962%" y="565" width="0.0127%" height="15" fill="rgb(231,110,42)" fg:x="4845" fg:w="1"/><text x="61.9462%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.17%)</title><rect x="61.7089%" y="565" width="0.1655%" height="15" fill="rgb(208,170,48)" fg:x="4846" fg:w="13"/><text x="61.9589%" y="575.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="64.1666%" y="517" width="0.0127%" height="15" fill="rgb(239,116,25)" fg:x="5039" fg:w="1"/><text x="64.4166%" y="527.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="64.1666%" y="501" width="0.0127%" height="15" fill="rgb(219,200,50)" fg:x="5039" fg:w="1"/><text x="64.4166%" y="511.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="64.1666%" y="485" width="0.0127%" height="15" fill="rgb(245,200,0)" fg:x="5039" fg:w="1"/><text x="64.4166%" y="495.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="64.1666%" y="469" width="0.0127%" height="15" fill="rgb(245,119,33)" fg:x="5039" fg:w="1"/><text x="64.4166%" y="479.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="64.1666%" y="453" width="0.0127%" height="15" fill="rgb(231,125,12)" fg:x="5039" fg:w="1"/><text x="64.4166%" y="463.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="64.1666%" y="437" width="0.0127%" height="15" fill="rgb(216,96,41)" fg:x="5039" fg:w="1"/><text x="64.4166%" y="447.50"></text></g><g><title>e1000_clean (1 samples, 0.01%)</title><rect x="64.1666%" y="421" width="0.0127%" height="15" fill="rgb(248,43,45)" fg:x="5039" fg:w="1"/><text x="64.4166%" y="431.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (27 samples, 0.34%)</title><rect x="63.8482%" y="533" width="0.3438%" height="15" fill="rgb(217,222,7)" fg:x="5014" fg:w="27"/><text x="64.0982%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.01%)</title><rect x="64.1793%" y="517" width="0.0127%" height="15" fill="rgb(233,28,6)" fg:x="5040" fg:w="1"/><text x="64.4293%" y="527.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="64.1920%" y="533" width="0.0127%" height="15" fill="rgb(231,218,15)" fg:x="5041" fg:w="1"/><text x="64.4420%" y="543.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="64.1920%" y="517" width="0.0127%" height="15" fill="rgb(226,171,48)" fg:x="5041" fg:w="1"/><text x="64.4420%" y="527.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="64.1920%" y="501" width="0.0127%" height="15" fill="rgb(235,201,9)" fg:x="5041" fg:w="1"/><text x="64.4420%" y="511.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="64.1920%" y="485" width="0.0127%" height="15" fill="rgb(217,80,15)" fg:x="5041" fg:w="1"/><text x="64.4420%" y="495.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (4 samples, 0.05%)</title><rect x="64.2048%" y="533" width="0.0509%" height="15" fill="rgb(219,152,8)" fg:x="5042" fg:w="4"/><text x="64.4548%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (28 samples, 0.36%)</title><rect x="64.2557%" y="533" width="0.3566%" height="15" fill="rgb(243,107,38)" fg:x="5046" fg:w="28"/><text x="64.5057%" y="543.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="68.9927%" y="517" width="0.0127%" height="15" fill="rgb(231,17,5)" fg:x="5418" fg:w="1"/><text x="69.2427%" y="527.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="68.9927%" y="501" width="0.0127%" height="15" fill="rgb(209,25,54)" fg:x="5418" fg:w="1"/><text x="69.2427%" y="511.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="68.9927%" y="485" width="0.0127%" height="15" fill="rgb(219,0,2)" fg:x="5418" fg:w="1"/><text x="69.2427%" y="495.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="68.9927%" y="469" width="0.0127%" height="15" fill="rgb(246,9,5)" fg:x="5418" fg:w="1"/><text x="69.2427%" y="479.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="69.0055%" y="485" width="0.0127%" height="15" fill="rgb(226,159,4)" fg:x="5419" fg:w="1"/><text x="69.2555%" y="495.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="69.0055%" y="469" width="0.0127%" height="15" fill="rgb(219,175,34)" fg:x="5419" fg:w="1"/><text x="69.2555%" y="479.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="69.0055%" y="453" width="0.0127%" height="15" fill="rgb(236,10,46)" fg:x="5419" fg:w="1"/><text x="69.2555%" y="463.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="69.0055%" y="437" width="0.0127%" height="15" fill="rgb(240,211,16)" fg:x="5419" fg:w="1"/><text x="69.2555%" y="447.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="69.0055%" y="421" width="0.0127%" height="15" fill="rgb(205,3,43)" fg:x="5419" fg:w="1"/><text x="69.2555%" y="431.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="69.0055%" y="405" width="0.0127%" height="15" fill="rgb(245,7,22)" fg:x="5419" fg:w="1"/><text x="69.2555%" y="415.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="69.0055%" y="389" width="0.0127%" height="15" fill="rgb(239,132,32)" fg:x="5419" fg:w="1"/><text x="69.2555%" y="399.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="69.0055%" y="517" width="0.0255%" height="15" fill="rgb(228,202,34)" fg:x="5419" fg:w="2"/><text x="69.2555%" y="527.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="69.0055%" y="501" width="0.0255%" height="15" fill="rgb(254,200,22)" fg:x="5419" fg:w="2"/><text x="69.2555%" y="511.50"></text></g><g><title>irqentry_exit (1 samples, 0.01%)</title><rect x="69.0182%" y="485" width="0.0127%" height="15" fill="rgb(219,10,39)" fg:x="5420" fg:w="1"/><text x="69.2682%" y="495.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.01%)</title><rect x="69.0182%" y="469" width="0.0127%" height="15" fill="rgb(226,210,39)" fg:x="5420" fg:w="1"/><text x="69.2682%" y="479.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.01%)</title><rect x="69.0182%" y="453" width="0.0127%" height="15" fill="rgb(208,219,16)" fg:x="5420" fg:w="1"/><text x="69.2682%" y="463.50"></text></g><g><title>exit_to_user_mode_loop (1 samples, 0.01%)</title><rect x="69.0182%" y="437" width="0.0127%" height="15" fill="rgb(216,158,51)" fg:x="5420" fg:w="1"/><text x="69.2682%" y="447.50"></text></g><g><title>schedule (1 samples, 0.01%)</title><rect x="69.0182%" y="421" width="0.0127%" height="15" fill="rgb(233,14,44)" fg:x="5420" fg:w="1"/><text x="69.2682%" y="431.50"></text></g><g><title>__schedule (1 samples, 0.01%)</title><rect x="69.0182%" y="405" width="0.0127%" height="15" fill="rgb(237,97,39)" fg:x="5420" fg:w="1"/><text x="69.2682%" y="415.50"></text></g><g><title>finish_task_switch.isra.0 (1 samples, 0.01%)</title><rect x="69.0182%" y="389" width="0.0127%" height="15" fill="rgb(218,198,43)" fg:x="5420" fg:w="1"/><text x="69.2682%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (669 samples, 8.52%)</title><rect x="61.8744%" y="565" width="8.5190%" height="15" fill="rgb(231,104,20)" fg:x="4859" fg:w="669"/><text x="62.1244%" y="575.50">core::iter::..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (668 samples, 8.51%)</title><rect x="61.8872%" y="549" width="8.5063%" height="15" fill="rgb(254,36,13)" fg:x="4860" fg:w="668"/><text x="62.1372%" y="559.50">&lt;core::ops::..</text></g><g><title>core::mem::replace (454 samples, 5.78%)</title><rect x="64.6123%" y="533" width="5.7812%" height="15" fill="rgb(248,14,50)" fg:x="5074" fg:w="454"/><text x="64.8623%" y="543.50">core::m..</text></g><g><title>core::ptr::read (107 samples, 1.36%)</title><rect x="69.0309%" y="517" width="1.3625%" height="15" fill="rgb(217,107,29)" fg:x="5421" fg:w="107"/><text x="69.2809%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (148 samples, 1.88%)</title><rect x="70.3935%" y="565" width="1.8846%" height="15" fill="rgb(251,169,33)" fg:x="5528" fg:w="148"/><text x="70.6435%" y="575.50">c..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (13 samples, 0.17%)</title><rect x="72.1126%" y="549" width="0.1655%" height="15" fill="rgb(217,108,32)" fg:x="5663" fg:w="13"/><text x="72.3626%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (180 samples, 2.29%)</title><rect x="72.2781%" y="565" width="2.2921%" height="15" fill="rgb(219,66,42)" fg:x="5676" fg:w="180"/><text x="72.5281%" y="575.50">c..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (167 samples, 2.13%)</title><rect x="72.4437%" y="549" width="2.1266%" height="15" fill="rgb(206,180,7)" fg:x="5689" fg:w="167"/><text x="72.6937%" y="559.50">c..</text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.04%)</title><rect x="74.5320%" y="533" width="0.0382%" height="15" fill="rgb(208,226,31)" fg:x="5853" fg:w="3"/><text x="74.7820%" y="543.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.04%)</title><rect x="74.5320%" y="517" width="0.0382%" height="15" fill="rgb(218,26,49)" fg:x="5853" fg:w="3"/><text x="74.7820%" y="527.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.04%)</title><rect x="74.5320%" y="501" width="0.0382%" height="15" fill="rgb(233,197,48)" fg:x="5853" fg:w="3"/><text x="74.7820%" y="511.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.04%)</title><rect x="74.5320%" y="485" width="0.0382%" height="15" fill="rgb(252,181,51)" fg:x="5853" fg:w="3"/><text x="74.7820%" y="495.50"></text></g><g><title>run_timer_softirq (3 samples, 0.04%)</title><rect x="74.5320%" y="469" width="0.0382%" height="15" fill="rgb(253,90,19)" fg:x="5853" fg:w="3"/><text x="74.7820%" y="479.50"></text></g><g><title>__run_timers.part.0 (3 samples, 0.04%)</title><rect x="74.5320%" y="453" width="0.0382%" height="15" fill="rgb(215,171,30)" fg:x="5853" fg:w="3"/><text x="74.7820%" y="463.50"></text></g><g><title>call_timer_fn (3 samples, 0.04%)</title><rect x="74.5320%" y="437" width="0.0382%" height="15" fill="rgb(214,222,9)" fg:x="5853" fg:w="3"/><text x="74.7820%" y="447.50"></text></g><g><title>vbg_heartbeat_timer (3 samples, 0.04%)</title><rect x="74.5320%" y="421" width="0.0382%" height="15" fill="rgb(223,3,22)" fg:x="5853" fg:w="3"/><text x="74.7820%" y="431.50"></text></g><g><title>vbg_req_perform (3 samples, 0.04%)</title><rect x="74.5320%" y="405" width="0.0382%" height="15" fill="rgb(225,196,46)" fg:x="5853" fg:w="3"/><text x="74.7820%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (43 samples, 0.55%)</title><rect x="74.5702%" y="565" width="0.5476%" height="15" fill="rgb(209,110,37)" fg:x="5856" fg:w="43"/><text x="74.8202%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (35 samples, 0.45%)</title><rect x="74.6721%" y="549" width="0.4457%" height="15" fill="rgb(249,89,12)" fg:x="5864" fg:w="35"/><text x="74.9221%" y="559.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="75.1178%" y="565" width="0.0127%" height="15" fill="rgb(226,27,33)" fg:x="5899" fg:w="1"/><text x="75.3678%" y="575.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="75.1687%" y="549" width="0.0127%" height="15" fill="rgb(213,82,22)" fg:x="5903" fg:w="1"/><text x="75.4187%" y="559.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="75.1687%" y="533" width="0.0127%" height="15" fill="rgb(248,140,0)" fg:x="5903" fg:w="1"/><text x="75.4187%" y="543.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="75.1687%" y="517" width="0.0127%" height="15" fill="rgb(228,106,3)" fg:x="5903" fg:w="1"/><text x="75.4187%" y="527.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="75.1687%" y="501" width="0.0127%" height="15" fill="rgb(209,23,37)" fg:x="5903" fg:w="1"/><text x="75.4187%" y="511.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="75.1687%" y="485" width="0.0127%" height="15" fill="rgb(241,93,50)" fg:x="5903" fg:w="1"/><text x="75.4187%" y="495.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="75.1687%" y="469" width="0.0127%" height="15" fill="rgb(253,46,43)" fg:x="5903" fg:w="1"/><text x="75.4187%" y="479.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="75.1687%" y="453" width="0.0127%" height="15" fill="rgb(226,206,43)" fg:x="5903" fg:w="1"/><text x="75.4187%" y="463.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="75.1687%" y="437" width="0.0127%" height="15" fill="rgb(217,54,7)" fg:x="5903" fg:w="1"/><text x="75.4187%" y="447.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="75.1687%" y="421" width="0.0127%" height="15" fill="rgb(223,5,52)" fg:x="5903" fg:w="1"/><text x="75.4187%" y="431.50"></text></g><g><title>core::ptr::swap (7 samples, 0.09%)</title><rect x="75.1305%" y="565" width="0.0891%" height="15" fill="rgb(206,52,46)" fg:x="5900" fg:w="7"/><text x="75.3805%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.04%)</title><rect x="75.1815%" y="549" width="0.0382%" height="15" fill="rgb(253,136,11)" fg:x="5904" fg:w="3"/><text x="75.4315%" y="559.50"></text></g><g><title>core::slice::sort::partition (1,327 samples, 16.90%)</title><rect x="58.3853%" y="597" width="16.8980%" height="15" fill="rgb(208,106,33)" fg:x="4585" fg:w="1327"/><text x="58.6353%" y="607.50">core::slice::sort::partiti..</text></g><g><title>core::slice::sort::partition_in_blocks (1,316 samples, 16.76%)</title><rect x="58.5254%" y="581" width="16.7579%" height="15" fill="rgb(206,54,4)" fg:x="4596" fg:w="1316"/><text x="58.7754%" y="591.50">core::slice::sort::partiti..</text></g><g><title>core::slice::sort::partition_in_blocks::width (5 samples, 0.06%)</title><rect x="75.2197%" y="565" width="0.0637%" height="15" fill="rgb(213,3,15)" fg:x="5907" fg:w="5"/><text x="75.4697%" y="575.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.04%)</title><rect x="75.5125%" y="581" width="0.0382%" height="15" fill="rgb(252,211,39)" fg:x="5930" fg:w="3"/><text x="75.7625%" y="591.50"></text></g><g><title>core::ptr::swap (2 samples, 0.03%)</title><rect x="75.5507%" y="581" width="0.0255%" height="15" fill="rgb(223,6,36)" fg:x="5933" fg:w="2"/><text x="75.8007%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="75.5635%" y="565" width="0.0127%" height="15" fill="rgb(252,169,45)" fg:x="5934" fg:w="1"/><text x="75.8135%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (2 samples, 0.03%)</title><rect x="75.5762%" y="581" width="0.0255%" height="15" fill="rgb(212,48,26)" fg:x="5935" fg:w="2"/><text x="75.8262%" y="591.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.03%)</title><rect x="75.5762%" y="565" width="0.0255%" height="15" fill="rgb(251,102,48)" fg:x="5935" fg:w="2"/><text x="75.8262%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="75.5889%" y="549" width="0.0127%" height="15" fill="rgb(243,208,16)" fg:x="5936" fg:w="1"/><text x="75.8389%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="75.5889%" y="533" width="0.0127%" height="15" fill="rgb(219,96,24)" fg:x="5936" fg:w="1"/><text x="75.8389%" y="543.50"></text></g><g><title>core::slice::sort::partition_equal (26 samples, 0.33%)</title><rect x="75.2833%" y="597" width="0.3311%" height="15" fill="rgb(219,33,29)" fg:x="5912" fg:w="26"/><text x="75.5333%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (1 samples, 0.01%)</title><rect x="75.6017%" y="581" width="0.0127%" height="15" fill="rgb(223,176,5)" fg:x="5937" fg:w="1"/><text x="75.8517%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (1 samples, 0.01%)</title><rect x="75.6017%" y="565" width="0.0127%" height="15" fill="rgb(228,140,14)" fg:x="5937" fg:w="1"/><text x="75.8517%" y="575.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.01%)</title><rect x="75.6017%" y="549" width="0.0127%" height="15" fill="rgb(217,179,31)" fg:x="5937" fg:w="1"/><text x="75.8517%" y="559.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.01%)</title><rect x="75.6017%" y="533" width="0.0127%" height="15" fill="rgb(230,9,30)" fg:x="5937" fg:w="1"/><text x="75.8517%" y="543.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.01%)</title><rect x="75.6017%" y="517" width="0.0127%" height="15" fill="rgb(230,136,20)" fg:x="5937" fg:w="1"/><text x="75.8517%" y="527.50"></text></g><g><title>core::cmp::min (3 samples, 0.04%)</title><rect x="75.6271%" y="581" width="0.0382%" height="15" fill="rgb(215,210,22)" fg:x="5939" fg:w="3"/><text x="75.8771%" y="591.50"></text></g><g><title>core::cmp::Ord::min (3 samples, 0.04%)</title><rect x="75.6271%" y="565" width="0.0382%" height="15" fill="rgb(218,43,5)" fg:x="5939" fg:w="3"/><text x="75.8771%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="75.6654%" y="549" width="0.0127%" height="15" fill="rgb(216,11,5)" fg:x="5942" fg:w="1"/><text x="75.9154%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="75.6654%" y="533" width="0.0127%" height="15" fill="rgb(209,82,29)" fg:x="5942" fg:w="1"/><text x="75.9154%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (4 samples, 0.05%)</title><rect x="75.6654%" y="581" width="0.0509%" height="15" fill="rgb(244,115,12)" fg:x="5942" fg:w="4"/><text x="75.9154%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (4 samples, 0.05%)</title><rect x="75.6654%" y="565" width="0.0509%" height="15" fill="rgb(222,82,18)" fg:x="5942" fg:w="4"/><text x="75.9154%" y="575.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (3 samples, 0.04%)</title><rect x="75.6781%" y="549" width="0.0382%" height="15" fill="rgb(249,227,8)" fg:x="5943" fg:w="3"/><text x="75.9281%" y="559.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (3 samples, 0.04%)</title><rect x="75.6781%" y="533" width="0.0382%" height="15" fill="rgb(253,141,45)" fg:x="5943" fg:w="3"/><text x="75.9281%" y="543.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.03%)</title><rect x="75.6908%" y="517" width="0.0255%" height="15" fill="rgb(234,184,4)" fg:x="5944" fg:w="2"/><text x="75.9408%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.01%)</title><rect x="75.7163%" y="581" width="0.0127%" height="15" fill="rgb(218,194,23)" fg:x="5946" fg:w="1"/><text x="75.9663%" y="591.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="75.7163%" y="565" width="0.0127%" height="15" fill="rgb(235,66,41)" fg:x="5946" fg:w="1"/><text x="75.9663%" y="575.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="75.7163%" y="549" width="0.0127%" height="15" fill="rgb(245,217,1)" fg:x="5946" fg:w="1"/><text x="75.9663%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="75.7163%" y="533" width="0.0127%" height="15" fill="rgb(229,91,1)" fg:x="5946" fg:w="1"/><text x="75.9663%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (3 samples, 0.04%)</title><rect x="75.9200%" y="533" width="0.0382%" height="15" fill="rgb(207,101,30)" fg:x="5962" fg:w="3"/><text x="76.1700%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="75.9455%" y="517" width="0.0127%" height="15" fill="rgb(223,82,49)" fg:x="5964" fg:w="1"/><text x="76.1955%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="75.9455%" y="501" width="0.0127%" height="15" fill="rgb(218,167,17)" fg:x="5964" fg:w="1"/><text x="76.1955%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="75.9455%" y="485" width="0.0127%" height="15" fill="rgb(208,103,14)" fg:x="5964" fg:w="1"/><text x="76.1955%" y="495.50"></text></g><g><title>core::ops::function::FnMut::call_mut (12 samples, 0.15%)</title><rect x="76.0219%" y="517" width="0.1528%" height="15" fill="rgb(238,20,8)" fg:x="5970" fg:w="12"/><text x="76.2719%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (2 samples, 0.03%)</title><rect x="76.1492%" y="501" width="0.0255%" height="15" fill="rgb(218,80,54)" fg:x="5980" fg:w="2"/><text x="76.3992%" y="511.50"></text></g><g><title>core::ptr::swap (1 samples, 0.01%)</title><rect x="76.1747%" y="517" width="0.0127%" height="15" fill="rgb(240,144,17)" fg:x="5982" fg:w="1"/><text x="76.4247%" y="527.50"></text></g><g><title>core::slice::sort::choose_pivot (39 samples, 0.50%)</title><rect x="75.7290%" y="581" width="0.4966%" height="15" fill="rgb(245,27,50)" fg:x="5947" fg:w="39"/><text x="75.9790%" y="591.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (35 samples, 0.45%)</title><rect x="75.7800%" y="565" width="0.4457%" height="15" fill="rgb(251,51,7)" fg:x="5951" fg:w="35"/><text x="76.0300%" y="575.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (33 samples, 0.42%)</title><rect x="75.8054%" y="549" width="0.4202%" height="15" fill="rgb(245,217,29)" fg:x="5953" fg:w="33"/><text x="76.0554%" y="559.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (21 samples, 0.27%)</title><rect x="75.9582%" y="533" width="0.2674%" height="15" fill="rgb(221,176,29)" fg:x="5965" fg:w="21"/><text x="76.2082%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (3 samples, 0.04%)</title><rect x="76.1874%" y="517" width="0.0382%" height="15" fill="rgb(212,180,24)" fg:x="5983" fg:w="3"/><text x="76.4374%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.03%)</title><rect x="76.2002%" y="501" width="0.0255%" height="15" fill="rgb(254,24,2)" fg:x="5984" fg:w="2"/><text x="76.4502%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.03%)</title><rect x="76.2002%" y="485" width="0.0255%" height="15" fill="rgb(230,100,2)" fg:x="5984" fg:w="2"/><text x="76.4502%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.03%)</title><rect x="76.2002%" y="469" width="0.0255%" height="15" fill="rgb(219,142,25)" fg:x="5984" fg:w="2"/><text x="76.4502%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.04%)</title><rect x="76.2256%" y="565" width="0.0382%" height="15" fill="rgb(240,73,43)" fg:x="5986" fg:w="3"/><text x="76.4756%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.03%)</title><rect x="76.2384%" y="549" width="0.0255%" height="15" fill="rgb(214,114,15)" fg:x="5987" fg:w="2"/><text x="76.4884%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="76.3148%" y="549" width="0.0382%" height="15" fill="rgb(207,130,4)" fg:x="5993" fg:w="3"/><text x="76.5648%" y="559.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (2 samples, 0.03%)</title><rect x="76.3275%" y="533" width="0.0255%" height="15" fill="rgb(221,25,40)" fg:x="5994" fg:w="2"/><text x="76.5775%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.01%)</title><rect x="76.3403%" y="517" width="0.0127%" height="15" fill="rgb(241,184,7)" fg:x="5995" fg:w="1"/><text x="76.5903%" y="527.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (1 samples, 0.01%)</title><rect x="76.3403%" y="501" width="0.0127%" height="15" fill="rgb(235,159,4)" fg:x="5995" fg:w="1"/><text x="76.5903%" y="511.50"></text></g><g><title>core::slice::sort::insertion_sort (11 samples, 0.14%)</title><rect x="76.2256%" y="581" width="0.1401%" height="15" fill="rgb(214,87,48)" fg:x="5986" fg:w="11"/><text x="76.4756%" y="591.50"></text></g><g><title>core::slice::sort::shift_tail (8 samples, 0.10%)</title><rect x="76.2638%" y="565" width="0.1019%" height="15" fill="rgb(246,198,24)" fg:x="5989" fg:w="8"/><text x="76.5138%" y="575.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="76.3530%" y="549" width="0.0127%" height="15" fill="rgb(209,66,40)" fg:x="5996" fg:w="1"/><text x="76.6030%" y="559.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4 samples, 0.05%)</title><rect x="76.4549%" y="565" width="0.0509%" height="15" fill="rgb(233,147,39)" fg:x="6004" fg:w="4"/><text x="76.7049%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="76.5058%" y="565" width="0.0127%" height="15" fill="rgb(231,145,52)" fg:x="6008" fg:w="1"/><text x="76.7558%" y="575.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="76.5058%" y="549" width="0.0127%" height="15" fill="rgb(206,20,26)" fg:x="6008" fg:w="1"/><text x="76.7558%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="76.5058%" y="533" width="0.0127%" height="15" fill="rgb(238,220,4)" fg:x="6008" fg:w="1"/><text x="76.7558%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="76.5058%" y="517" width="0.0127%" height="15" fill="rgb(252,195,42)" fg:x="6008" fg:w="1"/><text x="76.7558%" y="527.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (13 samples, 0.17%)</title><rect x="76.3657%" y="581" width="0.1655%" height="15" fill="rgb(209,10,6)" fg:x="5997" fg:w="13"/><text x="76.6157%" y="591.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.01%)</title><rect x="76.5185%" y="565" width="0.0127%" height="15" fill="rgb(229,3,52)" fg:x="6009" fg:w="1"/><text x="76.7685%" y="575.50"></text></g><g><title>core::ops::function::FnMut::call_mut (5 samples, 0.06%)</title><rect x="76.6331%" y="565" width="0.0637%" height="15" fill="rgb(253,49,37)" fg:x="6018" fg:w="5"/><text x="76.8831%" y="575.50"></text></g><g><title>core::ptr::read (2 samples, 0.03%)</title><rect x="76.6968%" y="565" width="0.0255%" height="15" fill="rgb(240,103,49)" fg:x="6023" fg:w="2"/><text x="76.9468%" y="575.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.01%)</title><rect x="76.7095%" y="549" width="0.0127%" height="15" fill="rgb(250,182,30)" fg:x="6024" fg:w="1"/><text x="76.9595%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.01%)</title><rect x="76.7223%" y="565" width="0.0127%" height="15" fill="rgb(248,8,30)" fg:x="6025" fg:w="1"/><text x="76.9723%" y="575.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.03%)</title><rect x="76.7350%" y="565" width="0.0255%" height="15" fill="rgb(237,120,30)" fg:x="6026" fg:w="2"/><text x="76.9850%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.03%)</title><rect x="76.7350%" y="549" width="0.0255%" height="15" fill="rgb(221,146,34)" fg:x="6026" fg:w="2"/><text x="76.9850%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="78.8870%" y="549" width="0.0127%" height="15" fill="rgb(242,55,13)" fg:x="6195" fg:w="1"/><text x="79.1370%" y="559.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.04%)</title><rect x="78.8998%" y="549" width="0.0382%" height="15" fill="rgb(242,112,31)" fg:x="6196" fg:w="3"/><text x="79.1498%" y="559.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.04%)</title><rect x="78.8998%" y="533" width="0.0382%" height="15" fill="rgb(249,192,27)" fg:x="6196" fg:w="3"/><text x="79.1498%" y="543.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.04%)</title><rect x="78.8998%" y="517" width="0.0382%" height="15" fill="rgb(208,204,44)" fg:x="6196" fg:w="3"/><text x="79.1498%" y="527.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.04%)</title><rect x="78.8998%" y="501" width="0.0382%" height="15" fill="rgb(208,93,54)" fg:x="6196" fg:w="3"/><text x="79.1498%" y="511.50"></text></g><g><title>run_timer_softirq (2 samples, 0.03%)</title><rect x="78.9125%" y="485" width="0.0255%" height="15" fill="rgb(242,1,31)" fg:x="6197" fg:w="2"/><text x="79.1625%" y="495.50"></text></g><g><title>__run_timers.part.0 (2 samples, 0.03%)</title><rect x="78.9125%" y="469" width="0.0255%" height="15" fill="rgb(241,83,25)" fg:x="6197" fg:w="2"/><text x="79.1625%" y="479.50"></text></g><g><title>call_timer_fn (2 samples, 0.03%)</title><rect x="78.9125%" y="453" width="0.0255%" height="15" fill="rgb(205,169,50)" fg:x="6197" fg:w="2"/><text x="79.1625%" y="463.50"></text></g><g><title>vbg_heartbeat_timer (2 samples, 0.03%)</title><rect x="78.9125%" y="437" width="0.0255%" height="15" fill="rgb(239,186,37)" fg:x="6197" fg:w="2"/><text x="79.1625%" y="447.50"></text></g><g><title>vbg_req_perform (2 samples, 0.03%)</title><rect x="78.9125%" y="421" width="0.0255%" height="15" fill="rgb(205,221,10)" fg:x="6197" fg:w="2"/><text x="79.1625%" y="431.50"></text></g><g><title>core::cmp::min (6 samples, 0.08%)</title><rect x="78.9380%" y="549" width="0.0764%" height="15" fill="rgb(218,196,15)" fg:x="6199" fg:w="6"/><text x="79.1880%" y="559.50"></text></g><g><title>core::cmp::Ord::min (6 samples, 0.08%)</title><rect x="78.9380%" y="533" width="0.0764%" height="15" fill="rgb(218,196,35)" fg:x="6199" fg:w="6"/><text x="79.1880%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (3 samples, 0.04%)</title><rect x="78.9762%" y="517" width="0.0382%" height="15" fill="rgb(233,63,24)" fg:x="6202" fg:w="3"/><text x="79.2262%" y="527.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u8&gt; for usize&gt;::from (1 samples, 0.01%)</title><rect x="79.0144%" y="549" width="0.0127%" height="15" fill="rgb(225,8,4)" fg:x="6205" fg:w="1"/><text x="79.2644%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.10%)</title><rect x="79.0271%" y="549" width="0.1019%" height="15" fill="rgb(234,105,35)" fg:x="6206" fg:w="8"/><text x="79.2771%" y="559.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="80.7080%" y="501" width="0.0127%" height="15" fill="rgb(236,21,32)" fg:x="6338" fg:w="1"/><text x="80.9580%" y="511.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="80.7080%" y="485" width="0.0127%" height="15" fill="rgb(228,109,6)" fg:x="6338" fg:w="1"/><text x="80.9580%" y="495.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="80.7080%" y="469" width="0.0127%" height="15" fill="rgb(229,215,31)" fg:x="6338" fg:w="1"/><text x="80.9580%" y="479.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="80.7080%" y="453" width="0.0127%" height="15" fill="rgb(221,52,54)" fg:x="6338" fg:w="1"/><text x="80.9580%" y="463.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (14 samples, 0.18%)</title><rect x="80.5552%" y="517" width="0.1783%" height="15" fill="rgb(252,129,43)" fg:x="6326" fg:w="14"/><text x="80.8052%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.01%)</title><rect x="80.7207%" y="501" width="0.0127%" height="15" fill="rgb(248,183,27)" fg:x="6339" fg:w="1"/><text x="80.9707%" y="511.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="80.7335%" y="517" width="0.0127%" height="15" fill="rgb(250,0,22)" fg:x="6340" fg:w="1"/><text x="80.9835%" y="527.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="80.7335%" y="501" width="0.0127%" height="15" fill="rgb(213,166,10)" fg:x="6340" fg:w="1"/><text x="80.9835%" y="511.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="80.7335%" y="485" width="0.0127%" height="15" fill="rgb(207,163,36)" fg:x="6340" fg:w="1"/><text x="80.9835%" y="495.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="80.7335%" y="469" width="0.0127%" height="15" fill="rgb(208,122,22)" fg:x="6340" fg:w="1"/><text x="80.9835%" y="479.50"></text></g><g><title>blk_done_softirq (1 samples, 0.01%)</title><rect x="80.7335%" y="453" width="0.0127%" height="15" fill="rgb(207,104,49)" fg:x="6340" fg:w="1"/><text x="80.9835%" y="463.50"></text></g><g><title>blk_complete_reqs (1 samples, 0.01%)</title><rect x="80.7335%" y="437" width="0.0127%" height="15" fill="rgb(248,211,50)" fg:x="6340" fg:w="1"/><text x="80.9835%" y="447.50"></text></g><g><title>scsi_complete (1 samples, 0.01%)</title><rect x="80.7335%" y="421" width="0.0127%" height="15" fill="rgb(217,13,45)" fg:x="6340" fg:w="1"/><text x="80.9835%" y="431.50"></text></g><g><title>scsi_finish_command (1 samples, 0.01%)</title><rect x="80.7335%" y="405" width="0.0127%" height="15" fill="rgb(211,216,49)" fg:x="6340" fg:w="1"/><text x="80.9835%" y="415.50"></text></g><g><title>scsi_device_unbusy (1 samples, 0.01%)</title><rect x="80.7335%" y="389" width="0.0127%" height="15" fill="rgb(221,58,53)" fg:x="6340" fg:w="1"/><text x="80.9835%" y="399.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="80.7462%" y="517" width="0.0127%" height="15" fill="rgb(220,112,41)" fg:x="6341" fg:w="1"/><text x="80.9962%" y="527.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="80.7462%" y="501" width="0.0127%" height="15" fill="rgb(236,38,28)" fg:x="6341" fg:w="1"/><text x="80.9962%" y="511.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="80.7462%" y="485" width="0.0127%" height="15" fill="rgb(227,195,22)" fg:x="6341" fg:w="1"/><text x="80.9962%" y="495.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="80.7462%" y="469" width="0.0127%" height="15" fill="rgb(214,55,33)" fg:x="6341" fg:w="1"/><text x="80.9962%" y="479.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="80.7462%" y="453" width="0.0127%" height="15" fill="rgb(248,80,13)" fg:x="6341" fg:w="1"/><text x="80.9962%" y="463.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="80.7462%" y="437" width="0.0127%" height="15" fill="rgb(238,52,6)" fg:x="6341" fg:w="1"/><text x="80.9962%" y="447.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="80.7462%" y="421" width="0.0127%" height="15" fill="rgb(224,198,47)" fg:x="6341" fg:w="1"/><text x="80.9962%" y="431.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="80.7462%" y="405" width="0.0127%" height="15" fill="rgb(233,171,20)" fg:x="6341" fg:w="1"/><text x="80.9962%" y="415.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="80.7462%" y="389" width="0.0127%" height="15" fill="rgb(241,30,25)" fg:x="6341" fg:w="1"/><text x="80.9962%" y="399.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (3 samples, 0.04%)</title><rect x="80.7589%" y="517" width="0.0382%" height="15" fill="rgb(207,171,38)" fg:x="6342" fg:w="3"/><text x="81.0089%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (14 samples, 0.18%)</title><rect x="80.7971%" y="517" width="0.1783%" height="15" fill="rgb(234,70,1)" fg:x="6345" fg:w="14"/><text x="81.0471%" y="527.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="83.9170%" y="501" width="0.0255%" height="15" fill="rgb(232,178,18)" fg:x="6590" fg:w="2"/><text x="84.1670%" y="511.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="83.9170%" y="485" width="0.0255%" height="15" fill="rgb(241,78,40)" fg:x="6590" fg:w="2"/><text x="84.1670%" y="495.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.03%)</title><rect x="83.9170%" y="469" width="0.0255%" height="15" fill="rgb(222,35,25)" fg:x="6590" fg:w="2"/><text x="84.1670%" y="479.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="83.9170%" y="453" width="0.0255%" height="15" fill="rgb(207,92,16)" fg:x="6590" fg:w="2"/><text x="84.1670%" y="463.50"></text></g><g><title>run_timer_softirq (2 samples, 0.03%)</title><rect x="83.9170%" y="437" width="0.0255%" height="15" fill="rgb(216,59,51)" fg:x="6590" fg:w="2"/><text x="84.1670%" y="447.50"></text></g><g><title>__run_timers.part.0 (2 samples, 0.03%)</title><rect x="83.9170%" y="421" width="0.0255%" height="15" fill="rgb(213,80,28)" fg:x="6590" fg:w="2"/><text x="84.1670%" y="431.50"></text></g><g><title>call_timer_fn (2 samples, 0.03%)</title><rect x="83.9170%" y="405" width="0.0255%" height="15" fill="rgb(220,93,7)" fg:x="6590" fg:w="2"/><text x="84.1670%" y="415.50"></text></g><g><title>vbg_heartbeat_timer (2 samples, 0.03%)</title><rect x="83.9170%" y="389" width="0.0255%" height="15" fill="rgb(225,24,44)" fg:x="6590" fg:w="2"/><text x="84.1670%" y="399.50"></text></g><g><title>vbg_req_perform (2 samples, 0.03%)</title><rect x="83.9170%" y="373" width="0.0255%" height="15" fill="rgb(243,74,40)" fg:x="6590" fg:w="2"/><text x="84.1670%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (442 samples, 5.63%)</title><rect x="79.1290%" y="549" width="5.6284%" height="15" fill="rgb(228,39,7)" fg:x="6214" fg:w="442"/><text x="79.3790%" y="559.50">core::i..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (439 samples, 5.59%)</title><rect x="79.1672%" y="533" width="5.5902%" height="15" fill="rgb(227,79,8)" fg:x="6217" fg:w="439"/><text x="79.4172%" y="543.50">&lt;core::..</text></g><g><title>core::mem::replace (297 samples, 3.78%)</title><rect x="80.9754%" y="517" width="3.7820%" height="15" fill="rgb(236,58,11)" fg:x="6359" fg:w="297"/><text x="81.2254%" y="527.50">core..</text></g><g><title>core::ptr::read (64 samples, 0.81%)</title><rect x="83.9424%" y="501" width="0.8150%" height="15" fill="rgb(249,63,35)" fg:x="6592" fg:w="64"/><text x="84.1924%" y="511.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="84.7319%" y="485" width="0.0255%" height="15" fill="rgb(252,114,16)" fg:x="6654" fg:w="2"/><text x="84.9819%" y="495.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="84.7319%" y="469" width="0.0255%" height="15" fill="rgb(254,151,24)" fg:x="6654" fg:w="2"/><text x="84.9819%" y="479.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.03%)</title><rect x="84.7319%" y="453" width="0.0255%" height="15" fill="rgb(253,54,39)" fg:x="6654" fg:w="2"/><text x="84.9819%" y="463.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="84.7319%" y="437" width="0.0255%" height="15" fill="rgb(243,25,45)" fg:x="6654" fg:w="2"/><text x="84.9819%" y="447.50"></text></g><g><title>run_timer_softirq (2 samples, 0.03%)</title><rect x="84.7319%" y="421" width="0.0255%" height="15" fill="rgb(234,134,9)" fg:x="6654" fg:w="2"/><text x="84.9819%" y="431.50"></text></g><g><title>__run_timers.part.0 (2 samples, 0.03%)</title><rect x="84.7319%" y="405" width="0.0255%" height="15" fill="rgb(227,166,31)" fg:x="6654" fg:w="2"/><text x="84.9819%" y="415.50"></text></g><g><title>call_timer_fn (2 samples, 0.03%)</title><rect x="84.7319%" y="389" width="0.0255%" height="15" fill="rgb(245,143,41)" fg:x="6654" fg:w="2"/><text x="84.9819%" y="399.50"></text></g><g><title>vbg_heartbeat_timer (2 samples, 0.03%)</title><rect x="84.7319%" y="373" width="0.0255%" height="15" fill="rgb(238,181,32)" fg:x="6654" fg:w="2"/><text x="84.9819%" y="383.50"></text></g><g><title>vbg_req_perform (2 samples, 0.03%)</title><rect x="84.7319%" y="357" width="0.0255%" height="15" fill="rgb(224,113,18)" fg:x="6654" fg:w="2"/><text x="84.9819%" y="367.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::slice_as_mut_ptr (1 samples, 0.01%)</title><rect x="84.7574%" y="549" width="0.0127%" height="15" fill="rgb(240,229,28)" fg:x="6656" fg:w="1"/><text x="85.0074%" y="559.50"></text></g><g><title>core::ops::function::FnMut::call_mut (101 samples, 1.29%)</title><rect x="84.7702%" y="549" width="1.2861%" height="15" fill="rgb(250,185,3)" fg:x="6657" fg:w="101"/><text x="85.0202%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (5 samples, 0.06%)</title><rect x="85.9926%" y="533" width="0.0637%" height="15" fill="rgb(212,59,25)" fg:x="6753" fg:w="5"/><text x="86.2426%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (129 samples, 1.64%)</title><rect x="86.0563%" y="549" width="1.6427%" height="15" fill="rgb(221,87,20)" fg:x="6758" fg:w="129"/><text x="86.3063%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (115 samples, 1.46%)</title><rect x="86.2346%" y="533" width="1.4644%" height="15" fill="rgb(213,74,28)" fg:x="6772" fg:w="115"/><text x="86.4846%" y="543.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (2 samples, 0.03%)</title><rect x="87.7626%" y="533" width="0.0255%" height="15" fill="rgb(224,132,34)" fg:x="6892" fg:w="2"/><text x="88.0126%" y="543.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (2 samples, 0.03%)</title><rect x="87.7626%" y="517" width="0.0255%" height="15" fill="rgb(222,101,24)" fg:x="6892" fg:w="2"/><text x="88.0126%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (29 samples, 0.37%)</title><rect x="87.6990%" y="549" width="0.3693%" height="15" fill="rgb(254,142,4)" fg:x="6887" fg:w="29"/><text x="87.9490%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (22 samples, 0.28%)</title><rect x="87.7881%" y="533" width="0.2801%" height="15" fill="rgb(230,229,49)" fg:x="6894" fg:w="22"/><text x="88.0381%" y="543.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.03%)</title><rect x="88.0683%" y="533" width="0.0255%" height="15" fill="rgb(238,70,47)" fg:x="6916" fg:w="2"/><text x="88.3183%" y="543.50"></text></g><g><title>core::ptr::swap (3 samples, 0.04%)</title><rect x="88.0683%" y="549" width="0.0382%" height="15" fill="rgb(231,160,17)" fg:x="6916" fg:w="3"/><text x="88.3183%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="88.0937%" y="533" width="0.0127%" height="15" fill="rgb(218,68,53)" fg:x="6918" fg:w="1"/><text x="88.3437%" y="543.50"></text></g><g><title>core::slice::sort::partition (914 samples, 11.64%)</title><rect x="76.5313%" y="581" width="11.6389%" height="15" fill="rgb(236,111,10)" fg:x="6010" fg:w="914"/><text x="76.7813%" y="591.50">core::slice::sort..</text></g><g><title>core::slice::sort::partition_in_blocks (896 samples, 11.41%)</title><rect x="76.7605%" y="565" width="11.4097%" height="15" fill="rgb(224,34,41)" fg:x="6028" fg:w="896"/><text x="77.0105%" y="575.50">core::slice::sort..</text></g><g><title>core::slice::sort::partition_in_blocks::width (5 samples, 0.06%)</title><rect x="88.1065%" y="549" width="0.0637%" height="15" fill="rgb(241,118,19)" fg:x="6919" fg:w="5"/><text x="88.3565%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (1 samples, 0.01%)</title><rect x="88.1574%" y="533" width="0.0127%" height="15" fill="rgb(238,129,25)" fg:x="6923" fg:w="1"/><text x="88.4074%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (14 samples, 0.18%)</title><rect x="88.6031%" y="565" width="0.1783%" height="15" fill="rgb(238,22,31)" fg:x="6958" fg:w="14"/><text x="88.8531%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (4 samples, 0.05%)</title><rect x="88.7304%" y="549" width="0.0509%" height="15" fill="rgb(222,174,48)" fg:x="6968" fg:w="4"/><text x="88.9804%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="88.7814%" y="565" width="0.0127%" height="15" fill="rgb(206,152,40)" fg:x="6972" fg:w="1"/><text x="89.0314%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="88.7814%" y="549" width="0.0127%" height="15" fill="rgb(218,99,54)" fg:x="6972" fg:w="1"/><text x="89.0314%" y="559.50"></text></g><g><title>core::ptr::swap (2 samples, 0.03%)</title><rect x="88.7941%" y="565" width="0.0255%" height="15" fill="rgb(220,174,26)" fg:x="6973" fg:w="2"/><text x="89.0441%" y="575.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.01%)</title><rect x="88.8068%" y="549" width="0.0127%" height="15" fill="rgb(245,116,9)" fg:x="6974" fg:w="1"/><text x="89.0568%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.08%)</title><rect x="88.8196%" y="565" width="0.0764%" height="15" fill="rgb(209,72,35)" fg:x="6975" fg:w="6"/><text x="89.0696%" y="575.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.08%)</title><rect x="88.8196%" y="549" width="0.0764%" height="15" fill="rgb(226,126,21)" fg:x="6975" fg:w="6"/><text x="89.0696%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (4 samples, 0.05%)</title><rect x="88.8450%" y="533" width="0.0509%" height="15" fill="rgb(227,192,1)" fg:x="6977" fg:w="4"/><text x="89.0950%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (3 samples, 0.04%)</title><rect x="88.8578%" y="517" width="0.0382%" height="15" fill="rgb(237,180,29)" fg:x="6978" fg:w="3"/><text x="89.1078%" y="527.50"></text></g><g><title>core::slice::sort::partition_equal (58 samples, 0.74%)</title><rect x="88.1701%" y="581" width="0.7386%" height="15" fill="rgb(230,197,35)" fg:x="6924" fg:w="58"/><text x="88.4201%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (1 samples, 0.01%)</title><rect x="88.8960%" y="565" width="0.0127%" height="15" fill="rgb(246,193,31)" fg:x="6981" fg:w="1"/><text x="89.1460%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (1 samples, 0.01%)</title><rect x="88.8960%" y="549" width="0.0127%" height="15" fill="rgb(241,36,4)" fg:x="6981" fg:w="1"/><text x="89.1460%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="88.8960%" y="533" width="0.0127%" height="15" fill="rgb(241,130,17)" fg:x="6981" fg:w="1"/><text x="89.1460%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="88.8960%" y="517" width="0.0127%" height="15" fill="rgb(206,137,32)" fg:x="6981" fg:w="1"/><text x="89.1460%" y="527.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="88.9851%" y="565" width="0.0127%" height="15" fill="rgb(237,228,51)" fg:x="6988" fg:w="1"/><text x="89.2351%" y="575.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="88.9851%" y="549" width="0.0127%" height="15" fill="rgb(243,6,42)" fg:x="6988" fg:w="1"/><text x="89.2351%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (3 samples, 0.04%)</title><rect x="88.9978%" y="565" width="0.0382%" height="15" fill="rgb(251,74,28)" fg:x="6989" fg:w="3"/><text x="89.2478%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (2 samples, 0.03%)</title><rect x="89.0106%" y="549" width="0.0255%" height="15" fill="rgb(218,20,49)" fg:x="6990" fg:w="2"/><text x="89.2606%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="89.0233%" y="533" width="0.0127%" height="15" fill="rgb(238,28,14)" fg:x="6991" fg:w="1"/><text x="89.2733%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="89.0233%" y="517" width="0.0127%" height="15" fill="rgb(229,40,46)" fg:x="6991" fg:w="1"/><text x="89.2733%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.01%)</title><rect x="89.0360%" y="565" width="0.0127%" height="15" fill="rgb(244,195,20)" fg:x="6992" fg:w="1"/><text x="89.2860%" y="575.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="89.0360%" y="549" width="0.0127%" height="15" fill="rgb(253,56,35)" fg:x="6992" fg:w="1"/><text x="89.2860%" y="559.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="89.0360%" y="533" width="0.0127%" height="15" fill="rgb(210,149,44)" fg:x="6992" fg:w="1"/><text x="89.2860%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="89.0360%" y="517" width="0.0127%" height="15" fill="rgb(240,135,12)" fg:x="6992" fg:w="1"/><text x="89.2860%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="89.0360%" y="501" width="0.0127%" height="15" fill="rgb(251,24,50)" fg:x="6992" fg:w="1"/><text x="89.2860%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="89.0360%" y="485" width="0.0127%" height="15" fill="rgb(243,200,47)" fg:x="6992" fg:w="1"/><text x="89.2860%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="89.0488%" y="549" width="0.0127%" height="15" fill="rgb(224,166,26)" fg:x="6993" fg:w="1"/><text x="89.2988%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="89.0488%" y="533" width="0.0127%" height="15" fill="rgb(233,0,47)" fg:x="6993" fg:w="1"/><text x="89.2988%" y="543.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="89.0488%" y="517" width="0.0127%" height="15" fill="rgb(253,80,5)" fg:x="6993" fg:w="1"/><text x="89.2988%" y="527.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="89.0488%" y="501" width="0.0127%" height="15" fill="rgb(214,133,25)" fg:x="6993" fg:w="1"/><text x="89.2988%" y="511.50"></text></g><g><title>core::slice::sort::break_patterns (2 samples, 0.03%)</title><rect x="89.0488%" y="565" width="0.0255%" height="15" fill="rgb(209,27,14)" fg:x="6993" fg:w="2"/><text x="89.2988%" y="575.50"></text></g><g><title>core::slice::sort::break_patterns::{{closure}} (1 samples, 0.01%)</title><rect x="89.0615%" y="549" width="0.0127%" height="15" fill="rgb(219,102,51)" fg:x="6994" fg:w="1"/><text x="89.3115%" y="559.50"></text></g><g><title>core::slice::sort::break_patterns::{{closure}} (1 samples, 0.01%)</title><rect x="89.0615%" y="533" width="0.0127%" height="15" fill="rgb(237,18,16)" fg:x="6994" fg:w="1"/><text x="89.3115%" y="543.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="89.0997%" y="549" width="0.0127%" height="15" fill="rgb(241,85,17)" fg:x="6997" fg:w="1"/><text x="89.3497%" y="559.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="89.0997%" y="533" width="0.0127%" height="15" fill="rgb(236,90,42)" fg:x="6997" fg:w="1"/><text x="89.3497%" y="543.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="89.0997%" y="517" width="0.0127%" height="15" fill="rgb(249,57,21)" fg:x="6997" fg:w="1"/><text x="89.3497%" y="527.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="89.0997%" y="501" width="0.0127%" height="15" fill="rgb(243,12,36)" fg:x="6997" fg:w="1"/><text x="89.3497%" y="511.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="89.0997%" y="485" width="0.0127%" height="15" fill="rgb(253,128,47)" fg:x="6997" fg:w="1"/><text x="89.3497%" y="495.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="89.0997%" y="469" width="0.0127%" height="15" fill="rgb(207,33,20)" fg:x="6997" fg:w="1"/><text x="89.3497%" y="479.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="89.0997%" y="453" width="0.0127%" height="15" fill="rgb(233,215,35)" fg:x="6997" fg:w="1"/><text x="89.3497%" y="463.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="89.0997%" y="437" width="0.0127%" height="15" fill="rgb(249,188,52)" fg:x="6997" fg:w="1"/><text x="89.3497%" y="447.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="89.0997%" y="421" width="0.0127%" height="15" fill="rgb(225,12,32)" fg:x="6997" fg:w="1"/><text x="89.3497%" y="431.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.04%)</title><rect x="89.1761%" y="517" width="0.0382%" height="15" fill="rgb(247,98,14)" fg:x="7003" fg:w="3"/><text x="89.4261%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (1 samples, 0.01%)</title><rect x="89.2016%" y="501" width="0.0127%" height="15" fill="rgb(247,219,48)" fg:x="7005" fg:w="1"/><text x="89.4516%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (3 samples, 0.04%)</title><rect x="89.2143%" y="517" width="0.0382%" height="15" fill="rgb(253,60,48)" fg:x="7006" fg:w="3"/><text x="89.4643%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.04%)</title><rect x="89.2143%" y="501" width="0.0382%" height="15" fill="rgb(245,15,52)" fg:x="7006" fg:w="3"/><text x="89.4643%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.04%)</title><rect x="89.2143%" y="485" width="0.0382%" height="15" fill="rgb(220,133,28)" fg:x="7006" fg:w="3"/><text x="89.4643%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.03%)</title><rect x="89.2270%" y="469" width="0.0255%" height="15" fill="rgb(217,180,4)" fg:x="7007" fg:w="2"/><text x="89.4770%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (6 samples, 0.08%)</title><rect x="89.3162%" y="501" width="0.0764%" height="15" fill="rgb(251,24,1)" fg:x="7014" fg:w="6"/><text x="89.5662%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (1 samples, 0.01%)</title><rect x="89.3799%" y="485" width="0.0127%" height="15" fill="rgb(212,185,49)" fg:x="7019" fg:w="1"/><text x="89.6299%" y="495.50"></text></g><g><title>core::slice::sort::choose_pivot (30 samples, 0.38%)</title><rect x="89.0742%" y="565" width="0.3820%" height="15" fill="rgb(215,175,22)" fg:x="6995" fg:w="30"/><text x="89.3242%" y="575.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (27 samples, 0.34%)</title><rect x="89.1124%" y="549" width="0.3438%" height="15" fill="rgb(250,205,14)" fg:x="6998" fg:w="27"/><text x="89.3624%" y="559.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (27 samples, 0.34%)</title><rect x="89.1124%" y="533" width="0.3438%" height="15" fill="rgb(225,211,22)" fg:x="6998" fg:w="27"/><text x="89.3624%" y="543.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (16 samples, 0.20%)</title><rect x="89.2525%" y="517" width="0.2037%" height="15" fill="rgb(251,179,42)" fg:x="7009" fg:w="16"/><text x="89.5025%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.06%)</title><rect x="89.3926%" y="501" width="0.0637%" height="15" fill="rgb(208,216,51)" fg:x="7020" fg:w="5"/><text x="89.6426%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.06%)</title><rect x="89.3926%" y="485" width="0.0637%" height="15" fill="rgb(235,36,11)" fg:x="7020" fg:w="5"/><text x="89.6426%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (5 samples, 0.06%)</title><rect x="89.3926%" y="469" width="0.0637%" height="15" fill="rgb(213,189,28)" fg:x="7020" fg:w="5"/><text x="89.6426%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (3 samples, 0.04%)</title><rect x="89.4181%" y="453" width="0.0382%" height="15" fill="rgb(227,203,42)" fg:x="7022" fg:w="3"/><text x="89.6681%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.03%)</title><rect x="89.4563%" y="549" width="0.0255%" height="15" fill="rgb(244,72,36)" fg:x="7025" fg:w="2"/><text x="89.7063%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.03%)</title><rect x="89.4563%" y="533" width="0.0255%" height="15" fill="rgb(213,53,17)" fg:x="7025" fg:w="2"/><text x="89.7063%" y="543.50"></text></g><g><title>core::mem::replace (2 samples, 0.03%)</title><rect x="89.4563%" y="517" width="0.0255%" height="15" fill="rgb(207,167,3)" fg:x="7025" fg:w="2"/><text x="89.7063%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.03%)</title><rect x="89.4817%" y="549" width="0.0255%" height="15" fill="rgb(216,98,30)" fg:x="7027" fg:w="2"/><text x="89.7317%" y="559.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.03%)</title><rect x="89.4817%" y="533" width="0.0255%" height="15" fill="rgb(236,123,15)" fg:x="7027" fg:w="2"/><text x="89.7317%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.03%)</title><rect x="89.4817%" y="517" width="0.0255%" height="15" fill="rgb(248,81,50)" fg:x="7027" fg:w="2"/><text x="89.7317%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="89.4945%" y="501" width="0.0127%" height="15" fill="rgb(214,120,4)" fg:x="7028" fg:w="1"/><text x="89.7445%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="89.5199%" y="533" width="0.0127%" height="15" fill="rgb(208,179,34)" fg:x="7030" fg:w="1"/><text x="89.7699%" y="543.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.01%)</title><rect x="89.5199%" y="517" width="0.0127%" height="15" fill="rgb(227,140,7)" fg:x="7030" fg:w="1"/><text x="89.7699%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::rev (1 samples, 0.01%)</title><rect x="89.5327%" y="533" width="0.0127%" height="15" fill="rgb(214,22,6)" fg:x="7031" fg:w="1"/><text x="89.7827%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="89.5454%" y="533" width="0.0127%" height="15" fill="rgb(207,137,27)" fg:x="7032" fg:w="1"/><text x="89.7954%" y="543.50"></text></g><g><title>core::slice::sort::insertion_sort (9 samples, 0.11%)</title><rect x="89.4563%" y="565" width="0.1146%" height="15" fill="rgb(210,8,46)" fg:x="7025" fg:w="9"/><text x="89.7063%" y="575.50"></text></g><g><title>core::slice::sort::shift_tail (5 samples, 0.06%)</title><rect x="89.5072%" y="549" width="0.0637%" height="15" fill="rgb(240,16,54)" fg:x="7029" fg:w="5"/><text x="89.7572%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::CopyOnDrop&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="89.5581%" y="533" width="0.0127%" height="15" fill="rgb(211,209,29)" fg:x="7033" fg:w="1"/><text x="89.8081%" y="543.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="89.5581%" y="517" width="0.0127%" height="15" fill="rgb(226,228,24)" fg:x="7033" fg:w="1"/><text x="89.8081%" y="527.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="89.9529%" y="549" width="0.0127%" height="15" fill="rgb(222,84,9)" fg:x="7064" fg:w="1"/><text x="90.2029%" y="559.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="89.9529%" y="533" width="0.0127%" height="15" fill="rgb(234,203,30)" fg:x="7064" fg:w="1"/><text x="90.2029%" y="543.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="89.9529%" y="517" width="0.0127%" height="15" fill="rgb(238,109,14)" fg:x="7064" fg:w="1"/><text x="90.2029%" y="527.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="89.9529%" y="501" width="0.0127%" height="15" fill="rgb(233,206,34)" fg:x="7064" fg:w="1"/><text x="90.2029%" y="511.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="89.9529%" y="485" width="0.0127%" height="15" fill="rgb(220,167,47)" fg:x="7064" fg:w="1"/><text x="90.2029%" y="495.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="89.9529%" y="469" width="0.0127%" height="15" fill="rgb(238,105,10)" fg:x="7064" fg:w="1"/><text x="90.2029%" y="479.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="89.9529%" y="453" width="0.0127%" height="15" fill="rgb(213,227,17)" fg:x="7064" fg:w="1"/><text x="90.2029%" y="463.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="89.9529%" y="437" width="0.0127%" height="15" fill="rgb(217,132,38)" fg:x="7064" fg:w="1"/><text x="90.2029%" y="447.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="89.9529%" y="421" width="0.0127%" height="15" fill="rgb(242,146,4)" fg:x="7064" fg:w="1"/><text x="90.2029%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="89.9656%" y="549" width="0.0127%" height="15" fill="rgb(212,61,9)" fg:x="7065" fg:w="1"/><text x="90.2156%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="89.9656%" y="533" width="0.0127%" height="15" fill="rgb(247,126,22)" fg:x="7065" fg:w="1"/><text x="90.2156%" y="543.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="89.9656%" y="517" width="0.0127%" height="15" fill="rgb(220,196,2)" fg:x="7065" fg:w="1"/><text x="90.2156%" y="527.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="89.9656%" y="501" width="0.0127%" height="15" fill="rgb(208,46,4)" fg:x="7065" fg:w="1"/><text x="90.2156%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (10 samples, 0.13%)</title><rect x="89.9784%" y="549" width="0.1273%" height="15" fill="rgb(252,104,46)" fg:x="7066" fg:w="10"/><text x="90.2284%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (2 samples, 0.03%)</title><rect x="90.0802%" y="533" width="0.0255%" height="15" fill="rgb(237,152,48)" fg:x="7074" fg:w="2"/><text x="90.3302%" y="543.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (44 samples, 0.56%)</title><rect x="89.5709%" y="565" width="0.5603%" height="15" fill="rgb(221,59,37)" fg:x="7034" fg:w="44"/><text x="89.8209%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (2 samples, 0.03%)</title><rect x="90.1057%" y="549" width="0.0255%" height="15" fill="rgb(209,202,51)" fg:x="7076" fg:w="2"/><text x="90.3557%" y="559.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.03%)</title><rect x="90.1057%" y="533" width="0.0255%" height="15" fill="rgb(228,81,30)" fg:x="7076" fg:w="2"/><text x="90.3557%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.03%)</title><rect x="90.1057%" y="517" width="0.0255%" height="15" fill="rgb(227,42,39)" fg:x="7076" fg:w="2"/><text x="90.3557%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.03%)</title><rect x="90.1057%" y="501" width="0.0255%" height="15" fill="rgb(221,26,2)" fg:x="7076" fg:w="2"/><text x="90.3557%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.03%)</title><rect x="90.2203%" y="549" width="0.0255%" height="15" fill="rgb(254,61,31)" fg:x="7085" fg:w="2"/><text x="90.4703%" y="559.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="90.2458%" y="549" width="0.0127%" height="15" fill="rgb(222,173,38)" fg:x="7087" fg:w="1"/><text x="90.4958%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="90.2585%" y="549" width="0.0127%" height="15" fill="rgb(218,50,12)" fg:x="7088" fg:w="1"/><text x="90.5085%" y="559.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="90.2585%" y="533" width="0.0127%" height="15" fill="rgb(223,88,40)" fg:x="7088" fg:w="1"/><text x="90.5085%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (2 samples, 0.03%)</title><rect x="90.2712%" y="549" width="0.0255%" height="15" fill="rgb(237,54,19)" fg:x="7089" fg:w="2"/><text x="90.5212%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (2 samples, 0.03%)</title><rect x="90.2712%" y="533" width="0.0255%" height="15" fill="rgb(251,129,25)" fg:x="7089" fg:w="2"/><text x="90.5212%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="90.2840%" y="517" width="0.0127%" height="15" fill="rgb(238,97,19)" fg:x="7090" fg:w="1"/><text x="90.5340%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="90.2840%" y="501" width="0.0127%" height="15" fill="rgb(240,169,18)" fg:x="7090" fg:w="1"/><text x="90.5340%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (3 samples, 0.04%)</title><rect x="90.2967%" y="549" width="0.0382%" height="15" fill="rgb(230,187,49)" fg:x="7091" fg:w="3"/><text x="90.5467%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="90.3222%" y="533" width="0.0127%" height="15" fill="rgb(209,44,26)" fg:x="7093" fg:w="1"/><text x="90.5722%" y="543.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="91.0353%" y="533" width="0.0382%" height="15" fill="rgb(244,0,6)" fg:x="7149" fg:w="3"/><text x="91.2853%" y="543.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u8&gt; for usize&gt;::from (1 samples, 0.01%)</title><rect x="91.0735%" y="533" width="0.0127%" height="15" fill="rgb(248,18,21)" fg:x="7152" fg:w="1"/><text x="91.3235%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.10%)</title><rect x="91.0862%" y="533" width="0.1019%" height="15" fill="rgb(245,180,19)" fg:x="7153" fg:w="8"/><text x="91.3362%" y="543.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (10 samples, 0.13%)</title><rect x="91.7102%" y="501" width="0.1273%" height="15" fill="rgb(252,118,36)" fg:x="7202" fg:w="10"/><text x="91.9602%" y="511.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="91.8375%" y="501" width="0.0127%" height="15" fill="rgb(210,224,19)" fg:x="7212" fg:w="1"/><text x="92.0875%" y="511.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="91.8375%" y="485" width="0.0127%" height="15" fill="rgb(218,30,24)" fg:x="7212" fg:w="1"/><text x="92.0875%" y="495.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="91.8375%" y="469" width="0.0127%" height="15" fill="rgb(219,75,50)" fg:x="7212" fg:w="1"/><text x="92.0875%" y="479.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="91.8375%" y="453" width="0.0127%" height="15" fill="rgb(234,72,50)" fg:x="7212" fg:w="1"/><text x="92.0875%" y="463.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="91.8375%" y="437" width="0.0127%" height="15" fill="rgb(219,100,48)" fg:x="7212" fg:w="1"/><text x="92.0875%" y="447.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="91.8375%" y="421" width="0.0127%" height="15" fill="rgb(253,5,41)" fg:x="7212" fg:w="1"/><text x="92.0875%" y="431.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="91.8375%" y="405" width="0.0127%" height="15" fill="rgb(247,181,11)" fg:x="7212" fg:w="1"/><text x="92.0875%" y="415.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="91.8375%" y="389" width="0.0127%" height="15" fill="rgb(222,223,25)" fg:x="7212" fg:w="1"/><text x="92.0875%" y="399.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="91.8375%" y="373" width="0.0127%" height="15" fill="rgb(214,198,28)" fg:x="7212" fg:w="1"/><text x="92.0875%" y="383.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (1 samples, 0.01%)</title><rect x="91.8502%" y="501" width="0.0127%" height="15" fill="rgb(230,46,43)" fg:x="7213" fg:w="1"/><text x="92.1002%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.03%)</title><rect x="91.8630%" y="501" width="0.0255%" height="15" fill="rgb(233,65,53)" fg:x="7214" fg:w="2"/><text x="92.1130%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (158 samples, 2.01%)</title><rect x="91.1881%" y="533" width="2.0120%" height="15" fill="rgb(221,121,27)" fg:x="7161" fg:w="158"/><text x="91.4381%" y="543.50">c..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (158 samples, 2.01%)</title><rect x="91.1881%" y="517" width="2.0120%" height="15" fill="rgb(247,70,47)" fg:x="7161" fg:w="158"/><text x="91.4381%" y="527.50">&lt;..</text></g><g><title>core::mem::replace (103 samples, 1.31%)</title><rect x="91.8885%" y="501" width="1.3116%" height="15" fill="rgb(228,85,35)" fg:x="7216" fg:w="103"/><text x="92.1385%" y="511.50"></text></g><g><title>core::ptr::read (15 samples, 0.19%)</title><rect x="93.0090%" y="485" width="0.1910%" height="15" fill="rgb(209,50,18)" fg:x="7304" fg:w="15"/><text x="93.2590%" y="495.50"></text></g><g><title>core::ops::function::FnMut::call_mut (28 samples, 0.36%)</title><rect x="93.2001%" y="533" width="0.3566%" height="15" fill="rgb(250,19,35)" fg:x="7319" fg:w="28"/><text x="93.4501%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (2 samples, 0.03%)</title><rect x="93.5311%" y="517" width="0.0255%" height="15" fill="rgb(253,107,29)" fg:x="7345" fg:w="2"/><text x="93.7811%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (34 samples, 0.43%)</title><rect x="93.5566%" y="533" width="0.4330%" height="15" fill="rgb(252,179,29)" fg:x="7347" fg:w="34"/><text x="93.8066%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (33 samples, 0.42%)</title><rect x="93.5693%" y="517" width="0.4202%" height="15" fill="rgb(238,194,6)" fg:x="7348" fg:w="33"/><text x="93.8193%" y="527.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="93.9768%" y="501" width="0.0127%" height="15" fill="rgb(238,164,29)" fg:x="7380" fg:w="1"/><text x="94.2268%" y="511.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="93.9768%" y="485" width="0.0127%" height="15" fill="rgb(224,25,9)" fg:x="7380" fg:w="1"/><text x="94.2268%" y="495.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="93.9768%" y="469" width="0.0127%" height="15" fill="rgb(244,153,23)" fg:x="7380" fg:w="1"/><text x="94.2268%" y="479.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="93.9768%" y="453" width="0.0127%" height="15" fill="rgb(212,203,14)" fg:x="7380" fg:w="1"/><text x="94.2268%" y="463.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="93.9768%" y="437" width="0.0127%" height="15" fill="rgb(220,164,20)" fg:x="7380" fg:w="1"/><text x="94.2268%" y="447.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="93.9768%" y="421" width="0.0127%" height="15" fill="rgb(222,203,48)" fg:x="7380" fg:w="1"/><text x="94.2268%" y="431.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="93.9768%" y="405" width="0.0127%" height="15" fill="rgb(215,159,22)" fg:x="7380" fg:w="1"/><text x="94.2268%" y="415.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="93.9768%" y="389" width="0.0127%" height="15" fill="rgb(216,183,47)" fg:x="7380" fg:w="1"/><text x="94.2268%" y="399.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="93.9768%" y="373" width="0.0127%" height="15" fill="rgb(229,195,25)" fg:x="7380" fg:w="1"/><text x="94.2268%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (9 samples, 0.11%)</title><rect x="93.9896%" y="533" width="0.1146%" height="15" fill="rgb(224,132,51)" fg:x="7381" fg:w="9"/><text x="94.2396%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8 samples, 0.10%)</title><rect x="94.0023%" y="517" width="0.1019%" height="15" fill="rgb(240,63,7)" fg:x="7382" fg:w="8"/><text x="94.2523%" y="527.50"></text></g><g><title>core::ptr::null_mut (1 samples, 0.01%)</title><rect x="94.1042%" y="533" width="0.0127%" height="15" fill="rgb(249,182,41)" fg:x="7390" fg:w="1"/><text x="94.3542%" y="543.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.01%)</title><rect x="94.1042%" y="517" width="0.0127%" height="15" fill="rgb(243,47,26)" fg:x="7390" fg:w="1"/><text x="94.3542%" y="527.50"></text></g><g><title>core::slice::sort::partition (319 samples, 4.06%)</title><rect x="90.1312%" y="565" width="4.0621%" height="15" fill="rgb(233,48,2)" fg:x="7078" fg:w="319"/><text x="90.3812%" y="575.50">core..</text></g><g><title>core::slice::sort::partition_in_blocks (303 samples, 3.86%)</title><rect x="90.3349%" y="549" width="3.8584%" height="15" fill="rgb(244,165,34)" fg:x="7094" fg:w="303"/><text x="90.5849%" y="559.50">core..</text></g><g><title>core::ptr::swap (6 samples, 0.08%)</title><rect x="94.1169%" y="533" width="0.0764%" height="15" fill="rgb(207,89,7)" fg:x="7391" fg:w="6"/><text x="94.3669%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.05%)</title><rect x="94.1424%" y="517" width="0.0509%" height="15" fill="rgb(244,117,36)" fg:x="7393" fg:w="4"/><text x="94.3924%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (10 samples, 0.13%)</title><rect x="94.7791%" y="549" width="0.1273%" height="15" fill="rgb(226,144,34)" fg:x="7443" fg:w="10"/><text x="95.0291%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (1 samples, 0.01%)</title><rect x="94.8937%" y="533" width="0.0127%" height="15" fill="rgb(213,23,19)" fg:x="7452" fg:w="1"/><text x="95.1437%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.04%)</title><rect x="94.9064%" y="549" width="0.0382%" height="15" fill="rgb(217,75,12)" fg:x="7453" fg:w="3"/><text x="95.1564%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.04%)</title><rect x="94.9064%" y="533" width="0.0382%" height="15" fill="rgb(224,159,17)" fg:x="7453" fg:w="3"/><text x="95.1564%" y="543.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="94.9446%" y="549" width="0.0127%" height="15" fill="rgb(217,118,1)" fg:x="7456" fg:w="1"/><text x="95.1946%" y="559.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.01%)</title><rect x="94.9446%" y="533" width="0.0127%" height="15" fill="rgb(232,180,48)" fg:x="7456" fg:w="1"/><text x="95.1946%" y="543.50"></text></g><g><title>core::ptr::swap (1 samples, 0.01%)</title><rect x="94.9573%" y="549" width="0.0127%" height="15" fill="rgb(230,27,33)" fg:x="7457" fg:w="1"/><text x="95.2073%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.06%)</title><rect x="94.9701%" y="549" width="0.0637%" height="15" fill="rgb(205,31,21)" fg:x="7458" fg:w="5"/><text x="95.2201%" y="559.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.04%)</title><rect x="94.9955%" y="533" width="0.0382%" height="15" fill="rgb(253,59,4)" fg:x="7460" fg:w="3"/><text x="95.2455%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.03%)</title><rect x="95.0083%" y="517" width="0.0255%" height="15" fill="rgb(224,201,9)" fg:x="7461" fg:w="2"/><text x="95.2583%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.03%)</title><rect x="95.0083%" y="501" width="0.0255%" height="15" fill="rgb(229,206,30)" fg:x="7461" fg:w="2"/><text x="95.2583%" y="511.50"></text></g><g><title>core::slice::sort::partition_equal (67 samples, 0.85%)</title><rect x="94.1933%" y="565" width="0.8532%" height="15" fill="rgb(212,67,47)" fg:x="7397" fg:w="67"/><text x="94.4433%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.01%)</title><rect x="95.0337%" y="549" width="0.0127%" height="15" fill="rgb(211,96,50)" fg:x="7463" fg:w="1"/><text x="95.2837%" y="559.50"></text></g><g><title>core::ptr::swap (1 samples, 0.01%)</title><rect x="95.0337%" y="533" width="0.0127%" height="15" fill="rgb(252,114,18)" fg:x="7463" fg:w="1"/><text x="95.2837%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="95.0337%" y="517" width="0.0127%" height="15" fill="rgb(223,58,37)" fg:x="7463" fg:w="1"/><text x="95.2837%" y="527.50"></text></g><g><title>core::cmp::min (2 samples, 0.03%)</title><rect x="95.0719%" y="549" width="0.0255%" height="15" fill="rgb(237,70,4)" fg:x="7466" fg:w="2"/><text x="95.3219%" y="559.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.03%)</title><rect x="95.0719%" y="533" width="0.0255%" height="15" fill="rgb(244,85,46)" fg:x="7466" fg:w="2"/><text x="95.3219%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (1 samples, 0.01%)</title><rect x="95.0974%" y="549" width="0.0127%" height="15" fill="rgb(223,39,52)" fg:x="7468" fg:w="1"/><text x="95.3474%" y="559.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.03%)</title><rect x="95.1866%" y="485" width="0.0255%" height="15" fill="rgb(218,200,14)" fg:x="7475" fg:w="2"/><text x="95.4366%" y="495.50"></text></g><g><title>core::slice::sort::choose_pivot (10 samples, 0.13%)</title><rect x="95.1101%" y="549" width="0.1273%" height="15" fill="rgb(208,171,16)" fg:x="7469" fg:w="10"/><text x="95.3601%" y="559.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (9 samples, 0.11%)</title><rect x="95.1229%" y="533" width="0.1146%" height="15" fill="rgb(234,200,18)" fg:x="7470" fg:w="9"/><text x="95.3729%" y="543.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (9 samples, 0.11%)</title><rect x="95.1229%" y="517" width="0.1146%" height="15" fill="rgb(228,45,11)" fg:x="7470" fg:w="9"/><text x="95.3729%" y="527.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (8 samples, 0.10%)</title><rect x="95.1356%" y="501" width="0.1019%" height="15" fill="rgb(237,182,11)" fg:x="7471" fg:w="8"/><text x="95.3856%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (2 samples, 0.03%)</title><rect x="95.2120%" y="485" width="0.0255%" height="15" fill="rgb(241,175,49)" fg:x="7477" fg:w="2"/><text x="95.4620%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.03%)</title><rect x="95.2120%" y="469" width="0.0255%" height="15" fill="rgb(247,38,35)" fg:x="7477" fg:w="2"/><text x="95.4620%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (1 samples, 0.01%)</title><rect x="95.2248%" y="453" width="0.0127%" height="15" fill="rgb(228,39,49)" fg:x="7478" fg:w="1"/><text x="95.4748%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="95.2375%" y="533" width="0.0127%" height="15" fill="rgb(226,101,26)" fg:x="7479" fg:w="1"/><text x="95.4875%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="95.2375%" y="517" width="0.0127%" height="15" fill="rgb(206,141,19)" fg:x="7479" fg:w="1"/><text x="95.4875%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.01%)</title><rect x="95.2375%" y="501" width="0.0127%" height="15" fill="rgb(211,200,13)" fg:x="7479" fg:w="1"/><text x="95.4875%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.01%)</title><rect x="95.2502%" y="533" width="0.0127%" height="15" fill="rgb(241,121,6)" fg:x="7480" fg:w="1"/><text x="95.5002%" y="543.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="95.2502%" y="517" width="0.0127%" height="15" fill="rgb(234,221,29)" fg:x="7480" fg:w="1"/><text x="95.5002%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="95.2502%" y="501" width="0.0127%" height="15" fill="rgb(229,136,5)" fg:x="7480" fg:w="1"/><text x="95.5002%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="95.2502%" y="485" width="0.0127%" height="15" fill="rgb(238,36,11)" fg:x="7480" fg:w="1"/><text x="95.5002%" y="495.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.01%)</title><rect x="95.2502%" y="469" width="0.0127%" height="15" fill="rgb(251,55,41)" fg:x="7480" fg:w="1"/><text x="95.5002%" y="479.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.01%)</title><rect x="95.2502%" y="453" width="0.0127%" height="15" fill="rgb(242,34,40)" fg:x="7480" fg:w="1"/><text x="95.5002%" y="463.50"></text></g><g><title>core::slice::sort::insertion_sort (5 samples, 0.06%)</title><rect x="95.2375%" y="549" width="0.0637%" height="15" fill="rgb(215,42,17)" fg:x="7479" fg:w="5"/><text x="95.4875%" y="559.50"></text></g><g><title>core::slice::sort::shift_tail (3 samples, 0.04%)</title><rect x="95.2630%" y="533" width="0.0382%" height="15" fill="rgb(207,44,46)" fg:x="7481" fg:w="3"/><text x="95.5130%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.03%)</title><rect x="95.2757%" y="517" width="0.0255%" height="15" fill="rgb(211,206,28)" fg:x="7482" fg:w="2"/><text x="95.5257%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (1 samples, 0.01%)</title><rect x="95.2884%" y="501" width="0.0127%" height="15" fill="rgb(237,167,16)" fg:x="7483" fg:w="1"/><text x="95.5384%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4 samples, 0.05%)</title><rect x="95.5558%" y="533" width="0.0509%" height="15" fill="rgb(233,66,6)" fg:x="7504" fg:w="4"/><text x="95.8058%" y="543.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (27 samples, 0.34%)</title><rect x="95.3012%" y="549" width="0.3438%" height="15" fill="rgb(246,123,29)" fg:x="7484" fg:w="27"/><text x="95.5512%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (3 samples, 0.04%)</title><rect x="95.6068%" y="533" width="0.0382%" height="15" fill="rgb(209,62,40)" fg:x="7508" fg:w="3"/><text x="95.8568%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.04%)</title><rect x="95.6068%" y="517" width="0.0382%" height="15" fill="rgb(218,4,25)" fg:x="7508" fg:w="3"/><text x="95.8568%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.04%)</title><rect x="95.6068%" y="501" width="0.0382%" height="15" fill="rgb(253,91,49)" fg:x="7508" fg:w="3"/><text x="95.8568%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (3 samples, 0.04%)</title><rect x="95.6068%" y="485" width="0.0382%" height="15" fill="rgb(228,155,29)" fg:x="7508" fg:w="3"/><text x="95.8568%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="95.8487%" y="517" width="0.0127%" height="15" fill="rgb(243,57,37)" fg:x="7527" fg:w="1"/><text x="96.0987%" y="527.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.01%)</title><rect x="95.9251%" y="485" width="0.0127%" height="15" fill="rgb(244,167,17)" fg:x="7533" fg:w="1"/><text x="96.1751%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (19 samples, 0.24%)</title><rect x="95.8615%" y="517" width="0.2419%" height="15" fill="rgb(207,181,38)" fg:x="7528" fg:w="19"/><text x="96.1115%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (19 samples, 0.24%)</title><rect x="95.8615%" y="501" width="0.2419%" height="15" fill="rgb(211,8,23)" fg:x="7528" fg:w="19"/><text x="96.1115%" y="511.50"></text></g><g><title>core::mem::replace (13 samples, 0.17%)</title><rect x="95.9379%" y="485" width="0.1655%" height="15" fill="rgb(235,11,44)" fg:x="7534" fg:w="13"/><text x="96.1879%" y="495.50"></text></g><g><title>core::ptr::read (4 samples, 0.05%)</title><rect x="96.0525%" y="469" width="0.0509%" height="15" fill="rgb(248,18,52)" fg:x="7543" fg:w="4"/><text x="96.3025%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (8 samples, 0.10%)</title><rect x="96.1034%" y="517" width="0.1019%" height="15" fill="rgb(208,4,7)" fg:x="7547" fg:w="8"/><text x="96.3534%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.05%)</title><rect x="96.2053%" y="517" width="0.0509%" height="15" fill="rgb(240,17,39)" fg:x="7555" fg:w="4"/><text x="96.4553%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.04%)</title><rect x="96.2180%" y="501" width="0.0382%" height="15" fill="rgb(207,170,3)" fg:x="7556" fg:w="3"/><text x="96.4680%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.03%)</title><rect x="96.2562%" y="517" width="0.0255%" height="15" fill="rgb(236,100,52)" fg:x="7559" fg:w="2"/><text x="96.5062%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.03%)</title><rect x="96.2562%" y="501" width="0.0255%" height="15" fill="rgb(246,78,51)" fg:x="7559" fg:w="2"/><text x="96.5062%" y="511.50"></text></g><g><title>core::slice::sort::partition (51 samples, 0.65%)</title><rect x="95.6450%" y="549" width="0.6494%" height="15" fill="rgb(211,17,15)" fg:x="7511" fg:w="51"/><text x="95.8950%" y="559.50"></text></g><g><title>core::slice::sort::partition_in_blocks (48 samples, 0.61%)</title><rect x="95.6832%" y="533" width="0.6112%" height="15" fill="rgb(209,59,46)" fg:x="7514" fg:w="48"/><text x="95.9332%" y="543.50"></text></g><g><title>core::ptr::swap (1 samples, 0.01%)</title><rect x="96.2817%" y="517" width="0.0127%" height="15" fill="rgb(210,92,25)" fg:x="7561" fg:w="1"/><text x="96.5317%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4 samples, 0.05%)</title><rect x="96.4727%" y="533" width="0.0509%" height="15" fill="rgb(238,174,52)" fg:x="7576" fg:w="4"/><text x="96.7227%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (2 samples, 0.03%)</title><rect x="96.5236%" y="533" width="0.0255%" height="15" fill="rgb(230,73,7)" fg:x="7580" fg:w="2"/><text x="96.7736%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.03%)</title><rect x="96.5236%" y="517" width="0.0255%" height="15" fill="rgb(243,124,40)" fg:x="7580" fg:w="2"/><text x="96.7736%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="96.5364%" y="501" width="0.0127%" height="15" fill="rgb(244,170,11)" fg:x="7581" fg:w="1"/><text x="96.7864%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="96.5364%" y="485" width="0.0127%" height="15" fill="rgb(207,114,54)" fg:x="7581" fg:w="1"/><text x="96.7864%" y="495.50"></text></g><g><title>core::slice::sort::partition_equal (21 samples, 0.27%)</title><rect x="96.2944%" y="549" width="0.2674%" height="15" fill="rgb(205,42,20)" fg:x="7562" fg:w="21"/><text x="96.5444%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (1 samples, 0.01%)</title><rect x="96.5491%" y="533" width="0.0127%" height="15" fill="rgb(230,30,28)" fg:x="7582" fg:w="1"/><text x="96.7991%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (1 samples, 0.01%)</title><rect x="96.5491%" y="517" width="0.0127%" height="15" fill="rgb(205,73,54)" fg:x="7582" fg:w="1"/><text x="96.7991%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="96.5491%" y="501" width="0.0127%" height="15" fill="rgb(254,227,23)" fg:x="7582" fg:w="1"/><text x="96.7991%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="96.5491%" y="485" width="0.0127%" height="15" fill="rgb(228,202,34)" fg:x="7582" fg:w="1"/><text x="96.7991%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.01%)</title><rect x="96.5618%" y="533" width="0.0127%" height="15" fill="rgb(222,225,37)" fg:x="7583" fg:w="1"/><text x="96.8118%" y="543.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="96.5618%" y="517" width="0.0127%" height="15" fill="rgb(221,14,54)" fg:x="7583" fg:w="1"/><text x="96.8118%" y="527.50"></text></g><g><title>core::slice::sort::choose_pivot (2 samples, 0.03%)</title><rect x="96.5746%" y="533" width="0.0255%" height="15" fill="rgb(254,102,2)" fg:x="7584" fg:w="2"/><text x="96.8246%" y="543.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.01%)</title><rect x="96.5873%" y="517" width="0.0127%" height="15" fill="rgb(232,104,17)" fg:x="7585" fg:w="1"/><text x="96.8373%" y="527.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.01%)</title><rect x="96.5873%" y="501" width="0.0127%" height="15" fill="rgb(250,220,14)" fg:x="7585" fg:w="1"/><text x="96.8373%" y="511.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (1 samples, 0.01%)</title><rect x="96.5873%" y="485" width="0.0127%" height="15" fill="rgb(241,158,9)" fg:x="7585" fg:w="1"/><text x="96.8373%" y="495.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.01%)</title><rect x="96.6000%" y="533" width="0.0127%" height="15" fill="rgb(246,9,43)" fg:x="7586" fg:w="1"/><text x="96.8500%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.01%)</title><rect x="96.6000%" y="517" width="0.0127%" height="15" fill="rgb(206,73,33)" fg:x="7586" fg:w="1"/><text x="96.8500%" y="527.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="96.6000%" y="501" width="0.0127%" height="15" fill="rgb(222,79,8)" fg:x="7586" fg:w="1"/><text x="96.8500%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="96.6000%" y="485" width="0.0127%" height="15" fill="rgb(234,8,54)" fg:x="7586" fg:w="1"/><text x="96.8500%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="96.6000%" y="469" width="0.0127%" height="15" fill="rgb(209,134,38)" fg:x="7586" fg:w="1"/><text x="96.8500%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.03%)</title><rect x="96.6637%" y="517" width="0.0255%" height="15" fill="rgb(230,127,29)" fg:x="7591" fg:w="2"/><text x="96.9137%" y="527.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (7 samples, 0.09%)</title><rect x="96.6128%" y="533" width="0.0891%" height="15" fill="rgb(242,44,41)" fg:x="7587" fg:w="7"/><text x="96.8628%" y="543.50"></text></g><g><title>core::slice::sort::shift_tail (1 samples, 0.01%)</title><rect x="96.6892%" y="517" width="0.0127%" height="15" fill="rgb(222,56,43)" fg:x="7593" fg:w="1"/><text x="96.9392%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="96.6892%" y="501" width="0.0127%" height="15" fill="rgb(238,39,47)" fg:x="7593" fg:w="1"/><text x="96.9392%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.01%)</title><rect x="96.6892%" y="485" width="0.0127%" height="15" fill="rgb(226,79,43)" fg:x="7593" fg:w="1"/><text x="96.9392%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.01%)</title><rect x="96.6892%" y="469" width="0.0127%" height="15" fill="rgb(242,105,53)" fg:x="7593" fg:w="1"/><text x="96.9392%" y="479.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::backward_unchecked (1 samples, 0.01%)</title><rect x="96.6892%" y="453" width="0.0127%" height="15" fill="rgb(251,132,46)" fg:x="7593" fg:w="1"/><text x="96.9392%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.03%)</title><rect x="96.7146%" y="501" width="0.0255%" height="15" fill="rgb(231,77,14)" fg:x="7595" fg:w="2"/><text x="96.9646%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.03%)</title><rect x="96.7146%" y="485" width="0.0255%" height="15" fill="rgb(240,135,9)" fg:x="7595" fg:w="2"/><text x="96.9646%" y="495.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="96.7274%" y="469" width="0.0127%" height="15" fill="rgb(248,109,14)" fg:x="7596" fg:w="1"/><text x="96.9774%" y="479.50"></text></g><g><title>core::slice::sort::partition (4 samples, 0.05%)</title><rect x="96.7019%" y="533" width="0.0509%" height="15" fill="rgb(227,146,52)" fg:x="7594" fg:w="4"/><text x="96.9519%" y="543.50"></text></g><g><title>core::slice::sort::partition_in_blocks (4 samples, 0.05%)</title><rect x="96.7019%" y="517" width="0.0509%" height="15" fill="rgb(232,54,3)" fg:x="7594" fg:w="4"/><text x="96.9519%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="96.7401%" y="501" width="0.0127%" height="15" fill="rgb(229,201,43)" fg:x="7597" fg:w="1"/><text x="96.9901%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="96.7401%" y="485" width="0.0127%" height="15" fill="rgb(252,161,33)" fg:x="7597" fg:w="1"/><text x="96.9901%" y="495.50"></text></g><g><title>core::slice::sort::partition_equal (1 samples, 0.01%)</title><rect x="96.7528%" y="533" width="0.0127%" height="15" fill="rgb(226,146,40)" fg:x="7598" fg:w="1"/><text x="97.0028%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable (4,530 samples, 57.68%)</title><rect x="39.0933%" y="661" width="57.6850%" height="15" fill="rgb(219,47,25)" fg:x="3070" fg:w="4530"/><text x="39.3433%" y="671.50">core::slice::&lt;impl [T]&gt;::sort_unstable</text></g><g><title>core::slice::sort::quicksort (4,530 samples, 57.68%)</title><rect x="39.0933%" y="645" width="57.6850%" height="15" fill="rgb(250,135,13)" fg:x="3070" fg:w="4530"/><text x="39.3433%" y="655.50">core::slice::sort::quicksort</text></g><g><title>core::slice::sort::recurse (4,530 samples, 57.68%)</title><rect x="39.0933%" y="629" width="57.6850%" height="15" fill="rgb(219,229,18)" fg:x="3070" fg:w="4530"/><text x="39.3433%" y="639.50">core::slice::sort::recurse</text></g><g><title>core::slice::sort::recurse (3,052 samples, 38.86%)</title><rect x="57.9142%" y="613" width="38.8641%" height="15" fill="rgb(217,152,27)" fg:x="4548" fg:w="3052"/><text x="58.1642%" y="623.50">core::slice::sort::recurse</text></g><g><title>core::slice::sort::recurse (1,662 samples, 21.16%)</title><rect x="75.6144%" y="597" width="21.1639%" height="15" fill="rgb(225,71,47)" fg:x="5938" fg:w="1662"/><text x="75.8644%" y="607.50">core::slice::sort::recurse</text></g><g><title>core::slice::sort::recurse (618 samples, 7.87%)</title><rect x="88.9087%" y="581" width="7.8696%" height="15" fill="rgb(220,139,14)" fg:x="6982" fg:w="618"/><text x="89.1587%" y="591.50">core::slice..</text></g><g><title>core::slice::sort::recurse (136 samples, 1.73%)</title><rect x="95.0465%" y="565" width="1.7318%" height="15" fill="rgb(247,54,32)" fg:x="7464" fg:w="136"/><text x="95.2965%" y="575.50"></text></g><g><title>core::slice::sort::recurse (17 samples, 0.22%)</title><rect x="96.5618%" y="549" width="0.2165%" height="15" fill="rgb(252,131,39)" fg:x="7583" fg:w="17"/><text x="96.8118%" y="559.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.01%)</title><rect x="96.7656%" y="533" width="0.0127%" height="15" fill="rgb(210,108,39)" fg:x="7599" fg:w="1"/><text x="97.0156%" y="543.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (1 samples, 0.01%)</title><rect x="96.7656%" y="517" width="0.0127%" height="15" fill="rgb(205,23,29)" fg:x="7599" fg:w="1"/><text x="97.0156%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="96.7656%" y="501" width="0.0127%" height="15" fill="rgb(246,139,46)" fg:x="7599" fg:w="1"/><text x="97.0156%" y="511.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::and_modify (4 samples, 0.05%)</title><rect x="96.7783%" y="661" width="0.0509%" height="15" fill="rgb(250,81,26)" fg:x="7600" fg:w="4"/><text x="97.0283%" y="671.50"></text></g><g><title>wfc::wfc::baseline::BaseLine::legal_tiles::{{closure}} (1 samples, 0.01%)</title><rect x="96.8165%" y="645" width="0.0127%" height="15" fill="rgb(214,104,7)" fg:x="7603" fg:w="1"/><text x="97.0665%" y="655.50"></text></g><g><title>std::collections::hash::map::OccupiedEntry&lt;K,V&gt;::into_mut (6 samples, 0.08%)</title><rect x="96.8802%" y="645" width="0.0764%" height="15" fill="rgb(233,189,8)" fg:x="7608" fg:w="6"/><text x="97.1302%" y="655.50"></text></g><g><title>hashbrown::rustc_entry::RustcOccupiedEntry&lt;K,V,A&gt;::into_mut (5 samples, 0.06%)</title><rect x="96.8929%" y="629" width="0.0637%" height="15" fill="rgb(228,141,17)" fg:x="7609" fg:w="5"/><text x="97.1429%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_mut (3 samples, 0.04%)</title><rect x="96.9184%" y="613" width="0.0382%" height="15" fill="rgb(247,157,1)" fg:x="7611" fg:w="3"/><text x="97.1684%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.03%)</title><rect x="96.9311%" y="597" width="0.0255%" height="15" fill="rgb(249,225,5)" fg:x="7612" fg:w="2"/><text x="97.1811%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.03%)</title><rect x="96.9566%" y="597" width="0.0255%" height="15" fill="rgb(242,55,13)" fg:x="7614" fg:w="2"/><text x="97.2066%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.03%)</title><rect x="96.9566%" y="581" width="0.0255%" height="15" fill="rgb(230,49,50)" fg:x="7614" fg:w="2"/><text x="97.2066%" y="591.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="96.9693%" y="565" width="0.0127%" height="15" fill="rgb(241,111,38)" fg:x="7615" fg:w="1"/><text x="97.2193%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="96.9820%" y="597" width="0.0127%" height="15" fill="rgb(252,155,4)" fg:x="7616" fg:w="1"/><text x="97.2320%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="96.9820%" y="581" width="0.0127%" height="15" fill="rgb(212,69,32)" fg:x="7616" fg:w="1"/><text x="97.2320%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="97.0202%" y="565" width="0.0127%" height="15" fill="rgb(243,107,47)" fg:x="7619" fg:w="1"/><text x="97.2702%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (4 samples, 0.05%)</title><rect x="96.9948%" y="581" width="0.0509%" height="15" fill="rgb(247,130,12)" fg:x="7617" fg:w="4"/><text x="97.2448%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.01%)</title><rect x="97.0330%" y="565" width="0.0127%" height="15" fill="rgb(233,74,16)" fg:x="7620" fg:w="1"/><text x="97.2830%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="97.0330%" y="549" width="0.0127%" height="15" fill="rgb(208,58,18)" fg:x="7620" fg:w="1"/><text x="97.2830%" y="559.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (18 samples, 0.23%)</title><rect x="96.8292%" y="661" width="0.2292%" height="15" fill="rgb(242,225,1)" fg:x="7604" fg:w="18"/><text x="97.0792%" y="671.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (8 samples, 0.10%)</title><rect x="96.9566%" y="645" width="0.1019%" height="15" fill="rgb(249,39,40)" fg:x="7614" fg:w="8"/><text x="97.2066%" y="655.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (8 samples, 0.10%)</title><rect x="96.9566%" y="629" width="0.1019%" height="15" fill="rgb(207,72,44)" fg:x="7614" fg:w="8"/><text x="97.2066%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (8 samples, 0.10%)</title><rect x="96.9566%" y="613" width="0.1019%" height="15" fill="rgb(215,193,12)" fg:x="7614" fg:w="8"/><text x="97.2066%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (5 samples, 0.06%)</title><rect x="96.9948%" y="597" width="0.0637%" height="15" fill="rgb(248,41,39)" fg:x="7617" fg:w="5"/><text x="97.2448%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.01%)</title><rect x="97.0457%" y="581" width="0.0127%" height="15" fill="rgb(253,85,4)" fg:x="7621" fg:w="1"/><text x="97.2957%" y="591.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="97.0457%" y="565" width="0.0127%" height="15" fill="rgb(243,70,31)" fg:x="7621" fg:w="1"/><text x="97.2957%" y="575.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="97.0457%" y="549" width="0.0127%" height="15" fill="rgb(253,195,26)" fg:x="7621" fg:w="1"/><text x="97.2957%" y="559.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.04%)</title><rect x="97.1985%" y="549" width="0.0382%" height="15" fill="rgb(243,42,11)" fg:x="7633" fg:w="3"/><text x="97.4485%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.04%)</title><rect x="97.1985%" y="533" width="0.0382%" height="15" fill="rgb(239,66,17)" fg:x="7633" fg:w="3"/><text x="97.4485%" y="543.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="97.2240%" y="517" width="0.0127%" height="15" fill="rgb(217,132,21)" fg:x="7635" fg:w="1"/><text x="97.4740%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.03%)</title><rect x="97.2495%" y="437" width="0.0255%" height="15" fill="rgb(252,202,21)" fg:x="7637" fg:w="2"/><text x="97.4995%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="97.2622%" y="421" width="0.0127%" height="15" fill="rgb(233,98,36)" fg:x="7638" fg:w="1"/><text x="97.5122%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.14%)</title><rect x="97.2367%" y="485" width="0.1401%" height="15" fill="rgb(216,153,54)" fg:x="7636" fg:w="11"/><text x="97.4867%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.14%)</title><rect x="97.2367%" y="469" width="0.1401%" height="15" fill="rgb(250,99,7)" fg:x="7636" fg:w="11"/><text x="97.4867%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 0.14%)</title><rect x="97.2367%" y="453" width="0.1401%" height="15" fill="rgb(207,56,50)" fg:x="7636" fg:w="11"/><text x="97.4867%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.10%)</title><rect x="97.2749%" y="437" width="0.1019%" height="15" fill="rgb(244,61,34)" fg:x="7639" fg:w="8"/><text x="97.5249%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="97.3768%" y="453" width="0.0127%" height="15" fill="rgb(241,50,38)" fg:x="7647" fg:w="1"/><text x="97.6268%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.03%)</title><rect x="97.3768%" y="485" width="0.0255%" height="15" fill="rgb(212,166,30)" fg:x="7647" fg:w="2"/><text x="97.6268%" y="495.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.03%)</title><rect x="97.3768%" y="469" width="0.0255%" height="15" fill="rgb(249,127,32)" fg:x="7647" fg:w="2"/><text x="97.6268%" y="479.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="97.3895%" y="453" width="0.0127%" height="15" fill="rgb(209,103,0)" fg:x="7648" fg:w="1"/><text x="97.6395%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (14 samples, 0.18%)</title><rect x="97.2367%" y="549" width="0.1783%" height="15" fill="rgb(238,209,51)" fg:x="7636" fg:w="14"/><text x="97.4867%" y="559.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (14 samples, 0.18%)</title><rect x="97.2367%" y="533" width="0.1783%" height="15" fill="rgb(237,56,23)" fg:x="7636" fg:w="14"/><text x="97.4867%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.18%)</title><rect x="97.2367%" y="517" width="0.1783%" height="15" fill="rgb(215,153,46)" fg:x="7636" fg:w="14"/><text x="97.4867%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.18%)</title><rect x="97.2367%" y="501" width="0.1783%" height="15" fill="rgb(224,49,31)" fg:x="7636" fg:w="14"/><text x="97.4867%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="97.4023%" y="485" width="0.0127%" height="15" fill="rgb(250,18,42)" fg:x="7649" fg:w="1"/><text x="97.6523%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash (1 samples, 0.01%)</title><rect x="97.4023%" y="469" width="0.0127%" height="15" fill="rgb(215,176,39)" fg:x="7649" fg:w="1"/><text x="97.6523%" y="479.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="97.4023%" y="453" width="0.0127%" height="15" fill="rgb(223,77,29)" fg:x="7649" fg:w="1"/><text x="97.6523%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="97.4023%" y="437" width="0.0127%" height="15" fill="rgb(234,94,52)" fg:x="7649" fg:w="1"/><text x="97.6523%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="97.4023%" y="421" width="0.0127%" height="15" fill="rgb(220,154,50)" fg:x="7649" fg:w="1"/><text x="97.6523%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="97.4023%" y="405" width="0.0127%" height="15" fill="rgb(212,11,10)" fg:x="7649" fg:w="1"/><text x="97.6523%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (1 samples, 0.01%)</title><rect x="97.4150%" y="549" width="0.0127%" height="15" fill="rgb(205,166,19)" fg:x="7650" fg:w="1"/><text x="97.6650%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="97.4150%" y="533" width="0.0127%" height="15" fill="rgb(244,198,16)" fg:x="7650" fg:w="1"/><text x="97.6650%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="97.4150%" y="517" width="0.0127%" height="15" fill="rgb(219,69,12)" fg:x="7650" fg:w="1"/><text x="97.6650%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.04%)</title><rect x="97.4532%" y="517" width="0.0382%" height="15" fill="rgb(245,30,7)" fg:x="7653" fg:w="3"/><text x="97.7032%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (5 samples, 0.06%)</title><rect x="97.4405%" y="533" width="0.0637%" height="15" fill="rgb(218,221,48)" fg:x="7652" fg:w="5"/><text x="97.6905%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.01%)</title><rect x="97.4914%" y="517" width="0.0127%" height="15" fill="rgb(216,66,15)" fg:x="7656" fg:w="1"/><text x="97.7414%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (7 samples, 0.09%)</title><rect x="97.4277%" y="549" width="0.0891%" height="15" fill="rgb(226,122,50)" fg:x="7651" fg:w="7"/><text x="97.6777%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.01%)</title><rect x="97.5041%" y="533" width="0.0127%" height="15" fill="rgb(239,156,16)" fg:x="7657" fg:w="1"/><text x="97.7541%" y="543.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="97.5041%" y="517" width="0.0127%" height="15" fill="rgb(224,27,38)" fg:x="7657" fg:w="1"/><text x="97.7541%" y="527.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="97.5041%" y="501" width="0.0127%" height="15" fill="rgb(224,39,27)" fg:x="7657" fg:w="1"/><text x="97.7541%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (27 samples, 0.34%)</title><rect x="97.1858%" y="629" width="0.3438%" height="15" fill="rgb(215,92,29)" fg:x="7632" fg:w="27"/><text x="97.4358%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (27 samples, 0.34%)</title><rect x="97.1858%" y="613" width="0.3438%" height="15" fill="rgb(207,159,16)" fg:x="7632" fg:w="27"/><text x="97.4358%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (27 samples, 0.34%)</title><rect x="97.1858%" y="597" width="0.3438%" height="15" fill="rgb(238,163,47)" fg:x="7632" fg:w="27"/><text x="97.4358%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (27 samples, 0.34%)</title><rect x="97.1858%" y="581" width="0.3438%" height="15" fill="rgb(219,91,49)" fg:x="7632" fg:w="27"/><text x="97.4358%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (27 samples, 0.34%)</title><rect x="97.1858%" y="565" width="0.3438%" height="15" fill="rgb(227,167,31)" fg:x="7632" fg:w="27"/><text x="97.4358%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.01%)</title><rect x="97.5169%" y="549" width="0.0127%" height="15" fill="rgb(234,80,54)" fg:x="7658" fg:w="1"/><text x="97.7669%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="97.5169%" y="533" width="0.0127%" height="15" fill="rgb(212,114,2)" fg:x="7658" fg:w="1"/><text x="97.7669%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.04%)</title><rect x="97.6315%" y="549" width="0.0382%" height="15" fill="rgb(234,50,24)" fg:x="7667" fg:w="3"/><text x="97.8815%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="97.6569%" y="533" width="0.0127%" height="15" fill="rgb(221,68,8)" fg:x="7669" fg:w="1"/><text x="97.9069%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (23 samples, 0.29%)</title><rect x="97.5423%" y="597" width="0.2929%" height="15" fill="rgb(254,180,31)" fg:x="7660" fg:w="23"/><text x="97.7923%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (23 samples, 0.29%)</title><rect x="97.5423%" y="581" width="0.2929%" height="15" fill="rgb(247,130,50)" fg:x="7660" fg:w="23"/><text x="97.7923%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (23 samples, 0.29%)</title><rect x="97.5423%" y="565" width="0.2929%" height="15" fill="rgb(211,109,4)" fg:x="7660" fg:w="23"/><text x="97.7923%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.17%)</title><rect x="97.6697%" y="549" width="0.1655%" height="15" fill="rgb(238,50,21)" fg:x="7670" fg:w="13"/><text x="97.9197%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="97.8607%" y="581" width="0.0127%" height="15" fill="rgb(225,57,45)" fg:x="7685" fg:w="1"/><text x="98.1107%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (10 samples, 0.13%)</title><rect x="97.8352%" y="597" width="0.1273%" height="15" fill="rgb(209,196,50)" fg:x="7683" fg:w="10"/><text x="98.0852%" y="607.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (7 samples, 0.09%)</title><rect x="97.8734%" y="581" width="0.0891%" height="15" fill="rgb(242,140,13)" fg:x="7686" fg:w="7"/><text x="98.1234%" y="591.50"></text></g><g><title>[libc.so.6] (7 samples, 0.09%)</title><rect x="97.8734%" y="565" width="0.0891%" height="15" fill="rgb(217,111,7)" fg:x="7686" fg:w="7"/><text x="98.1234%" y="575.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="97.9498%" y="549" width="0.0127%" height="15" fill="rgb(253,193,51)" fg:x="7692" fg:w="1"/><text x="98.1998%" y="559.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="97.9498%" y="533" width="0.0127%" height="15" fill="rgb(252,70,29)" fg:x="7692" fg:w="1"/><text x="98.1998%" y="543.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="97.9498%" y="517" width="0.0127%" height="15" fill="rgb(232,127,12)" fg:x="7692" fg:w="1"/><text x="98.1998%" y="527.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="97.9498%" y="501" width="0.0127%" height="15" fill="rgb(211,180,21)" fg:x="7692" fg:w="1"/><text x="98.1998%" y="511.50"></text></g><g><title>hashbrown::map::make_insert_hash (44 samples, 0.56%)</title><rect x="97.5296%" y="629" width="0.5603%" height="15" fill="rgb(229,72,13)" fg:x="7659" fg:w="44"/><text x="97.7796%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (43 samples, 0.55%)</title><rect x="97.5423%" y="613" width="0.5476%" height="15" fill="rgb(240,211,49)" fg:x="7660" fg:w="43"/><text x="97.7923%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (10 samples, 0.13%)</title><rect x="97.9626%" y="597" width="0.1273%" height="15" fill="rgb(219,149,40)" fg:x="7693" fg:w="10"/><text x="98.2126%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash (8 samples, 0.10%)</title><rect x="97.9880%" y="581" width="0.1019%" height="15" fill="rgb(210,127,46)" fg:x="7695" fg:w="8"/><text x="98.2380%" y="591.50"></text></g><g><title>core::hash::Hasher::write_u8 (8 samples, 0.10%)</title><rect x="97.9880%" y="565" width="0.1019%" height="15" fill="rgb(220,106,7)" fg:x="7695" fg:w="8"/><text x="98.2380%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.10%)</title><rect x="97.9880%" y="549" width="0.1019%" height="15" fill="rgb(249,31,22)" fg:x="7695" fg:w="8"/><text x="98.2380%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.10%)</title><rect x="97.9880%" y="533" width="0.1019%" height="15" fill="rgb(253,1,49)" fg:x="7695" fg:w="8"/><text x="98.2380%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.09%)</title><rect x="98.0008%" y="517" width="0.0891%" height="15" fill="rgb(227,144,33)" fg:x="7696" fg:w="7"/><text x="98.2508%" y="527.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.03%)</title><rect x="98.0644%" y="501" width="0.0255%" height="15" fill="rgb(249,163,44)" fg:x="7701" fg:w="2"/><text x="98.3144%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (2 samples, 0.03%)</title><rect x="98.1026%" y="613" width="0.0255%" height="15" fill="rgb(234,15,39)" fg:x="7704" fg:w="2"/><text x="98.3526%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.03%)</title><rect x="98.1026%" y="597" width="0.0255%" height="15" fill="rgb(207,66,16)" fg:x="7704" fg:w="2"/><text x="98.3526%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.03%)</title><rect x="98.2427%" y="597" width="0.0255%" height="15" fill="rgb(233,112,24)" fg:x="7715" fg:w="2"/><text x="98.4927%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="98.2682%" y="597" width="0.0382%" height="15" fill="rgb(230,90,22)" fg:x="7717" fg:w="3"/><text x="98.5182%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.03%)</title><rect x="98.2809%" y="581" width="0.0255%" height="15" fill="rgb(229,61,13)" fg:x="7718" fg:w="2"/><text x="98.5309%" y="591.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (1 samples, 0.01%)</title><rect x="98.2936%" y="565" width="0.0127%" height="15" fill="rgb(225,57,24)" fg:x="7719" fg:w="1"/><text x="98.5436%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.03%)</title><rect x="98.3700%" y="581" width="0.0255%" height="15" fill="rgb(208,169,48)" fg:x="7725" fg:w="2"/><text x="98.6200%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="98.3828%" y="565" width="0.0127%" height="15" fill="rgb(244,218,51)" fg:x="7726" fg:w="1"/><text x="98.6328%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (11 samples, 0.14%)</title><rect x="98.3064%" y="597" width="0.1401%" height="15" fill="rgb(214,148,10)" fg:x="7720" fg:w="11"/><text x="98.5564%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (4 samples, 0.05%)</title><rect x="98.3955%" y="581" width="0.0509%" height="15" fill="rgb(225,174,27)" fg:x="7727" fg:w="4"/><text x="98.6455%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.03%)</title><rect x="98.4210%" y="565" width="0.0255%" height="15" fill="rgb(230,96,26)" fg:x="7729" fg:w="2"/><text x="98.6710%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="98.4337%" y="549" width="0.0127%" height="15" fill="rgb(232,10,30)" fg:x="7730" fg:w="1"/><text x="98.6837%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="98.4337%" y="533" width="0.0127%" height="15" fill="rgb(222,8,50)" fg:x="7730" fg:w="1"/><text x="98.6837%" y="543.50"></text></g><g><title>hashbrown::raw::h2 (7 samples, 0.09%)</title><rect x="98.4465%" y="597" width="0.0891%" height="15" fill="rgb(213,81,27)" fg:x="7731" fg:w="7"/><text x="98.6965%" y="607.50"></text></g><g><title>core::cmp::Ord::min (6 samples, 0.08%)</title><rect x="98.4592%" y="581" width="0.0764%" height="15" fill="rgb(245,50,10)" fg:x="7732" fg:w="6"/><text x="98.7092%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.01%)</title><rect x="98.5229%" y="565" width="0.0127%" height="15" fill="rgb(216,100,18)" fg:x="7737" fg:w="1"/><text x="98.7729%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (9 samples, 0.11%)</title><rect x="98.5356%" y="597" width="0.1146%" height="15" fill="rgb(236,147,54)" fg:x="7738" fg:w="9"/><text x="98.7856%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="98.6375%" y="581" width="0.0127%" height="15" fill="rgb(205,143,26)" fg:x="7746" fg:w="1"/><text x="98.8875%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (8 samples, 0.10%)</title><rect x="98.7521%" y="581" width="0.1019%" height="15" fill="rgb(236,26,9)" fg:x="7755" fg:w="8"/><text x="99.0021%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.05%)</title><rect x="98.8539%" y="581" width="0.0509%" height="15" fill="rgb(221,165,53)" fg:x="7763" fg:w="4"/><text x="99.1039%" y="591.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.01%)</title><rect x="98.8921%" y="565" width="0.0127%" height="15" fill="rgb(214,110,17)" fg:x="7766" fg:w="1"/><text x="99.1421%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (30 samples, 0.38%)</title><rect x="98.6502%" y="597" width="0.3820%" height="15" fill="rgb(237,197,12)" fg:x="7747" fg:w="30"/><text x="98.9002%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (10 samples, 0.13%)</title><rect x="98.9049%" y="581" width="0.1273%" height="15" fill="rgb(205,84,17)" fg:x="7767" fg:w="10"/><text x="99.1549%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (10 samples, 0.13%)</title><rect x="98.9049%" y="565" width="0.1273%" height="15" fill="rgb(237,18,45)" fg:x="7767" fg:w="10"/><text x="99.1549%" y="575.50"></text></g><g><title>core::core_arch::simd::i8x16::new (3 samples, 0.04%)</title><rect x="98.9940%" y="549" width="0.0382%" height="15" fill="rgb(221,87,14)" fg:x="7774" fg:w="3"/><text x="99.2440%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="99.0450%" y="565" width="0.0127%" height="15" fill="rgb(238,186,15)" fg:x="7778" fg:w="1"/><text x="99.2950%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (159 samples, 2.02%)</title><rect x="97.0584%" y="661" width="2.0247%" height="15" fill="rgb(208,115,11)" fg:x="7622" fg:w="159"/><text x="97.3084%" y="671.50">s..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (158 samples, 2.01%)</title><rect x="97.0712%" y="645" width="2.0120%" height="15" fill="rgb(254,175,0)" fg:x="7623" fg:w="158"/><text x="97.3212%" y="655.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (78 samples, 0.99%)</title><rect x="98.0899%" y="629" width="0.9933%" height="15" fill="rgb(227,24,42)" fg:x="7703" fg:w="78"/><text x="98.3399%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (75 samples, 0.96%)</title><rect x="98.1281%" y="613" width="0.9550%" height="15" fill="rgb(223,211,37)" fg:x="7706" fg:w="75"/><text x="98.3781%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (4 samples, 0.05%)</title><rect x="99.0322%" y="597" width="0.0509%" height="15" fill="rgb(235,49,27)" fg:x="7777" fg:w="4"/><text x="99.2822%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.05%)</title><rect x="99.0322%" y="581" width="0.0509%" height="15" fill="rgb(254,97,51)" fg:x="7777" fg:w="4"/><text x="99.2822%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.03%)</title><rect x="99.0577%" y="565" width="0.0255%" height="15" fill="rgb(249,51,40)" fg:x="7779" fg:w="2"/><text x="99.3077%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.03%)</title><rect x="99.0577%" y="549" width="0.0255%" height="15" fill="rgb(210,128,45)" fg:x="7779" fg:w="2"/><text x="99.3077%" y="559.50"></text></g><g><title>wfc::wfc::baseline::BaseLine::propagate (6,633 samples, 84.46%)</title><rect x="14.6314%" y="693" width="84.4645%" height="15" fill="rgb(224,137,50)" fg:x="1149" fg:w="6633"/><text x="14.8814%" y="703.50">wfc::wfc::baseline::BaseLine::propagate</text></g><g><title>wfc::wfc::baseline::BaseLine::legal_tiles (6,605 samples, 84.11%)</title><rect x="14.9879%" y="677" width="84.1080%" height="15" fill="rgb(242,15,9)" fg:x="1177" fg:w="6605"/><text x="15.2379%" y="687.50">wfc::wfc::baseline::BaseLine::legal_tiles</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.01%)</title><rect x="99.0832%" y="661" width="0.0127%" height="15" fill="rgb(233,187,41)" fg:x="7781" fg:w="1"/><text x="99.3332%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.01%)</title><rect x="99.0832%" y="645" width="0.0127%" height="15" fill="rgb(227,2,29)" fg:x="7781" fg:w="1"/><text x="99.3332%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.01%)</title><rect x="99.0832%" y="629" width="0.0127%" height="15" fill="rgb(222,70,3)" fg:x="7781" fg:w="1"/><text x="99.3332%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="99.0832%" y="613" width="0.0127%" height="15" fill="rgb(213,11,42)" fg:x="7781" fg:w="1"/><text x="99.3332%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (1 samples, 0.01%)</title><rect x="99.0832%" y="597" width="0.0127%" height="15" fill="rgb(225,150,9)" fg:x="7781" fg:w="1"/><text x="99.3332%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.01%)</title><rect x="99.0832%" y="581" width="0.0127%" height="15" fill="rgb(230,162,45)" fg:x="7781" fg:w="1"/><text x="99.3332%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="99.0832%" y="565" width="0.0127%" height="15" fill="rgb(222,14,52)" fg:x="7781" fg:w="1"/><text x="99.3332%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="99.0959%" y="677" width="0.0127%" height="15" fill="rgb(254,198,14)" fg:x="7782" fg:w="1"/><text x="99.3459%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="99.0959%" y="661" width="0.0127%" height="15" fill="rgb(220,217,30)" fg:x="7782" fg:w="1"/><text x="99.3459%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="99.0959%" y="645" width="0.0127%" height="15" fill="rgb(215,146,41)" fg:x="7782" fg:w="1"/><text x="99.3459%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="99.0959%" y="629" width="0.0127%" height="15" fill="rgb(217,27,36)" fg:x="7782" fg:w="1"/><text x="99.3459%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="99.0959%" y="613" width="0.0127%" height="15" fill="rgb(219,218,39)" fg:x="7782" fg:w="1"/><text x="99.3459%" y="623.50"></text></g><g><title>&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="99.0959%" y="597" width="0.0127%" height="15" fill="rgb(219,4,42)" fg:x="7782" fg:w="1"/><text x="99.3459%" y="607.50"></text></g><g><title>&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="99.0959%" y="581" width="0.0127%" height="15" fill="rgb(249,119,36)" fg:x="7782" fg:w="1"/><text x="99.3459%" y="591.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="99.0959%" y="565" width="0.0127%" height="15" fill="rgb(209,23,33)" fg:x="7782" fg:w="1"/><text x="99.3459%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="99.0959%" y="549" width="0.0127%" height="15" fill="rgb(211,10,0)" fg:x="7782" fg:w="1"/><text x="99.3459%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::read (1 samples, 0.01%)</title><rect x="99.0959%" y="533" width="0.0127%" height="15" fill="rgb(208,99,37)" fg:x="7782" fg:w="1"/><text x="99.3459%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="99.0959%" y="517" width="0.0127%" height="15" fill="rgb(213,132,31)" fg:x="7782" fg:w="1"/><text x="99.3459%" y="527.50"></text></g><g><title>&lt;wfc::wfc::baseline::BaseLine as wfc::wfc::traits::WFC&gt;::solve (7,784 samples, 99.12%)</title><rect x="0.0000%" y="709" width="99.1214%" height="15" fill="rgb(243,129,40)" fg:x="0" fg:w="7784"/><text x="0.2500%" y="719.50">&lt;wfc::wfc::baseline::BaseLine as wfc::wfc::traits::WFC&gt;::solve</text></g><g><title>wfc::wfc::utils::get_random (2 samples, 0.03%)</title><rect x="99.0959%" y="693" width="0.0255%" height="15" fill="rgb(210,66,33)" fg:x="7782" fg:w="2"/><text x="99.3459%" y="703.50"></text></g><g><title>rand::rngs::thread::thread_rng (1 samples, 0.01%)</title><rect x="99.1086%" y="677" width="0.0127%" height="15" fill="rgb(209,189,4)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="99.1086%" y="661" width="0.0127%" height="15" fill="rgb(214,107,37)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="99.1086%" y="645" width="0.0127%" height="15" fill="rgb(245,88,54)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="655.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit (1 samples, 0.01%)</title><rect x="99.1086%" y="629" width="0.0127%" height="15" fill="rgb(205,146,20)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="639.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="99.1086%" y="613" width="0.0127%" height="15" fill="rgb(220,161,25)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="623.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (1 samples, 0.01%)</title><rect x="99.1086%" y="597" width="0.0127%" height="15" fill="rgb(215,152,15)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="607.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.01%)</title><rect x="99.1086%" y="581" width="0.0127%" height="15" fill="rgb(233,192,44)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="591.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit::{{closure}} (1 samples, 0.01%)</title><rect x="99.1086%" y="565" width="0.0127%" height="15" fill="rgb(240,170,46)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="575.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__init (1 samples, 0.01%)</title><rect x="99.1086%" y="549" width="0.0127%" height="15" fill="rgb(207,104,33)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="559.50"></text></g><g><title>rand_core::SeedableRng::from_rng (1 samples, 0.01%)</title><rect x="99.1086%" y="533" width="0.0127%" height="15" fill="rgb(219,21,39)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="543.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::SeedableRng&gt;::from_seed (1 samples, 0.01%)</title><rect x="99.1086%" y="517" width="0.0127%" height="15" fill="rgb(214,133,29)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="527.50"></text></g><g><title>rand_chacha::guts::ChaCha::new (1 samples, 0.01%)</title><rect x="99.1086%" y="501" width="0.0127%" height="15" fill="rgb(226,93,6)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="511.50"></text></g><g><title>rand_chacha::guts::init_chacha (1 samples, 0.01%)</title><rect x="99.1086%" y="485" width="0.0127%" height="15" fill="rgb(252,222,34)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="495.50"></text></g><g><title>std_detect::detect::arch::x86::__is_feature_detected::avx (1 samples, 0.01%)</title><rect x="99.1086%" y="469" width="0.0127%" height="15" fill="rgb(252,92,48)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="479.50"></text></g><g><title>std_detect::detect::check_for (1 samples, 0.01%)</title><rect x="99.1086%" y="453" width="0.0127%" height="15" fill="rgb(245,223,24)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="463.50"></text></g><g><title>std_detect::detect::cache::test (1 samples, 0.01%)</title><rect x="99.1086%" y="437" width="0.0127%" height="15" fill="rgb(205,176,3)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.01%)</title><rect x="99.1086%" y="421" width="0.0127%" height="15" fill="rgb(235,151,15)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="431.50"></text></g><g><title>std_detect::detect::cache::test::{{closure}} (1 samples, 0.01%)</title><rect x="99.1086%" y="405" width="0.0127%" height="15" fill="rgb(237,209,11)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="415.50"></text></g><g><title>std_detect::detect::cache::detect_and_initialize (1 samples, 0.01%)</title><rect x="99.1086%" y="389" width="0.0127%" height="15" fill="rgb(243,227,24)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="399.50"></text></g><g><title>std_detect::detect::os::detect_features (1 samples, 0.01%)</title><rect x="99.1086%" y="373" width="0.0127%" height="15" fill="rgb(239,193,16)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="383.50"></text></g><g><title>core::core_arch::x86::cpuid::__cpuid (1 samples, 0.01%)</title><rect x="99.1086%" y="357" width="0.0127%" height="15" fill="rgb(231,27,9)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="367.50"></text></g><g><title>core::core_arch::x86::cpuid::__cpuid_count (1 samples, 0.01%)</title><rect x="99.1086%" y="341" width="0.0127%" height="15" fill="rgb(219,169,10)" fg:x="7783" fg:w="1"/><text x="99.3586%" y="351.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1 samples, 0.01%)</title><rect x="99.1214%" y="357" width="0.0127%" height="15" fill="rgb(244,229,43)" fg:x="7784" fg:w="1"/><text x="99.3714%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="99.1214%" y="341" width="0.0127%" height="15" fill="rgb(254,38,20)" fg:x="7784" fg:w="1"/><text x="99.3714%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.01%)</title><rect x="99.1214%" y="325" width="0.0127%" height="15" fill="rgb(250,47,30)" fg:x="7784" fg:w="1"/><text x="99.3714%" y="335.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (1 samples, 0.01%)</title><rect x="99.1214%" y="309" width="0.0127%" height="15" fill="rgb(224,124,36)" fg:x="7784" fg:w="1"/><text x="99.3714%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="99.1214%" y="293" width="0.0127%" height="15" fill="rgb(246,68,51)" fg:x="7784" fg:w="1"/><text x="99.3714%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="99.1214%" y="277" width="0.0127%" height="15" fill="rgb(253,43,49)" fg:x="7784" fg:w="1"/><text x="99.3714%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="99.1214%" y="261" width="0.0127%" height="15" fill="rgb(219,54,36)" fg:x="7784" fg:w="1"/><text x="99.3714%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="99.1214%" y="245" width="0.0127%" height="15" fill="rgb(227,133,34)" fg:x="7784" fg:w="1"/><text x="99.3714%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="99.1214%" y="229" width="0.0127%" height="15" fill="rgb(247,227,15)" fg:x="7784" fg:w="1"/><text x="99.3714%" y="239.50"></text></g><g><title>wfc::wfc::rules::get_any_tile (2 samples, 0.03%)</title><rect x="99.1214%" y="517" width="0.0255%" height="15" fill="rgb(229,96,14)" fg:x="7784" fg:w="2"/><text x="99.3714%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.03%)</title><rect x="99.1214%" y="501" width="0.0255%" height="15" fill="rgb(220,79,17)" fg:x="7784" fg:w="2"/><text x="99.3714%" y="511.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="99.1214%" y="485" width="0.0255%" height="15" fill="rgb(205,131,53)" fg:x="7784" fg:w="2"/><text x="99.3714%" y="495.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.03%)</title><rect x="99.1214%" y="469" width="0.0255%" height="15" fill="rgb(209,50,29)" fg:x="7784" fg:w="2"/><text x="99.3714%" y="479.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.03%)</title><rect x="99.1214%" y="453" width="0.0255%" height="15" fill="rgb(245,86,46)" fg:x="7784" fg:w="2"/><text x="99.3714%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.03%)</title><rect x="99.1214%" y="437" width="0.0255%" height="15" fill="rgb(235,66,46)" fg:x="7784" fg:w="2"/><text x="99.3714%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.03%)</title><rect x="99.1214%" y="421" width="0.0255%" height="15" fill="rgb(232,148,31)" fg:x="7784" fg:w="2"/><text x="99.3714%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.03%)</title><rect x="99.1214%" y="405" width="0.0255%" height="15" fill="rgb(217,149,8)" fg:x="7784" fg:w="2"/><text x="99.3714%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.03%)</title><rect x="99.1214%" y="389" width="0.0255%" height="15" fill="rgb(209,183,11)" fg:x="7784" fg:w="2"/><text x="99.3714%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.03%)</title><rect x="99.1214%" y="373" width="0.0255%" height="15" fill="rgb(208,55,20)" fg:x="7784" fg:w="2"/><text x="99.3714%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="99.1341%" y="357" width="0.0127%" height="15" fill="rgb(218,39,14)" fg:x="7785" fg:w="1"/><text x="99.3841%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="99.1341%" y="341" width="0.0127%" height="15" fill="rgb(216,169,33)" fg:x="7785" fg:w="1"/><text x="99.3841%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="99.1596%" y="213" width="0.0127%" height="15" fill="rgb(233,80,24)" fg:x="7787" fg:w="1"/><text x="99.4096%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.05%)</title><rect x="99.1596%" y="261" width="0.0509%" height="15" fill="rgb(213,179,31)" fg:x="7787" fg:w="4"/><text x="99.4096%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.05%)</title><rect x="99.1596%" y="245" width="0.0509%" height="15" fill="rgb(209,19,5)" fg:x="7787" fg:w="4"/><text x="99.4096%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.05%)</title><rect x="99.1596%" y="229" width="0.0509%" height="15" fill="rgb(219,18,35)" fg:x="7787" fg:w="4"/><text x="99.4096%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.04%)</title><rect x="99.1723%" y="213" width="0.0382%" height="15" fill="rgb(209,169,16)" fg:x="7788" fg:w="3"/><text x="99.4223%" y="223.50"></text></g><g><title>hashbrown::map::make_insert_hash (9 samples, 0.11%)</title><rect x="99.1596%" y="293" width="0.1146%" height="15" fill="rgb(245,90,51)" fg:x="7787" fg:w="9"/><text x="99.4096%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.11%)</title><rect x="99.1596%" y="277" width="0.1146%" height="15" fill="rgb(220,99,45)" fg:x="7787" fg:w="9"/><text x="99.4096%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.06%)</title><rect x="99.2105%" y="261" width="0.0637%" height="15" fill="rgb(249,89,25)" fg:x="7791" fg:w="5"/><text x="99.4605%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash (5 samples, 0.06%)</title><rect x="99.2105%" y="245" width="0.0637%" height="15" fill="rgb(239,193,0)" fg:x="7791" fg:w="5"/><text x="99.4605%" y="255.50"></text></g><g><title>core::hash::Hasher::write_u8 (4 samples, 0.05%)</title><rect x="99.2232%" y="229" width="0.0509%" height="15" fill="rgb(231,126,1)" fg:x="7792" fg:w="4"/><text x="99.4732%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="99.2232%" y="213" width="0.0509%" height="15" fill="rgb(243,166,3)" fg:x="7792" fg:w="4"/><text x="99.4732%" y="223.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="99.2360%" y="197" width="0.0382%" height="15" fill="rgb(223,22,34)" fg:x="7793" fg:w="3"/><text x="99.4860%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="99.2360%" y="181" width="0.0382%" height="15" fill="rgb(251,52,51)" fg:x="7793" fg:w="3"/><text x="99.4860%" y="191.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="99.2614%" y="165" width="0.0127%" height="15" fill="rgb(221,165,28)" fg:x="7795" fg:w="1"/><text x="99.5114%" y="175.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.04%)</title><rect x="99.2996%" y="245" width="0.0382%" height="15" fill="rgb(218,121,47)" fg:x="7798" fg:w="3"/><text x="99.5496%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.04%)</title><rect x="99.3378%" y="245" width="0.0382%" height="15" fill="rgb(209,120,9)" fg:x="7801" fg:w="3"/><text x="99.5878%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="99.3633%" y="229" width="0.0127%" height="15" fill="rgb(236,68,12)" fg:x="7803" fg:w="1"/><text x="99.6133%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.01%)</title><rect x="99.3888%" y="213" width="0.0127%" height="15" fill="rgb(225,194,26)" fg:x="7805" fg:w="1"/><text x="99.6388%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (12 samples, 0.15%)</title><rect x="99.2742%" y="293" width="0.1528%" height="15" fill="rgb(231,84,39)" fg:x="7796" fg:w="12"/><text x="99.5242%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.15%)</title><rect x="99.2742%" y="277" width="0.1528%" height="15" fill="rgb(210,11,45)" fg:x="7796" fg:w="12"/><text x="99.5242%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.15%)</title><rect x="99.2742%" y="261" width="0.1528%" height="15" fill="rgb(224,54,52)" fg:x="7796" fg:w="12"/><text x="99.5242%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (4 samples, 0.05%)</title><rect x="99.3760%" y="245" width="0.0509%" height="15" fill="rgb(238,102,14)" fg:x="7804" fg:w="4"/><text x="99.6260%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.05%)</title><rect x="99.3760%" y="229" width="0.0509%" height="15" fill="rgb(243,160,52)" fg:x="7804" fg:w="4"/><text x="99.6260%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.03%)</title><rect x="99.4015%" y="213" width="0.0255%" height="15" fill="rgb(216,114,19)" fg:x="7806" fg:w="2"/><text x="99.6515%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.03%)</title><rect x="99.4015%" y="197" width="0.0255%" height="15" fill="rgb(244,166,37)" fg:x="7806" fg:w="2"/><text x="99.6515%" y="207.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="99.4142%" y="181" width="0.0127%" height="15" fill="rgb(246,29,44)" fg:x="7807" fg:w="1"/><text x="99.6642%" y="191.50"></text></g><g><title>asm_sysvec_irq_work (1 samples, 0.01%)</title><rect x="99.4652%" y="165" width="0.0127%" height="15" fill="rgb(215,56,53)" fg:x="7811" fg:w="1"/><text x="99.7152%" y="175.50"></text></g><g><title>sysvec_irq_work (1 samples, 0.01%)</title><rect x="99.4652%" y="149" width="0.0127%" height="15" fill="rgb(217,60,2)" fg:x="7811" fg:w="1"/><text x="99.7152%" y="159.50"></text></g><g><title>irqentry_exit (1 samples, 0.01%)</title><rect x="99.4652%" y="133" width="0.0127%" height="15" fill="rgb(207,26,24)" fg:x="7811" fg:w="1"/><text x="99.7152%" y="143.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.01%)</title><rect x="99.4652%" y="117" width="0.0127%" height="15" fill="rgb(252,210,15)" fg:x="7811" fg:w="1"/><text x="99.7152%" y="127.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.01%)</title><rect x="99.4652%" y="101" width="0.0127%" height="15" fill="rgb(253,209,26)" fg:x="7811" fg:w="1"/><text x="99.7152%" y="111.50"></text></g><g><title>exit_to_user_mode_loop (1 samples, 0.01%)</title><rect x="99.4652%" y="85" width="0.0127%" height="15" fill="rgb(238,170,14)" fg:x="7811" fg:w="1"/><text x="99.7152%" y="95.50"></text></g><g><title>schedule (1 samples, 0.01%)</title><rect x="99.4652%" y="69" width="0.0127%" height="15" fill="rgb(216,178,15)" fg:x="7811" fg:w="1"/><text x="99.7152%" y="79.50"></text></g><g><title>__schedule (1 samples, 0.01%)</title><rect x="99.4652%" y="53" width="0.0127%" height="15" fill="rgb(250,197,2)" fg:x="7811" fg:w="1"/><text x="99.7152%" y="63.50"></text></g><g><title>finish_task_switch.isra.0 (1 samples, 0.01%)</title><rect x="99.4652%" y="37" width="0.0127%" height="15" fill="rgb(212,70,42)" fg:x="7811" fg:w="1"/><text x="99.7152%" y="47.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.06%)</title><rect x="99.4270%" y="213" width="0.0637%" height="15" fill="rgb(227,213,9)" fg:x="7808" fg:w="5"/><text x="99.6770%" y="223.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.06%)</title><rect x="99.4270%" y="197" width="0.0637%" height="15" fill="rgb(245,99,25)" fg:x="7808" fg:w="5"/><text x="99.6770%" y="207.50"></text></g><g><title>core::mem::replace (5 samples, 0.06%)</title><rect x="99.4270%" y="181" width="0.0637%" height="15" fill="rgb(250,82,29)" fg:x="7808" fg:w="5"/><text x="99.6770%" y="191.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="99.4779%" y="165" width="0.0127%" height="15" fill="rgb(241,226,54)" fg:x="7812" fg:w="1"/><text x="99.7279%" y="175.50"></text></g><g><title>core::mem::swap (1 samples, 0.01%)</title><rect x="99.4906%" y="213" width="0.0127%" height="15" fill="rgb(221,99,41)" fg:x="7813" fg:w="1"/><text x="99.7406%" y="223.50"></text></g><g><title>core::mem::swap_simple (1 samples, 0.01%)</title><rect x="99.4906%" y="197" width="0.0127%" height="15" fill="rgb(213,90,21)" fg:x="7813" fg:w="1"/><text x="99.7406%" y="207.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="99.4906%" y="181" width="0.0127%" height="15" fill="rgb(205,208,24)" fg:x="7813" fg:w="1"/><text x="99.7406%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="99.5034%" y="213" width="0.0127%" height="15" fill="rgb(246,31,12)" fg:x="7814" fg:w="1"/><text x="99.7534%" y="223.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="99.5034%" y="197" width="0.0127%" height="15" fill="rgb(213,154,6)" fg:x="7814" fg:w="1"/><text x="99.7534%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="99.5288%" y="149" width="0.0382%" height="15" fill="rgb(222,163,29)" fg:x="7816" fg:w="3"/><text x="99.7788%" y="159.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="99.5288%" y="133" width="0.0382%" height="15" fill="rgb(227,201,8)" fg:x="7816" fg:w="3"/><text x="99.7788%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="99.5288%" y="117" width="0.0382%" height="15" fill="rgb(233,9,32)" fg:x="7816" fg:w="3"/><text x="99.7788%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.04%)</title><rect x="99.5288%" y="101" width="0.0382%" height="15" fill="rgb(217,54,24)" fg:x="7816" fg:w="3"/><text x="99.7788%" y="111.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="99.5670%" y="133" width="0.0127%" height="15" fill="rgb(235,192,0)" fg:x="7819" fg:w="1"/><text x="99.8170%" y="143.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.03%)</title><rect x="99.5670%" y="149" width="0.0255%" height="15" fill="rgb(235,45,9)" fg:x="7819" fg:w="2"/><text x="99.8170%" y="159.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="99.5798%" y="133" width="0.0127%" height="15" fill="rgb(246,42,40)" fg:x="7820" fg:w="1"/><text x="99.8298%" y="143.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="99.5798%" y="117" width="0.0127%" height="15" fill="rgb(248,111,24)" fg:x="7820" fg:w="1"/><text x="99.8298%" y="127.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (8 samples, 0.10%)</title><rect x="99.5161%" y="197" width="0.1019%" height="15" fill="rgb(249,65,22)" fg:x="7815" fg:w="8"/><text x="99.7661%" y="207.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.10%)</title><rect x="99.5161%" y="181" width="0.1019%" height="15" fill="rgb(238,111,51)" fg:x="7815" fg:w="8"/><text x="99.7661%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.09%)</title><rect x="99.5288%" y="165" width="0.0891%" height="15" fill="rgb(250,118,22)" fg:x="7816" fg:w="7"/><text x="99.7788%" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.03%)</title><rect x="99.5925%" y="149" width="0.0255%" height="15" fill="rgb(234,84,26)" fg:x="7821" fg:w="2"/><text x="99.8425%" y="159.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash (2 samples, 0.03%)</title><rect x="99.5925%" y="133" width="0.0255%" height="15" fill="rgb(243,172,12)" fg:x="7821" fg:w="2"/><text x="99.8425%" y="143.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.03%)</title><rect x="99.5925%" y="117" width="0.0255%" height="15" fill="rgb(236,150,49)" fg:x="7821" fg:w="2"/><text x="99.8425%" y="127.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="99.5925%" y="101" width="0.0255%" height="15" fill="rgb(225,197,26)" fg:x="7821" fg:w="2"/><text x="99.8425%" y="111.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="99.5925%" y="85" width="0.0255%" height="15" fill="rgb(214,17,42)" fg:x="7821" fg:w="2"/><text x="99.8425%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="99.5925%" y="69" width="0.0255%" height="15" fill="rgb(224,165,40)" fg:x="7821" fg:w="2"/><text x="99.8425%" y="79.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="99.6052%" y="53" width="0.0127%" height="15" fill="rgb(246,100,4)" fg:x="7822" fg:w="1"/><text x="99.8552%" y="63.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="99.6180%" y="197" width="0.0127%" height="15" fill="rgb(222,103,0)" fg:x="7823" fg:w="1"/><text x="99.8680%" y="207.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="99.6180%" y="181" width="0.0127%" height="15" fill="rgb(227,189,26)" fg:x="7823" fg:w="1"/><text x="99.8680%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (10 samples, 0.13%)</title><rect x="99.5161%" y="213" width="0.1273%" height="15" fill="rgb(214,202,17)" fg:x="7815" fg:w="10"/><text x="99.7661%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="99.6307%" y="197" width="0.0127%" height="15" fill="rgb(229,111,3)" fg:x="7824" fg:w="1"/><text x="99.8807%" y="207.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="99.6689%" y="181" width="0.0127%" height="15" fill="rgb(229,172,15)" fg:x="7827" fg:w="1"/><text x="99.9189%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (6 samples, 0.08%)</title><rect x="99.6562%" y="197" width="0.0764%" height="15" fill="rgb(230,224,35)" fg:x="7826" fg:w="6"/><text x="99.9062%" y="207.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (4 samples, 0.05%)</title><rect x="99.6817%" y="181" width="0.0509%" height="15" fill="rgb(251,141,6)" fg:x="7828" fg:w="4"/><text x="99.9317%" y="191.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.04%)</title><rect x="99.6944%" y="165" width="0.0382%" height="15" fill="rgb(225,208,6)" fg:x="7829" fg:w="3"/><text x="99.9444%" y="175.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.01%)</title><rect x="99.7199%" y="149" width="0.0127%" height="15" fill="rgb(246,181,16)" fg:x="7831" fg:w="1"/><text x="99.9699%" y="159.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (1 samples, 0.01%)</title><rect x="99.7326%" y="181" width="0.0127%" height="15" fill="rgb(227,129,36)" fg:x="7832" fg:w="1"/><text x="99.9826%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (10 samples, 0.13%)</title><rect x="99.6434%" y="213" width="0.1273%" height="15" fill="rgb(248,117,24)" fg:x="7825" fg:w="10"/><text x="99.8934%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (3 samples, 0.04%)</title><rect x="99.7326%" y="197" width="0.0382%" height="15" fill="rgb(214,185,35)" fg:x="7832" fg:w="3"/><text x="99.9826%" y="207.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.03%)</title><rect x="99.7453%" y="181" width="0.0255%" height="15" fill="rgb(236,150,34)" fg:x="7833" fg:w="2"/><text x="99.9953%" y="191.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.03%)</title><rect x="99.7453%" y="165" width="0.0255%" height="15" fill="rgb(243,228,27)" fg:x="7833" fg:w="2"/><text x="99.9953%" y="175.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (28 samples, 0.36%)</title><rect x="99.4270%" y="245" width="0.3566%" height="15" fill="rgb(245,77,44)" fg:x="7808" fg:w="28"/><text x="99.6770%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (28 samples, 0.36%)</title><rect x="99.4270%" y="229" width="0.3566%" height="15" fill="rgb(235,214,42)" fg:x="7808" fg:w="28"/><text x="99.6770%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.01%)</title><rect x="99.7708%" y="213" width="0.0127%" height="15" fill="rgb(221,74,3)" fg:x="7835" fg:w="1"/><text x="100.0208%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.01%)</title><rect x="99.7708%" y="197" width="0.0127%" height="15" fill="rgb(206,121,29)" fg:x="7835" fg:w="1"/><text x="100.0208%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="99.7708%" y="181" width="0.0127%" height="15" fill="rgb(249,131,53)" fg:x="7835" fg:w="1"/><text x="100.0208%" y="191.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="99.7708%" y="165" width="0.0127%" height="15" fill="rgb(236,170,29)" fg:x="7835" fg:w="1"/><text x="100.0208%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="99.7708%" y="149" width="0.0127%" height="15" fill="rgb(247,96,15)" fg:x="7835" fg:w="1"/><text x="100.0208%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="99.7708%" y="133" width="0.0127%" height="15" fill="rgb(211,210,7)" fg:x="7835" fg:w="1"/><text x="100.0208%" y="143.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="99.7708%" y="117" width="0.0127%" height="15" fill="rgb(240,88,50)" fg:x="7835" fg:w="1"/><text x="100.0208%" y="127.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.01%)</title><rect x="99.7708%" y="101" width="0.0127%" height="15" fill="rgb(209,229,26)" fg:x="7835" fg:w="1"/><text x="100.0208%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.01%)</title><rect x="99.7708%" y="85" width="0.0127%" height="15" fill="rgb(210,68,23)" fg:x="7835" fg:w="1"/><text x="100.0208%" y="95.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (29 samples, 0.37%)</title><rect x="99.4270%" y="277" width="0.3693%" height="15" fill="rgb(229,180,13)" fg:x="7808" fg:w="29"/><text x="99.6770%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (29 samples, 0.37%)</title><rect x="99.4270%" y="261" width="0.3693%" height="15" fill="rgb(236,53,44)" fg:x="7808" fg:w="29"/><text x="99.6770%" y="271.50"></text></g><g><title>hashbrown::raw::TableLayout::new (1 samples, 0.01%)</title><rect x="99.7835%" y="245" width="0.0127%" height="15" fill="rgb(244,214,29)" fg:x="7836" fg:w="1"/><text x="100.0335%" y="255.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="99.7835%" y="229" width="0.0127%" height="15" fill="rgb(220,75,29)" fg:x="7836" fg:w="1"/><text x="100.0335%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.03%)</title><rect x="99.8090%" y="261" width="0.0255%" height="15" fill="rgb(214,183,37)" fg:x="7838" fg:w="2"/><text x="100.0590%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (6 samples, 0.08%)</title><rect x="99.7963%" y="277" width="0.0764%" height="15" fill="rgb(239,117,29)" fg:x="7837" fg:w="6"/><text x="100.0463%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (3 samples, 0.04%)</title><rect x="99.8345%" y="261" width="0.0382%" height="15" fill="rgb(237,171,35)" fg:x="7840" fg:w="3"/><text x="100.0845%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.04%)</title><rect x="99.8345%" y="245" width="0.0382%" height="15" fill="rgb(229,178,53)" fg:x="7840" fg:w="3"/><text x="100.0845%" y="255.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (57 samples, 0.73%)</title><rect x="99.1596%" y="357" width="0.7258%" height="15" fill="rgb(210,102,19)" fg:x="7787" fg:w="57"/><text x="99.4096%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (57 samples, 0.73%)</title><rect x="99.1596%" y="341" width="0.7258%" height="15" fill="rgb(235,127,22)" fg:x="7787" fg:w="57"/><text x="99.4096%" y="351.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (57 samples, 0.73%)</title><rect x="99.1596%" y="325" width="0.7258%" height="15" fill="rgb(244,31,31)" fg:x="7787" fg:w="57"/><text x="99.4096%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (57 samples, 0.73%)</title><rect x="99.1596%" y="309" width="0.7258%" height="15" fill="rgb(231,43,21)" fg:x="7787" fg:w="57"/><text x="99.4096%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (36 samples, 0.46%)</title><rect x="99.4270%" y="293" width="0.4584%" height="15" fill="rgb(217,131,35)" fg:x="7808" fg:w="36"/><text x="99.6770%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (1 samples, 0.01%)</title><rect x="99.8727%" y="277" width="0.0127%" height="15" fill="rgb(221,149,4)" fg:x="7843" fg:w="1"/><text x="100.1227%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.01%)</title><rect x="99.8727%" y="261" width="0.0127%" height="15" fill="rgb(232,170,28)" fg:x="7843" fg:w="1"/><text x="100.1227%" y="271.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="99.8727%" y="245" width="0.0127%" height="15" fill="rgb(238,56,10)" fg:x="7843" fg:w="1"/><text x="100.1227%" y="255.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="99.8727%" y="229" width="0.0127%" height="15" fill="rgb(235,196,14)" fg:x="7843" fg:w="1"/><text x="100.1227%" y="239.50"></text></g><g><title>wfc::wfc::rules::is_pipe_with_direction (1 samples, 0.01%)</title><rect x="99.8981%" y="341" width="0.0127%" height="15" fill="rgb(216,45,48)" fg:x="7845" fg:w="1"/><text x="100.1481%" y="351.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (61 samples, 0.78%)</title><rect x="99.1468%" y="373" width="0.7768%" height="15" fill="rgb(238,213,17)" fg:x="7786" fg:w="61"/><text x="99.3968%" y="383.50"></text></g><g><title>wfc::wfc::rules::get_pipe_dir_rules::{{closure}} (3 samples, 0.04%)</title><rect x="99.8854%" y="357" width="0.0382%" height="15" fill="rgb(212,13,2)" fg:x="7844" fg:w="3"/><text x="100.1354%" y="367.50"></text></g><g><title>wfc::wfc::rules::is_pipe_without_direction (1 samples, 0.01%)</title><rect x="99.9109%" y="341" width="0.0127%" height="15" fill="rgb(240,114,20)" fg:x="7846" fg:w="1"/><text x="100.1609%" y="351.50"></text></g><g><title>&lt;u8 as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.03%)</title><rect x="99.9618%" y="341" width="0.0255%" height="15" fill="rgb(228,41,40)" fg:x="7850" fg:w="2"/><text x="100.2118%" y="351.50"></text></g><g><title>core::num::&lt;impl u8&gt;::unchecked_add (1 samples, 0.01%)</title><rect x="99.9745%" y="325" width="0.0127%" height="15" fill="rgb(244,132,35)" fg:x="7851" fg:w="1"/><text x="100.2245%" y="335.50"></text></g><g><title>all (7,853 samples, 100%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(253,189,4)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="1039.50"></text></g><g><title>wfc (7,853 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(224,37,19)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="1023.50">wfc</text></g><g><title>_start (7,853 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(235,223,18)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="1007.50">_start</text></g><g><title>__libc_start_main (7,853 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(235,163,25)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="991.50">__libc_start_main</text></g><g><title>[libc.so.6] (7,853 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(217,145,28)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="975.50">[libc.so.6]</text></g><g><title>main (7,853 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(223,223,32)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="959.50">main</text></g><g><title>std::rt::lang_start (7,853 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(227,189,39)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="943.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (7,853 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(248,10,22)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="927.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (7,853 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(248,46,39)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="911.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (7,853 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(248,113,48)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (7,853 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(245,16,25)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="879.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (7,853 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(249,152,16)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="863.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (7,853 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(250,16,1)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (7,853 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(249,138,3)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (7,853 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(227,71,41)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="815.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (7,853 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(209,184,23)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="799.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (7,853 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(223,215,31)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="783.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7,853 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(210,146,28)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="767.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (7,853 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(209,183,41)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="751.50">core::ops::function::FnOnce::call_once</text></g><g><title>wfc::main (7,853 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(209,224,45)" fg:x="0" fg:w="7853"/><text x="0.2500%" y="735.50">wfc::main</text></g><g><title>wfc::wfc::rules::get_pipes_rules (69 samples, 0.88%)</title><rect x="99.1214%" y="709" width="0.8786%" height="15" fill="rgb(224,209,51)" fg:x="7784" fg:w="69"/><text x="99.3714%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (69 samples, 0.88%)</title><rect x="99.1214%" y="693" width="0.8786%" height="15" fill="rgb(223,17,39)" fg:x="7784" fg:w="69"/><text x="99.3714%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (69 samples, 0.88%)</title><rect x="99.1214%" y="677" width="0.8786%" height="15" fill="rgb(234,204,37)" fg:x="7784" fg:w="69"/><text x="99.3714%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (69 samples, 0.88%)</title><rect x="99.1214%" y="661" width="0.8786%" height="15" fill="rgb(236,120,5)" fg:x="7784" fg:w="69"/><text x="99.3714%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (69 samples, 0.88%)</title><rect x="99.1214%" y="645" width="0.8786%" height="15" fill="rgb(248,97,27)" fg:x="7784" fg:w="69"/><text x="99.3714%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (69 samples, 0.88%)</title><rect x="99.1214%" y="629" width="0.8786%" height="15" fill="rgb(240,66,17)" fg:x="7784" fg:w="69"/><text x="99.3714%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (69 samples, 0.88%)</title><rect x="99.1214%" y="613" width="0.8786%" height="15" fill="rgb(210,79,3)" fg:x="7784" fg:w="69"/><text x="99.3714%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (69 samples, 0.88%)</title><rect x="99.1214%" y="597" width="0.8786%" height="15" fill="rgb(214,176,27)" fg:x="7784" fg:w="69"/><text x="99.3714%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (69 samples, 0.88%)</title><rect x="99.1214%" y="581" width="0.8786%" height="15" fill="rgb(235,185,3)" fg:x="7784" fg:w="69"/><text x="99.3714%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (69 samples, 0.88%)</title><rect x="99.1214%" y="565" width="0.8786%" height="15" fill="rgb(227,24,12)" fg:x="7784" fg:w="69"/><text x="99.3714%" y="575.50"></text></g><g><title>wfc::wfc::rules::get_pipes_rules::{{closure}} (69 samples, 0.88%)</title><rect x="99.1214%" y="549" width="0.8786%" height="15" fill="rgb(252,169,48)" fg:x="7784" fg:w="69"/><text x="99.3714%" y="559.50"></text></g><g><title>wfc::wfc::rules::get_pipe_rules (69 samples, 0.88%)</title><rect x="99.1214%" y="533" width="0.8786%" height="15" fill="rgb(212,65,1)" fg:x="7784" fg:w="69"/><text x="99.3714%" y="543.50"></text></g><g><title>wfc::wfc::rules::get_pipe_dir_rules (67 samples, 0.85%)</title><rect x="99.1468%" y="517" width="0.8532%" height="15" fill="rgb(242,39,24)" fg:x="7786" fg:w="67"/><text x="99.3968%" y="527.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (67 samples, 0.85%)</title><rect x="99.1468%" y="501" width="0.8532%" height="15" fill="rgb(249,32,23)" fg:x="7786" fg:w="67"/><text x="99.3968%" y="511.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (67 samples, 0.85%)</title><rect x="99.1468%" y="485" width="0.8532%" height="15" fill="rgb(251,195,23)" fg:x="7786" fg:w="67"/><text x="99.3968%" y="495.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (67 samples, 0.85%)</title><rect x="99.1468%" y="469" width="0.8532%" height="15" fill="rgb(236,174,8)" fg:x="7786" fg:w="67"/><text x="99.3968%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (67 samples, 0.85%)</title><rect x="99.1468%" y="453" width="0.8532%" height="15" fill="rgb(220,197,8)" fg:x="7786" fg:w="67"/><text x="99.3968%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (67 samples, 0.85%)</title><rect x="99.1468%" y="437" width="0.8532%" height="15" fill="rgb(240,108,37)" fg:x="7786" fg:w="67"/><text x="99.3968%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (67 samples, 0.85%)</title><rect x="99.1468%" y="421" width="0.8532%" height="15" fill="rgb(232,176,24)" fg:x="7786" fg:w="67"/><text x="99.3968%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (67 samples, 0.85%)</title><rect x="99.1468%" y="405" width="0.8532%" height="15" fill="rgb(243,35,29)" fg:x="7786" fg:w="67"/><text x="99.3968%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (67 samples, 0.85%)</title><rect x="99.1468%" y="389" width="0.8532%" height="15" fill="rgb(210,37,18)" fg:x="7786" fg:w="67"/><text x="99.3968%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.08%)</title><rect x="99.9236%" y="373" width="0.0764%" height="15" fill="rgb(224,184,40)" fg:x="7847" fg:w="6"/><text x="100.1736%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.08%)</title><rect x="99.9236%" y="357" width="0.0764%" height="15" fill="rgb(236,39,29)" fg:x="7847" fg:w="6"/><text x="100.1736%" y="367.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="99.9873%" y="341" width="0.0127%" height="15" fill="rgb(232,48,39)" fg:x="7852" fg:w="1"/><text x="100.2373%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="99.9873%" y="325" width="0.0127%" height="15" fill="rgb(236,34,42)" fg:x="7852" fg:w="1"/><text x="100.2373%" y="335.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="99.9873%" y="309" width="0.0127%" height="15" fill="rgb(243,106,37)" fg:x="7852" fg:w="1"/><text x="100.2373%" y="319.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="99.9873%" y="293" width="0.0127%" height="15" fill="rgb(218,96,6)" fg:x="7852" fg:w="1"/><text x="100.2373%" y="303.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="99.9873%" y="277" width="0.0127%" height="15" fill="rgb(235,130,12)" fg:x="7852" fg:w="1"/><text x="100.2373%" y="287.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.01%)</title><rect x="99.9873%" y="261" width="0.0127%" height="15" fill="rgb(231,95,0)" fg:x="7852" fg:w="1"/><text x="100.2373%" y="271.50"></text></g><g><title>call_timer_fn (1 samples, 0.01%)</title><rect x="99.9873%" y="245" width="0.0127%" height="15" fill="rgb(228,12,23)" fg:x="7852" fg:w="1"/><text x="100.2373%" y="255.50"></text></g><g><title>vbg_heartbeat_timer (1 samples, 0.01%)</title><rect x="99.9873%" y="229" width="0.0127%" height="15" fill="rgb(216,12,1)" fg:x="7852" fg:w="1"/><text x="100.2373%" y="239.50"></text></g><g><title>vbg_req_perform (1 samples, 0.01%)</title><rect x="99.9873%" y="213" width="0.0127%" height="15" fill="rgb(219,59,3)" fg:x="7852" fg:w="1"/><text x="100.2373%" y="223.50"></text></g></svg></svg>