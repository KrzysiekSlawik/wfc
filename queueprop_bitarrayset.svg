<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="950" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="933.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="933.00"> </text><svg id="frames" x="10" width="1180" total_samples="65389"><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (20 samples, 0.03%)</title><rect x="0.1055%" y="405" width="0.0306%" height="15" fill="rgb(227,0,7)" fg:x="69" fg:w="20"/><text x="0.3555%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (17 samples, 0.03%)</title><rect x="0.1101%" y="389" width="0.0260%" height="15" fill="rgb(217,0,24)" fg:x="72" fg:w="17"/><text x="0.3601%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (133 samples, 0.20%)</title><rect x="0.0535%" y="421" width="0.2034%" height="15" fill="rgb(221,193,54)" fg:x="35" fg:w="133"/><text x="0.3035%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (79 samples, 0.12%)</title><rect x="0.1361%" y="405" width="0.1208%" height="15" fill="rgb(248,212,6)" fg:x="89" fg:w="79"/><text x="0.3861%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (69 samples, 0.11%)</title><rect x="0.1514%" y="389" width="0.1055%" height="15" fill="rgb(208,68,35)" fg:x="99" fg:w="69"/><text x="0.4014%" y="399.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::items::{{closure}} (66 samples, 0.10%)</title><rect x="0.1560%" y="373" width="0.1009%" height="15" fill="rgb(232,128,0)" fg:x="102" fg:w="66"/><text x="0.4060%" y="383.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::contains (60 samples, 0.09%)</title><rect x="0.1652%" y="357" width="0.0918%" height="15" fill="rgb(207,160,47)" fg:x="108" fg:w="60"/><text x="0.4152%" y="367.50"></text></g><g><title>core::num::&lt;impl u128&gt;::pow (51 samples, 0.08%)</title><rect x="0.1789%" y="341" width="0.0780%" height="15" fill="rgb(228,23,34)" fg:x="117" fg:w="51"/><text x="0.4289%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (141 samples, 0.22%)</title><rect x="0.0474%" y="453" width="0.2156%" height="15" fill="rgb(218,30,26)" fg:x="31" fg:w="141"/><text x="0.2974%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (139 samples, 0.21%)</title><rect x="0.0505%" y="437" width="0.2126%" height="15" fill="rgb(220,122,19)" fg:x="33" fg:w="139"/><text x="0.3005%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (13 samples, 0.02%)</title><rect x="0.2783%" y="421" width="0.0199%" height="15" fill="rgb(250,228,42)" fg:x="182" fg:w="13"/><text x="0.5283%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (25 samples, 0.04%)</title><rect x="0.2646%" y="453" width="0.0382%" height="15" fill="rgb(240,193,28)" fg:x="173" fg:w="25"/><text x="0.5146%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (25 samples, 0.04%)</title><rect x="0.2646%" y="437" width="0.0382%" height="15" fill="rgb(216,20,37)" fg:x="173" fg:w="25"/><text x="0.5146%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (180 samples, 0.28%)</title><rect x="0.0428%" y="485" width="0.2753%" height="15" fill="rgb(206,188,39)" fg:x="28" fg:w="180"/><text x="0.2928%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (180 samples, 0.28%)</title><rect x="0.0428%" y="469" width="0.2753%" height="15" fill="rgb(217,207,13)" fg:x="28" fg:w="180"/><text x="0.2928%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.02%)</title><rect x="0.3028%" y="453" width="0.0153%" height="15" fill="rgb(231,73,38)" fg:x="198" fg:w="10"/><text x="0.5528%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.02%)</title><rect x="0.3028%" y="437" width="0.0153%" height="15" fill="rgb(225,20,46)" fg:x="198" fg:w="10"/><text x="0.5528%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.01%)</title><rect x="0.3043%" y="421" width="0.0138%" height="15" fill="rgb(210,31,41)" fg:x="199" fg:w="9"/><text x="0.5543%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.01%)</title><rect x="0.3043%" y="405" width="0.0138%" height="15" fill="rgb(221,200,47)" fg:x="199" fg:w="9"/><text x="0.5543%" y="415.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::items (186 samples, 0.28%)</title><rect x="0.0382%" y="565" width="0.2845%" height="15" fill="rgb(226,26,5)" fg:x="25" fg:w="186"/><text x="0.2882%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (185 samples, 0.28%)</title><rect x="0.0398%" y="549" width="0.2829%" height="15" fill="rgb(249,33,26)" fg:x="26" fg:w="185"/><text x="0.2898%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (185 samples, 0.28%)</title><rect x="0.0398%" y="533" width="0.2829%" height="15" fill="rgb(235,183,28)" fg:x="26" fg:w="185"/><text x="0.2898%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (185 samples, 0.28%)</title><rect x="0.0398%" y="517" width="0.2829%" height="15" fill="rgb(221,5,38)" fg:x="26" fg:w="185"/><text x="0.2898%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (183 samples, 0.28%)</title><rect x="0.0428%" y="501" width="0.2799%" height="15" fill="rgb(247,18,42)" fg:x="28" fg:w="183"/><text x="0.2928%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_try_fold (161 samples, 0.25%)</title><rect x="1.0078%" y="405" width="0.2462%" height="15" fill="rgb(241,131,45)" fg:x="659" fg:w="161"/><text x="1.2578%" y="415.50"></text></g><g><title>[libc.so.6] (1,295 samples, 1.98%)</title><rect x="5.0345%" y="373" width="1.9805%" height="15" fill="rgb(249,31,29)" fg:x="3292" fg:w="1295"/><text x="5.2845%" y="383.50">[..</text></g><g><title>asm_sysvec_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="6.9996%" y="357" width="0.0153%" height="15" fill="rgb(225,111,53)" fg:x="4577" fg:w="10"/><text x="7.2496%" y="367.50"></text></g><g><title>sysvec_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="6.9996%" y="341" width="0.0153%" height="15" fill="rgb(238,160,17)" fg:x="4577" fg:w="10"/><text x="7.2496%" y="351.50"></text></g><g><title>irq_exit_rcu (10 samples, 0.02%)</title><rect x="6.9996%" y="325" width="0.0153%" height="15" fill="rgb(214,148,48)" fg:x="4577" fg:w="10"/><text x="7.2496%" y="335.50"></text></g><g><title>__softirqentry_text_start (10 samples, 0.02%)</title><rect x="6.9996%" y="309" width="0.0153%" height="15" fill="rgb(232,36,49)" fg:x="4577" fg:w="10"/><text x="7.2496%" y="319.50"></text></g><g><title>run_timer_softirq (10 samples, 0.02%)</title><rect x="6.9996%" y="293" width="0.0153%" height="15" fill="rgb(209,103,24)" fg:x="4577" fg:w="10"/><text x="7.2496%" y="303.50"></text></g><g><title>__run_timers.part.0 (10 samples, 0.02%)</title><rect x="6.9996%" y="277" width="0.0153%" height="15" fill="rgb(229,88,8)" fg:x="4577" fg:w="10"/><text x="7.2496%" y="287.50"></text></g><g><title>call_timer_fn (10 samples, 0.02%)</title><rect x="6.9996%" y="261" width="0.0153%" height="15" fill="rgb(213,181,19)" fg:x="4577" fg:w="10"/><text x="7.2496%" y="271.50"></text></g><g><title>vbg_heartbeat_timer (10 samples, 0.02%)</title><rect x="6.9996%" y="245" width="0.0153%" height="15" fill="rgb(254,191,54)" fg:x="4577" fg:w="10"/><text x="7.2496%" y="255.50"></text></g><g><title>vbg_req_perform (10 samples, 0.02%)</title><rect x="6.9996%" y="229" width="0.0153%" height="15" fill="rgb(241,83,37)" fg:x="4577" fg:w="10"/><text x="7.2496%" y="239.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::FromResidual&gt;::from_residual (1,388 samples, 2.12%)</title><rect x="4.9183%" y="389" width="2.1227%" height="15" fill="rgb(233,36,39)" fg:x="3216" fg:w="1388"/><text x="5.1683%" y="399.50">&lt;..</text></g><g><title>_init (17 samples, 0.03%)</title><rect x="7.0149%" y="373" width="0.0260%" height="15" fill="rgb(226,3,54)" fg:x="4587" fg:w="17"/><text x="7.2649%" y="383.50"></text></g><g><title>irq_exit_rcu (7 samples, 0.01%)</title><rect x="10.4039%" y="325" width="0.0107%" height="15" fill="rgb(245,192,40)" fg:x="6803" fg:w="7"/><text x="10.6539%" y="335.50"></text></g><g><title>__softirqentry_text_start (7 samples, 0.01%)</title><rect x="10.4039%" y="309" width="0.0107%" height="15" fill="rgb(238,167,29)" fg:x="6803" fg:w="7"/><text x="10.6539%" y="319.50"></text></g><g><title>run_timer_softirq (7 samples, 0.01%)</title><rect x="10.4039%" y="293" width="0.0107%" height="15" fill="rgb(232,182,51)" fg:x="6803" fg:w="7"/><text x="10.6539%" y="303.50"></text></g><g><title>__run_timers.part.0 (7 samples, 0.01%)</title><rect x="10.4039%" y="277" width="0.0107%" height="15" fill="rgb(231,60,39)" fg:x="6803" fg:w="7"/><text x="10.6539%" y="287.50"></text></g><g><title>call_timer_fn (7 samples, 0.01%)</title><rect x="10.4039%" y="261" width="0.0107%" height="15" fill="rgb(208,69,12)" fg:x="6803" fg:w="7"/><text x="10.6539%" y="271.50"></text></g><g><title>vbg_heartbeat_timer (7 samples, 0.01%)</title><rect x="10.4039%" y="245" width="0.0107%" height="15" fill="rgb(235,93,37)" fg:x="6803" fg:w="7"/><text x="10.6539%" y="255.50"></text></g><g><title>vbg_req_perform (7 samples, 0.01%)</title><rect x="10.4039%" y="229" width="0.0107%" height="15" fill="rgb(213,116,39)" fg:x="6803" fg:w="7"/><text x="10.6539%" y="239.50"></text></g><g><title>[libc.so.6] (1,682 samples, 2.57%)</title><rect x="7.8438%" y="373" width="2.5723%" height="15" fill="rgb(222,207,29)" fg:x="5129" fg:w="1682"/><text x="8.0938%" y="383.50">[l..</text></g><g><title>asm_sysvec_apic_timer_interrupt (8 samples, 0.01%)</title><rect x="10.4039%" y="357" width="0.0122%" height="15" fill="rgb(206,96,30)" fg:x="6803" fg:w="8"/><text x="10.6539%" y="367.50"></text></g><g><title>sysvec_apic_timer_interrupt (8 samples, 0.01%)</title><rect x="10.4039%" y="341" width="0.0122%" height="15" fill="rgb(218,138,4)" fg:x="6803" fg:w="8"/><text x="10.6539%" y="351.50"></text></g><g><title>_init (48 samples, 0.07%)</title><rect x="10.4161%" y="373" width="0.0734%" height="15" fill="rgb(250,191,14)" fg:x="6811" fg:w="48"/><text x="10.6661%" y="383.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (2,260 samples, 3.46%)</title><rect x="7.0409%" y="389" width="3.4562%" height="15" fill="rgb(239,60,40)" fg:x="4604" fg:w="2260"/><text x="7.2909%" y="399.50">&lt;co..</text></g><g><title>asm_sysvec_apic_timer_interrupt (9 samples, 0.01%)</title><rect x="12.8034%" y="373" width="0.0138%" height="15" fill="rgb(206,27,48)" fg:x="8372" fg:w="9"/><text x="13.0534%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (9 samples, 0.01%)</title><rect x="12.8034%" y="357" width="0.0138%" height="15" fill="rgb(225,35,8)" fg:x="8372" fg:w="9"/><text x="13.0534%" y="367.50"></text></g><g><title>irq_exit_rcu (9 samples, 0.01%)</title><rect x="12.8034%" y="341" width="0.0138%" height="15" fill="rgb(250,213,24)" fg:x="8372" fg:w="9"/><text x="13.0534%" y="351.50"></text></g><g><title>__softirqentry_text_start (9 samples, 0.01%)</title><rect x="12.8034%" y="325" width="0.0138%" height="15" fill="rgb(247,123,22)" fg:x="8372" fg:w="9"/><text x="13.0534%" y="335.50"></text></g><g><title>run_timer_softirq (9 samples, 0.01%)</title><rect x="12.8034%" y="309" width="0.0138%" height="15" fill="rgb(231,138,38)" fg:x="8372" fg:w="9"/><text x="13.0534%" y="319.50"></text></g><g><title>__run_timers.part.0 (9 samples, 0.01%)</title><rect x="12.8034%" y="293" width="0.0138%" height="15" fill="rgb(231,145,46)" fg:x="8372" fg:w="9"/><text x="13.0534%" y="303.50"></text></g><g><title>call_timer_fn (9 samples, 0.01%)</title><rect x="12.8034%" y="277" width="0.0138%" height="15" fill="rgb(251,118,11)" fg:x="8372" fg:w="9"/><text x="13.0534%" y="287.50"></text></g><g><title>vbg_heartbeat_timer (9 samples, 0.01%)</title><rect x="12.8034%" y="261" width="0.0138%" height="15" fill="rgb(217,147,25)" fg:x="8372" fg:w="9"/><text x="13.0534%" y="271.50"></text></g><g><title>vbg_req_perform (9 samples, 0.01%)</title><rect x="12.8034%" y="245" width="0.0138%" height="15" fill="rgb(247,81,37)" fg:x="8372" fg:w="9"/><text x="13.0534%" y="255.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (25 samples, 0.04%)</title><rect x="18.5291%" y="357" width="0.0382%" height="15" fill="rgb(209,12,38)" fg:x="12116" fg:w="25"/><text x="18.7791%" y="367.50"></text></g><g><title>sysvec_apic_timer_interrupt (25 samples, 0.04%)</title><rect x="18.5291%" y="341" width="0.0382%" height="15" fill="rgb(227,1,9)" fg:x="12116" fg:w="25"/><text x="18.7791%" y="351.50"></text></g><g><title>irq_exit_rcu (25 samples, 0.04%)</title><rect x="18.5291%" y="325" width="0.0382%" height="15" fill="rgb(248,47,43)" fg:x="12116" fg:w="25"/><text x="18.7791%" y="335.50"></text></g><g><title>__softirqentry_text_start (25 samples, 0.04%)</title><rect x="18.5291%" y="309" width="0.0382%" height="15" fill="rgb(221,10,30)" fg:x="12116" fg:w="25"/><text x="18.7791%" y="319.50"></text></g><g><title>run_timer_softirq (25 samples, 0.04%)</title><rect x="18.5291%" y="293" width="0.0382%" height="15" fill="rgb(210,229,1)" fg:x="12116" fg:w="25"/><text x="18.7791%" y="303.50"></text></g><g><title>__run_timers.part.0 (25 samples, 0.04%)</title><rect x="18.5291%" y="277" width="0.0382%" height="15" fill="rgb(222,148,37)" fg:x="12116" fg:w="25"/><text x="18.7791%" y="287.50"></text></g><g><title>call_timer_fn (25 samples, 0.04%)</title><rect x="18.5291%" y="261" width="0.0382%" height="15" fill="rgb(234,67,33)" fg:x="12116" fg:w="25"/><text x="18.7791%" y="271.50"></text></g><g><title>vbg_heartbeat_timer (25 samples, 0.04%)</title><rect x="18.5291%" y="245" width="0.0382%" height="15" fill="rgb(247,98,35)" fg:x="12116" fg:w="25"/><text x="18.7791%" y="255.50"></text></g><g><title>vbg_req_perform (25 samples, 0.04%)</title><rect x="18.5291%" y="229" width="0.0382%" height="15" fill="rgb(247,138,52)" fg:x="12116" fg:w="25"/><text x="18.7791%" y="239.50"></text></g><g><title>&lt;wfc::vec3d::PosIter3D as core::iter::traits::iterator::Iterator&gt;::next (5,278 samples, 8.07%)</title><rect x="10.4972%" y="389" width="8.0717%" height="15" fill="rgb(213,79,30)" fg:x="6864" fg:w="5278"/><text x="10.7472%" y="399.50">&lt;wfc::vec3d..</text></g><g><title>wfc::vec3d::get_pos_from_index (3,761 samples, 5.75%)</title><rect x="12.8171%" y="373" width="5.7517%" height="15" fill="rgb(246,177,23)" fg:x="8381" fg:w="3761"/><text x="13.0671%" y="383.50">wfc::ve..</text></g><g><title>asm_sysvec_apic_timer_interrupt (16 samples, 0.02%)</title><rect x="18.5719%" y="389" width="0.0245%" height="15" fill="rgb(230,62,27)" fg:x="12144" fg:w="16"/><text x="18.8219%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (16 samples, 0.02%)</title><rect x="18.5719%" y="373" width="0.0245%" height="15" fill="rgb(216,154,8)" fg:x="12144" fg:w="16"/><text x="18.8219%" y="383.50"></text></g><g><title>irq_exit_rcu (16 samples, 0.02%)</title><rect x="18.5719%" y="357" width="0.0245%" height="15" fill="rgb(244,35,45)" fg:x="12144" fg:w="16"/><text x="18.8219%" y="367.50"></text></g><g><title>__softirqentry_text_start (16 samples, 0.02%)</title><rect x="18.5719%" y="341" width="0.0245%" height="15" fill="rgb(251,115,12)" fg:x="12144" fg:w="16"/><text x="18.8219%" y="351.50"></text></g><g><title>run_timer_softirq (15 samples, 0.02%)</title><rect x="18.5735%" y="325" width="0.0229%" height="15" fill="rgb(240,54,50)" fg:x="12145" fg:w="15"/><text x="18.8235%" y="335.50"></text></g><g><title>__run_timers.part.0 (15 samples, 0.02%)</title><rect x="18.5735%" y="309" width="0.0229%" height="15" fill="rgb(233,84,52)" fg:x="12145" fg:w="15"/><text x="18.8235%" y="319.50"></text></g><g><title>call_timer_fn (15 samples, 0.02%)</title><rect x="18.5735%" y="293" width="0.0229%" height="15" fill="rgb(207,117,47)" fg:x="12145" fg:w="15"/><text x="18.8235%" y="303.50"></text></g><g><title>vbg_heartbeat_timer (15 samples, 0.02%)</title><rect x="18.5735%" y="277" width="0.0229%" height="15" fill="rgb(249,43,39)" fg:x="12145" fg:w="15"/><text x="18.8235%" y="287.50"></text></g><g><title>vbg_req_perform (15 samples, 0.02%)</title><rect x="18.5735%" y="261" width="0.0229%" height="15" fill="rgb(209,38,44)" fg:x="12145" fg:w="15"/><text x="18.8235%" y="271.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (23 samples, 0.04%)</title><rect x="23.0834%" y="373" width="0.0352%" height="15" fill="rgb(236,212,23)" fg:x="15094" fg:w="23"/><text x="23.3334%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (23 samples, 0.04%)</title><rect x="23.0834%" y="357" width="0.0352%" height="15" fill="rgb(242,79,21)" fg:x="15094" fg:w="23"/><text x="23.3334%" y="367.50"></text></g><g><title>irq_exit_rcu (23 samples, 0.04%)</title><rect x="23.0834%" y="341" width="0.0352%" height="15" fill="rgb(211,96,35)" fg:x="15094" fg:w="23"/><text x="23.3334%" y="351.50"></text></g><g><title>__softirqentry_text_start (23 samples, 0.04%)</title><rect x="23.0834%" y="325" width="0.0352%" height="15" fill="rgb(253,215,40)" fg:x="15094" fg:w="23"/><text x="23.3334%" y="335.50"></text></g><g><title>run_timer_softirq (22 samples, 0.03%)</title><rect x="23.0849%" y="309" width="0.0336%" height="15" fill="rgb(211,81,21)" fg:x="15095" fg:w="22"/><text x="23.3349%" y="319.50"></text></g><g><title>__run_timers.part.0 (22 samples, 0.03%)</title><rect x="23.0849%" y="293" width="0.0336%" height="15" fill="rgb(208,190,38)" fg:x="15095" fg:w="22"/><text x="23.3349%" y="303.50"></text></g><g><title>call_timer_fn (22 samples, 0.03%)</title><rect x="23.0849%" y="277" width="0.0336%" height="15" fill="rgb(235,213,38)" fg:x="15095" fg:w="22"/><text x="23.3349%" y="287.50"></text></g><g><title>vbg_heartbeat_timer (22 samples, 0.03%)</title><rect x="23.0849%" y="261" width="0.0336%" height="15" fill="rgb(237,122,38)" fg:x="15095" fg:w="22"/><text x="23.3349%" y="271.50"></text></g><g><title>vbg_req_perform (22 samples, 0.03%)</title><rect x="23.0849%" y="245" width="0.0336%" height="15" fill="rgb(244,218,35)" fg:x="15095" fg:w="22"/><text x="23.3349%" y="255.50"></text></g><g><title>irq_exit_rcu (9 samples, 0.01%)</title><rect x="26.4616%" y="309" width="0.0138%" height="15" fill="rgb(240,68,47)" fg:x="17303" fg:w="9"/><text x="26.7116%" y="319.50"></text></g><g><title>__softirqentry_text_start (9 samples, 0.01%)</title><rect x="26.4616%" y="293" width="0.0138%" height="15" fill="rgb(210,16,53)" fg:x="17303" fg:w="9"/><text x="26.7116%" y="303.50"></text></g><g><title>run_timer_softirq (9 samples, 0.01%)</title><rect x="26.4616%" y="277" width="0.0138%" height="15" fill="rgb(235,124,12)" fg:x="17303" fg:w="9"/><text x="26.7116%" y="287.50"></text></g><g><title>__run_timers.part.0 (9 samples, 0.01%)</title><rect x="26.4616%" y="261" width="0.0138%" height="15" fill="rgb(224,169,11)" fg:x="17303" fg:w="9"/><text x="26.7116%" y="271.50"></text></g><g><title>call_timer_fn (9 samples, 0.01%)</title><rect x="26.4616%" y="245" width="0.0138%" height="15" fill="rgb(250,166,2)" fg:x="17303" fg:w="9"/><text x="26.7116%" y="255.50"></text></g><g><title>vbg_heartbeat_timer (9 samples, 0.01%)</title><rect x="26.4616%" y="229" width="0.0138%" height="15" fill="rgb(242,216,29)" fg:x="17303" fg:w="9"/><text x="26.7116%" y="239.50"></text></g><g><title>vbg_req_perform (9 samples, 0.01%)</title><rect x="26.4616%" y="213" width="0.0138%" height="15" fill="rgb(230,116,27)" fg:x="17303" fg:w="9"/><text x="26.7116%" y="223.50"></text></g><g><title>[libc.so.6] (1,526 samples, 2.33%)</title><rect x="24.1432%" y="357" width="2.3337%" height="15" fill="rgb(228,99,48)" fg:x="15787" fg:w="1526"/><text x="24.3932%" y="367.50">[..</text></g><g><title>asm_sysvec_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="26.4616%" y="341" width="0.0153%" height="15" fill="rgb(253,11,6)" fg:x="17303" fg:w="10"/><text x="26.7116%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="26.4616%" y="325" width="0.0153%" height="15" fill="rgb(247,143,39)" fg:x="17303" fg:w="10"/><text x="26.7116%" y="335.50"></text></g><g><title>_init (23 samples, 0.04%)</title><rect x="26.4769%" y="357" width="0.0352%" height="15" fill="rgb(236,97,10)" fg:x="17313" fg:w="23"/><text x="26.7269%" y="367.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (7 samples, 0.01%)</title><rect x="28.6501%" y="309" width="0.0107%" height="15" fill="rgb(233,208,19)" fg:x="18734" fg:w="7"/><text x="28.9001%" y="319.50"></text></g><g><title>sysvec_apic_timer_interrupt (7 samples, 0.01%)</title><rect x="28.6501%" y="293" width="0.0107%" height="15" fill="rgb(216,164,2)" fg:x="18734" fg:w="7"/><text x="28.9001%" y="303.50"></text></g><g><title>irq_exit_rcu (7 samples, 0.01%)</title><rect x="28.6501%" y="277" width="0.0107%" height="15" fill="rgb(220,129,5)" fg:x="18734" fg:w="7"/><text x="28.9001%" y="287.50"></text></g><g><title>__softirqentry_text_start (7 samples, 0.01%)</title><rect x="28.6501%" y="261" width="0.0107%" height="15" fill="rgb(242,17,10)" fg:x="18734" fg:w="7"/><text x="28.9001%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (4,595 samples, 7.03%)</title><rect x="23.1201%" y="373" width="7.0272%" height="15" fill="rgb(242,107,0)" fg:x="15118" fg:w="4595"/><text x="23.3701%" y="383.50">core::ite..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,371 samples, 3.63%)</title><rect x="26.5213%" y="357" width="3.6260%" height="15" fill="rgb(251,28,31)" fg:x="17342" fg:w="2371"/><text x="26.7713%" y="367.50">core..</text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (1,874 samples, 2.87%)</title><rect x="27.2813%" y="341" width="2.8659%" height="15" fill="rgb(233,223,10)" fg:x="17839" fg:w="1874"/><text x="27.5313%" y="351.50">wf..</text></g><g><title>wfc::wfc::bits256_set::Bits256Set::len (1,756 samples, 2.69%)</title><rect x="27.4618%" y="325" width="2.6855%" height="15" fill="rgb(215,21,27)" fg:x="17957" fg:w="1756"/><text x="27.7118%" y="335.50">wf..</text></g><g><title>core::num::&lt;impl u128&gt;::count_ones (972 samples, 1.49%)</title><rect x="28.6608%" y="309" width="1.4865%" height="15" fill="rgb(232,23,21)" fg:x="18741" fg:w="972"/><text x="28.9108%" y="319.50"></text></g><g><title>irq_exit_rcu (9 samples, 0.01%)</title><rect x="31.6567%" y="325" width="0.0138%" height="15" fill="rgb(244,5,23)" fg:x="20700" fg:w="9"/><text x="31.9067%" y="335.50"></text></g><g><title>__softirqentry_text_start (9 samples, 0.01%)</title><rect x="31.6567%" y="309" width="0.0138%" height="15" fill="rgb(226,81,46)" fg:x="20700" fg:w="9"/><text x="31.9067%" y="319.50"></text></g><g><title>run_timer_softirq (9 samples, 0.01%)</title><rect x="31.6567%" y="293" width="0.0138%" height="15" fill="rgb(247,70,30)" fg:x="20700" fg:w="9"/><text x="31.9067%" y="303.50"></text></g><g><title>__run_timers.part.0 (9 samples, 0.01%)</title><rect x="31.6567%" y="277" width="0.0138%" height="15" fill="rgb(212,68,19)" fg:x="20700" fg:w="9"/><text x="31.9067%" y="287.50"></text></g><g><title>call_timer_fn (9 samples, 0.01%)</title><rect x="31.6567%" y="261" width="0.0138%" height="15" fill="rgb(240,187,13)" fg:x="20700" fg:w="9"/><text x="31.9067%" y="271.50"></text></g><g><title>vbg_heartbeat_timer (9 samples, 0.01%)</title><rect x="31.6567%" y="245" width="0.0138%" height="15" fill="rgb(223,113,26)" fg:x="20700" fg:w="9"/><text x="31.9067%" y="255.50"></text></g><g><title>vbg_req_perform (9 samples, 0.01%)</title><rect x="31.6567%" y="229" width="0.0138%" height="15" fill="rgb(206,192,2)" fg:x="20700" fg:w="9"/><text x="31.9067%" y="239.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="31.6567%" y="357" width="0.0153%" height="15" fill="rgb(241,108,4)" fg:x="20700" fg:w="10"/><text x="31.9067%" y="367.50"></text></g><g><title>sysvec_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="31.6567%" y="341" width="0.0153%" height="15" fill="rgb(247,173,49)" fg:x="20700" fg:w="10"/><text x="31.9067%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (49 samples, 0.07%)</title><rect x="32.9520%" y="293" width="0.0749%" height="15" fill="rgb(224,114,35)" fg:x="21547" fg:w="49"/><text x="33.2020%" y="303.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (49 samples, 0.07%)</title><rect x="32.9520%" y="277" width="0.0749%" height="15" fill="rgb(245,159,27)" fg:x="21547" fg:w="49"/><text x="33.2020%" y="287.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (49 samples, 0.07%)</title><rect x="32.9520%" y="261" width="0.0749%" height="15" fill="rgb(245,172,44)" fg:x="21547" fg:w="49"/><text x="33.2020%" y="271.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (11 samples, 0.02%)</title><rect x="36.9206%" y="261" width="0.0168%" height="15" fill="rgb(236,23,11)" fg:x="24142" fg:w="11"/><text x="37.1706%" y="271.50"></text></g><g><title>sysvec_apic_timer_interrupt (11 samples, 0.02%)</title><rect x="36.9206%" y="245" width="0.0168%" height="15" fill="rgb(205,117,38)" fg:x="24142" fg:w="11"/><text x="37.1706%" y="255.50"></text></g><g><title>irq_exit_rcu (11 samples, 0.02%)</title><rect x="36.9206%" y="229" width="0.0168%" height="15" fill="rgb(237,72,25)" fg:x="24142" fg:w="11"/><text x="37.1706%" y="239.50"></text></g><g><title>__softirqentry_text_start (11 samples, 0.02%)</title><rect x="36.9206%" y="213" width="0.0168%" height="15" fill="rgb(244,70,9)" fg:x="24142" fg:w="11"/><text x="37.1706%" y="223.50"></text></g><g><title>run_timer_softirq (10 samples, 0.02%)</title><rect x="36.9221%" y="197" width="0.0153%" height="15" fill="rgb(217,125,39)" fg:x="24143" fg:w="10"/><text x="37.1721%" y="207.50"></text></g><g><title>__run_timers.part.0 (10 samples, 0.02%)</title><rect x="36.9221%" y="181" width="0.0153%" height="15" fill="rgb(235,36,10)" fg:x="24143" fg:w="10"/><text x="37.1721%" y="191.50"></text></g><g><title>call_timer_fn (10 samples, 0.02%)</title><rect x="36.9221%" y="165" width="0.0153%" height="15" fill="rgb(251,123,47)" fg:x="24143" fg:w="10"/><text x="37.1721%" y="175.50"></text></g><g><title>vbg_heartbeat_timer (10 samples, 0.02%)</title><rect x="36.9221%" y="149" width="0.0153%" height="15" fill="rgb(221,13,13)" fg:x="24143" fg:w="10"/><text x="37.1721%" y="159.50"></text></g><g><title>vbg_req_perform (10 samples, 0.02%)</title><rect x="36.9221%" y="133" width="0.0153%" height="15" fill="rgb(238,131,9)" fg:x="24143" fg:w="10"/><text x="37.1721%" y="143.50"></text></g><g><title>irq_exit_rcu (10 samples, 0.02%)</title><rect x="38.3260%" y="213" width="0.0153%" height="15" fill="rgb(211,50,8)" fg:x="25061" fg:w="10"/><text x="38.5760%" y="223.50"></text></g><g><title>__softirqentry_text_start (10 samples, 0.02%)</title><rect x="38.3260%" y="197" width="0.0153%" height="15" fill="rgb(245,182,24)" fg:x="25061" fg:w="10"/><text x="38.5760%" y="207.50"></text></g><g><title>run_timer_softirq (10 samples, 0.02%)</title><rect x="38.3260%" y="181" width="0.0153%" height="15" fill="rgb(242,14,37)" fg:x="25061" fg:w="10"/><text x="38.5760%" y="191.50"></text></g><g><title>__run_timers.part.0 (10 samples, 0.02%)</title><rect x="38.3260%" y="165" width="0.0153%" height="15" fill="rgb(246,228,12)" fg:x="25061" fg:w="10"/><text x="38.5760%" y="175.50"></text></g><g><title>call_timer_fn (10 samples, 0.02%)</title><rect x="38.3260%" y="149" width="0.0153%" height="15" fill="rgb(213,55,15)" fg:x="25061" fg:w="10"/><text x="38.5760%" y="159.50"></text></g><g><title>vbg_heartbeat_timer (10 samples, 0.02%)</title><rect x="38.3260%" y="133" width="0.0153%" height="15" fill="rgb(209,9,3)" fg:x="25061" fg:w="10"/><text x="38.5760%" y="143.50"></text></g><g><title>vbg_req_perform (10 samples, 0.02%)</title><rect x="38.3260%" y="117" width="0.0153%" height="15" fill="rgb(230,59,30)" fg:x="25061" fg:w="10"/><text x="38.5760%" y="127.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2,274 samples, 3.48%)</title><rect x="34.8667%" y="277" width="3.4776%" height="15" fill="rgb(209,121,21)" fg:x="22799" fg:w="2274"/><text x="35.1167%" y="287.50">cor..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (920 samples, 1.41%)</title><rect x="36.9374%" y="261" width="1.4070%" height="15" fill="rgb(220,109,13)" fg:x="24153" fg:w="920"/><text x="37.1874%" y="271.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (12 samples, 0.02%)</title><rect x="38.3260%" y="245" width="0.0184%" height="15" fill="rgb(232,18,1)" fg:x="25061" fg:w="12"/><text x="38.5760%" y="255.50"></text></g><g><title>sysvec_apic_timer_interrupt (12 samples, 0.02%)</title><rect x="38.3260%" y="229" width="0.0184%" height="15" fill="rgb(215,41,42)" fg:x="25061" fg:w="12"/><text x="38.5760%" y="239.50"></text></g><g><title>core::ptr::invalid_mut (51 samples, 0.08%)</title><rect x="38.3719%" y="261" width="0.0780%" height="15" fill="rgb(224,123,36)" fg:x="25091" fg:w="51"/><text x="38.6219%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (3,726 samples, 5.70%)</title><rect x="32.9520%" y="309" width="5.6982%" height="15" fill="rgb(240,125,3)" fg:x="21547" fg:w="3726"/><text x="33.2020%" y="319.50">alloc::..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3,677 samples, 5.62%)</title><rect x="33.0270%" y="293" width="5.6233%" height="15" fill="rgb(205,98,50)" fg:x="21596" fg:w="3677"/><text x="33.2770%" y="303.50">core::p..</text></g><g><title>core::ptr::null_mut (200 samples, 0.31%)</title><rect x="38.3444%" y="277" width="0.3059%" height="15" fill="rgb(205,185,37)" fg:x="25073" fg:w="200"/><text x="38.5944%" y="287.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (131 samples, 0.20%)</title><rect x="38.4499%" y="261" width="0.2003%" height="15" fill="rgb(238,207,15)" fg:x="25142" fg:w="131"/><text x="38.6999%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,881 samples, 5.94%)</title><rect x="32.9031%" y="325" width="5.9352%" height="15" fill="rgb(213,199,42)" fg:x="21515" fg:w="3881"/><text x="33.1531%" y="335.50">&lt;alloc::..</text></g><g><title>core::slice::raw::from_raw_parts (122 samples, 0.19%)</title><rect x="38.6518%" y="309" width="0.1866%" height="15" fill="rgb(235,201,11)" fg:x="25274" fg:w="122"/><text x="38.9018%" y="319.50"></text></g><g><title>core::ptr::slice_from_raw_parts (64 samples, 0.10%)</title><rect x="38.7405%" y="293" width="0.0979%" height="15" fill="rgb(207,46,11)" fg:x="25332" fg:w="64"/><text x="38.9905%" y="303.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (64 samples, 0.10%)</title><rect x="38.7405%" y="277" width="0.0979%" height="15" fill="rgb(241,35,35)" fg:x="25332" fg:w="64"/><text x="38.9905%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4,144 samples, 6.34%)</title><rect x="32.6890%" y="341" width="6.3375%" height="15" fill="rgb(243,32,47)" fg:x="21375" fg:w="4144"/><text x="32.9390%" y="351.50">&lt;alloc::..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (123 samples, 0.19%)</title><rect x="38.8383%" y="325" width="0.1881%" height="15" fill="rgb(247,202,23)" fg:x="25396" fg:w="123"/><text x="39.0883%" y="335.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (80 samples, 0.12%)</title><rect x="38.9041%" y="309" width="0.1223%" height="15" fill="rgb(219,102,11)" fg:x="25439" fg:w="80"/><text x="39.1541%" y="319.50"></text></g><g><title>&lt;wfc::wfc::bits256_set::Bits256Set as core::clone::Clone&gt;::clone (84 samples, 0.13%)</title><rect x="39.0264%" y="341" width="0.1285%" height="15" fill="rgb(243,110,44)" fg:x="25519" fg:w="84"/><text x="39.2764%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25,037 samples, 38.29%)</title><rect x="0.8671%" y="421" width="38.2893%" height="15" fill="rgb(222,74,54)" fg:x="567" fg:w="25037"/><text x="1.1171%" y="431.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::it..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24,784 samples, 37.90%)</title><rect x="1.2540%" y="405" width="37.9024%" height="15" fill="rgb(216,99,12)" fg:x="820" fg:w="24784"/><text x="1.5040%" y="415.50">core::iter::traits::iterator::Iterator::try_fold</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (13,444 samples, 20.56%)</title><rect x="18.5964%" y="389" width="20.5600%" height="15" fill="rgb(226,22,26)" fg:x="12160" fg:w="13444"/><text x="18.8464%" y="399.50">core::iter::adapters::map::map_t..</text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (5,891 samples, 9.01%)</title><rect x="30.1473%" y="373" width="9.0092%" height="15" fill="rgb(217,163,10)" fg:x="19713" fg:w="5891"/><text x="30.3973%" y="383.50">wfc::wfc::que..</text></g><g><title>wfc::vec3d::Vec3D&lt;T&gt;::get (4,894 samples, 7.48%)</title><rect x="31.6720%" y="357" width="7.4844%" height="15" fill="rgb(213,25,53)" fg:x="20710" fg:w="4894"/><text x="31.9220%" y="367.50">wfc::vec3d..</text></g><g><title>[libc.so.6] (1,221 samples, 1.87%)</title><rect x="39.4271%" y="405" width="1.8673%" height="15" fill="rgb(252,105,26)" fg:x="25781" fg:w="1221"/><text x="39.6771%" y="415.50">[..</text></g><g><title>asm_sysvec_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="41.2791%" y="389" width="0.0153%" height="15" fill="rgb(220,39,43)" fg:x="26992" fg:w="10"/><text x="41.5291%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="41.2791%" y="373" width="0.0153%" height="15" fill="rgb(229,68,48)" fg:x="26992" fg:w="10"/><text x="41.5291%" y="383.50"></text></g><g><title>irq_exit_rcu (10 samples, 0.02%)</title><rect x="41.2791%" y="357" width="0.0153%" height="15" fill="rgb(252,8,32)" fg:x="26992" fg:w="10"/><text x="41.5291%" y="367.50"></text></g><g><title>__softirqentry_text_start (10 samples, 0.02%)</title><rect x="41.2791%" y="341" width="0.0153%" height="15" fill="rgb(223,20,43)" fg:x="26992" fg:w="10"/><text x="41.5291%" y="351.50"></text></g><g><title>run_timer_softirq (10 samples, 0.02%)</title><rect x="41.2791%" y="325" width="0.0153%" height="15" fill="rgb(229,81,49)" fg:x="26992" fg:w="10"/><text x="41.5291%" y="335.50"></text></g><g><title>__run_timers.part.0 (10 samples, 0.02%)</title><rect x="41.2791%" y="309" width="0.0153%" height="15" fill="rgb(236,28,36)" fg:x="26992" fg:w="10"/><text x="41.5291%" y="319.50"></text></g><g><title>call_timer_fn (10 samples, 0.02%)</title><rect x="41.2791%" y="293" width="0.0153%" height="15" fill="rgb(249,185,26)" fg:x="26992" fg:w="10"/><text x="41.5291%" y="303.50"></text></g><g><title>vbg_heartbeat_timer (10 samples, 0.02%)</title><rect x="41.2791%" y="277" width="0.0153%" height="15" fill="rgb(249,174,33)" fg:x="26992" fg:w="10"/><text x="41.5291%" y="287.50"></text></g><g><title>vbg_req_perform (10 samples, 0.02%)</title><rect x="41.2791%" y="261" width="0.0153%" height="15" fill="rgb(233,201,37)" fg:x="26992" fg:w="10"/><text x="41.5291%" y="271.50"></text></g><g><title>_init (14 samples, 0.02%)</title><rect x="41.2944%" y="405" width="0.0214%" height="15" fill="rgb(221,78,26)" fg:x="27002" fg:w="14"/><text x="41.5444%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (26,692 samples, 40.82%)</title><rect x="0.5016%" y="453" width="40.8203%" height="15" fill="rgb(250,127,30)" fg:x="328" fg:w="26692"/><text x="0.7516%" y="463.50">&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::i..</text></g><g><title>core::iter::traits::iterator::Iterator::find (26,641 samples, 40.74%)</title><rect x="0.5796%" y="437" width="40.7423%" height="15" fill="rgb(230,49,44)" fg:x="379" fg:w="26641"/><text x="0.8296%" y="447.50">core::iter::traits::iterator::Iterator::find</text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (1,415 samples, 2.16%)</title><rect x="39.1580%" y="421" width="2.1640%" height="15" fill="rgb(229,67,23)" fg:x="25605" fg:w="1415"/><text x="39.4080%" y="431.50">c..</text></g><g><title>[libc.so.6] (858 samples, 1.31%)</title><rect x="41.3250%" y="453" width="1.3121%" height="15" fill="rgb(249,83,47)" fg:x="27022" fg:w="858"/><text x="41.5750%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (974 samples, 1.49%)</title><rect x="43.3498%" y="421" width="1.4895%" height="15" fill="rgb(215,43,3)" fg:x="28346" fg:w="974"/><text x="43.5998%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (420 samples, 0.64%)</title><rect x="44.1970%" y="405" width="0.6423%" height="15" fill="rgb(238,154,13)" fg:x="28900" fg:w="420"/><text x="44.4470%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1,558 samples, 2.38%)</title><rect x="42.6371%" y="453" width="2.3827%" height="15" fill="rgb(219,56,2)" fg:x="27880" fg:w="1558"/><text x="42.8871%" y="463.50">al..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1,537 samples, 2.35%)</title><rect x="42.6693%" y="437" width="2.3505%" height="15" fill="rgb(233,0,4)" fg:x="27901" fg:w="1537"/><text x="42.9193%" y="447.50">c..</text></g><g><title>core::ptr::null_mut (118 samples, 0.18%)</title><rect x="44.8393%" y="421" width="0.1805%" height="15" fill="rgb(235,30,7)" fg:x="29320" fg:w="118"/><text x="45.0893%" y="431.50"></text></g><g><title>core::ptr::invalid_mut (59 samples, 0.09%)</title><rect x="44.9296%" y="405" width="0.0902%" height="15" fill="rgb(250,79,13)" fg:x="29379" fg:w="59"/><text x="45.1796%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (17 samples, 0.03%)</title><rect x="45.0198%" y="453" width="0.0260%" height="15" fill="rgb(211,146,34)" fg:x="29438" fg:w="17"/><text x="45.2698%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (17 samples, 0.03%)</title><rect x="45.0198%" y="437" width="0.0260%" height="15" fill="rgb(228,22,38)" fg:x="29438" fg:w="17"/><text x="45.2698%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (95 samples, 0.15%)</title><rect x="45.0458%" y="453" width="0.1453%" height="15" fill="rgb(235,168,5)" fg:x="29455" fg:w="95"/><text x="45.2958%" y="463.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.01%)</title><rect x="45.2003%" y="341" width="0.0107%" height="15" fill="rgb(221,155,16)" fg:x="29556" fg:w="7"/><text x="45.4503%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.02%)</title><rect x="45.1987%" y="373" width="0.0184%" height="15" fill="rgb(215,215,53)" fg:x="29555" fg:w="12"/><text x="45.4487%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.02%)</title><rect x="45.1987%" y="357" width="0.0184%" height="15" fill="rgb(223,4,10)" fg:x="29555" fg:w="12"/><text x="45.4487%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.02%)</title><rect x="45.1972%" y="389" width="0.0229%" height="15" fill="rgb(234,103,6)" fg:x="29554" fg:w="15"/><text x="45.4472%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (21 samples, 0.03%)</title><rect x="45.1911%" y="453" width="0.0321%" height="15" fill="rgb(227,97,0)" fg:x="29550" fg:w="21"/><text x="45.4411%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 0.03%)</title><rect x="45.1926%" y="437" width="0.0306%" height="15" fill="rgb(234,150,53)" fg:x="29551" fg:w="20"/><text x="45.4426%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.03%)</title><rect x="45.1957%" y="421" width="0.0275%" height="15" fill="rgb(228,201,54)" fg:x="29553" fg:w="18"/><text x="45.4457%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.03%)</title><rect x="45.1957%" y="405" width="0.0275%" height="15" fill="rgb(222,22,37)" fg:x="29553" fg:w="18"/><text x="45.4457%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (9 samples, 0.01%)</title><rect x="45.2232%" y="453" width="0.0138%" height="15" fill="rgb(237,53,32)" fg:x="29571" fg:w="9"/><text x="45.4732%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (37 samples, 0.06%)</title><rect x="45.2400%" y="453" width="0.0566%" height="15" fill="rgb(233,25,53)" fg:x="29582" fg:w="37"/><text x="45.4900%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (19 samples, 0.03%)</title><rect x="45.2676%" y="437" width="0.0291%" height="15" fill="rgb(210,40,34)" fg:x="29600" fg:w="19"/><text x="45.5176%" y="447.50"></text></g><g><title>[libc.so.6] (449 samples, 0.69%)</title><rect x="45.3058%" y="437" width="0.6867%" height="15" fill="rgb(241,220,44)" fg:x="29625" fg:w="449"/><text x="45.5558%" y="447.50"></text></g><g><title>_init (17 samples, 0.03%)</title><rect x="45.9924%" y="437" width="0.0260%" height="15" fill="rgb(235,28,35)" fg:x="30074" fg:w="17"/><text x="46.2424%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (29,873 samples, 45.69%)</title><rect x="0.3364%" y="485" width="45.6851%" height="15" fill="rgb(210,56,17)" fg:x="220" fg:w="29873"/><text x="0.5864%" y="495.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_ex..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (29,873 samples, 45.69%)</title><rect x="0.3364%" y="469" width="45.6851%" height="15" fill="rgb(224,130,29)" fg:x="220" fg:w="29873"/><text x="0.5864%" y="479.50">alloc::vec::Vec&lt;T,A&gt;::extend_desugared</text></g><g><title>core::ptr::write (474 samples, 0.72%)</title><rect x="45.2966%" y="453" width="0.7249%" height="15" fill="rgb(235,212,8)" fg:x="29619" fg:w="474"/><text x="45.5466%" y="463.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (25 samples, 0.04%)</title><rect x="46.0597%" y="421" width="0.0382%" height="15" fill="rgb(223,33,50)" fg:x="30118" fg:w="25"/><text x="46.3097%" y="431.50"></text></g><g><title>&lt;wfc::vec3d::PosIter3D as core::iter::traits::iterator::Iterator&gt;::next (168 samples, 0.26%)</title><rect x="46.0980%" y="421" width="0.2569%" height="15" fill="rgb(219,149,13)" fg:x="30143" fg:w="168"/><text x="46.3480%" y="431.50"></text></g><g><title>wfc::vec3d::get_pos_from_index (127 samples, 0.19%)</title><rect x="46.1607%" y="405" width="0.1942%" height="15" fill="rgb(250,156,29)" fg:x="30184" fg:w="127"/><text x="46.4107%" y="415.50"></text></g><g><title>[libc.so.6] (42 samples, 0.06%)</title><rect x="46.5537%" y="389" width="0.0642%" height="15" fill="rgb(216,193,19)" fg:x="30441" fg:w="42"/><text x="46.8037%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (134 samples, 0.20%)</title><rect x="46.5246%" y="405" width="0.2049%" height="15" fill="rgb(216,135,14)" fg:x="30422" fg:w="134"/><text x="46.7746%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (73 samples, 0.11%)</title><rect x="46.6179%" y="389" width="0.1116%" height="15" fill="rgb(241,47,5)" fg:x="30483" fg:w="73"/><text x="46.8679%" y="399.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (60 samples, 0.09%)</title><rect x="46.6378%" y="373" width="0.0918%" height="15" fill="rgb(233,42,35)" fg:x="30496" fg:w="60"/><text x="46.8878%" y="383.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::len (51 samples, 0.08%)</title><rect x="46.6516%" y="357" width="0.0780%" height="15" fill="rgb(231,13,6)" fg:x="30505" fg:w="51"/><text x="46.9016%" y="367.50"></text></g><g><title>core::num::&lt;impl u128&gt;::count_ones (30 samples, 0.05%)</title><rect x="46.6837%" y="341" width="0.0459%" height="15" fill="rgb(207,181,40)" fg:x="30526" fg:w="30"/><text x="46.9337%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (93 samples, 0.14%)</title><rect x="46.9559%" y="309" width="0.1422%" height="15" fill="rgb(254,173,49)" fg:x="30704" fg:w="93"/><text x="47.2059%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (44 samples, 0.07%)</title><rect x="47.0308%" y="293" width="0.0673%" height="15" fill="rgb(221,1,38)" fg:x="30753" fg:w="44"/><text x="47.2808%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (157 samples, 0.24%)</title><rect x="46.8703%" y="341" width="0.2401%" height="15" fill="rgb(206,124,46)" fg:x="30648" fg:w="157"/><text x="47.1203%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (152 samples, 0.23%)</title><rect x="46.8779%" y="325" width="0.2325%" height="15" fill="rgb(249,21,11)" fg:x="30653" fg:w="152"/><text x="47.1279%" y="335.50"></text></g><g><title>core::ptr::null_mut (8 samples, 0.01%)</title><rect x="47.0981%" y="309" width="0.0122%" height="15" fill="rgb(222,201,40)" fg:x="30797" fg:w="8"/><text x="47.3481%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (162 samples, 0.25%)</title><rect x="46.8687%" y="357" width="0.2477%" height="15" fill="rgb(235,61,29)" fg:x="30647" fg:w="162"/><text x="47.1187%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (168 samples, 0.26%)</title><rect x="46.8672%" y="373" width="0.2569%" height="15" fill="rgb(219,207,3)" fg:x="30646" fg:w="168"/><text x="47.1172%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (728 samples, 1.11%)</title><rect x="46.0215%" y="485" width="1.1133%" height="15" fill="rgb(222,56,46)" fg:x="30093" fg:w="728"/><text x="46.2715%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (728 samples, 1.11%)</title><rect x="46.0215%" y="469" width="1.1133%" height="15" fill="rgb(239,76,54)" fg:x="30093" fg:w="728"/><text x="46.2715%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (728 samples, 1.11%)</title><rect x="46.0215%" y="453" width="1.1133%" height="15" fill="rgb(231,124,27)" fg:x="30093" fg:w="728"/><text x="46.2715%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (727 samples, 1.11%)</title><rect x="46.0230%" y="437" width="1.1118%" height="15" fill="rgb(249,195,6)" fg:x="30094" fg:w="727"/><text x="46.2730%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (510 samples, 0.78%)</title><rect x="46.3549%" y="421" width="0.7799%" height="15" fill="rgb(237,174,47)" fg:x="30311" fg:w="510"/><text x="46.6049%" y="431.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (265 samples, 0.41%)</title><rect x="46.7296%" y="405" width="0.4053%" height="15" fill="rgb(206,201,31)" fg:x="30556" fg:w="265"/><text x="46.9796%" y="415.50"></text></g><g><title>wfc::vec3d::Vec3D&lt;T&gt;::get (222 samples, 0.34%)</title><rect x="46.7953%" y="389" width="0.3395%" height="15" fill="rgb(231,57,52)" fg:x="30599" fg:w="222"/><text x="47.0453%" y="399.50"></text></g><g><title>&lt;wfc::wfc::bits256_set::Bits256Set as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="47.1241%" y="373" width="0.0107%" height="15" fill="rgb(248,177,22)" fg:x="30814" fg:w="7"/><text x="47.3741%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (30,605 samples, 46.80%)</title><rect x="0.3319%" y="549" width="46.8045%" height="15" fill="rgb(215,211,37)" fg:x="217" fg:w="30605"/><text x="0.5819%" y="559.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (30,605 samples, 46.80%)</title><rect x="0.3319%" y="533" width="46.8045%" height="15" fill="rgb(241,128,51)" fg:x="217" fg:w="30605"/><text x="0.5819%" y="543.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_it..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (30,604 samples, 46.80%)</title><rect x="0.3334%" y="517" width="46.8030%" height="15" fill="rgb(227,165,31)" fg:x="218" fg:w="30604"/><text x="0.5834%" y="527.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (30,604 samples, 46.80%)</title><rect x="0.3334%" y="501" width="46.8030%" height="15" fill="rgb(228,167,24)" fg:x="218" fg:w="30604"/><text x="0.5834%" y="511.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;..</text></g><g><title>core::slice::sort::choose_pivot (8 samples, 0.01%)</title><rect x="47.1471%" y="501" width="0.0122%" height="15" fill="rgb(228,143,12)" fg:x="30829" fg:w="8"/><text x="47.3971%" y="511.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (8 samples, 0.01%)</title><rect x="47.1471%" y="485" width="0.0122%" height="15" fill="rgb(249,149,8)" fg:x="30829" fg:w="8"/><text x="47.3971%" y="495.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (8 samples, 0.01%)</title><rect x="47.1471%" y="469" width="0.0122%" height="15" fill="rgb(243,35,44)" fg:x="30829" fg:w="8"/><text x="47.3971%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (37 samples, 0.06%)</title><rect x="47.1731%" y="485" width="0.0566%" height="15" fill="rgb(246,89,9)" fg:x="30846" fg:w="37"/><text x="47.4231%" y="495.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (30 samples, 0.05%)</title><rect x="47.1838%" y="469" width="0.0459%" height="15" fill="rgb(233,213,13)" fg:x="30853" fg:w="30"/><text x="47.4338%" y="479.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::len (21 samples, 0.03%)</title><rect x="47.1975%" y="453" width="0.0321%" height="15" fill="rgb(233,141,41)" fg:x="30862" fg:w="21"/><text x="47.4475%" y="463.50"></text></g><g><title>core::num::&lt;impl u128&gt;::count_ones (15 samples, 0.02%)</title><rect x="47.2067%" y="437" width="0.0229%" height="15" fill="rgb(239,167,4)" fg:x="30868" fg:w="15"/><text x="47.4567%" y="447.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (64 samples, 0.10%)</title><rect x="47.1593%" y="501" width="0.0979%" height="15" fill="rgb(209,217,16)" fg:x="30837" fg:w="64"/><text x="47.4093%" y="511.50"></text></g><g><title>core::slice::sort::shift_tail (14 samples, 0.02%)</title><rect x="47.2358%" y="485" width="0.0214%" height="15" fill="rgb(219,88,35)" fg:x="30887" fg:w="14"/><text x="47.4858%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (9 samples, 0.01%)</title><rect x="47.2434%" y="469" width="0.0138%" height="15" fill="rgb(220,193,23)" fg:x="30892" fg:w="9"/><text x="47.4934%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (8 samples, 0.01%)</title><rect x="47.3719%" y="485" width="0.0122%" height="15" fill="rgb(230,90,52)" fg:x="30976" fg:w="8"/><text x="47.6219%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (8 samples, 0.01%)</title><rect x="47.3719%" y="469" width="0.0122%" height="15" fill="rgb(252,106,19)" fg:x="30976" fg:w="8"/><text x="47.6219%" y="479.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (73 samples, 0.11%)</title><rect x="47.3994%" y="469" width="0.1116%" height="15" fill="rgb(206,74,20)" fg:x="30994" fg:w="73"/><text x="47.6494%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::partial_cmp (31 samples, 0.05%)</title><rect x="47.5982%" y="453" width="0.0474%" height="15" fill="rgb(230,138,44)" fg:x="31124" fg:w="31"/><text x="47.8482%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (26 samples, 0.04%)</title><rect x="47.6059%" y="437" width="0.0398%" height="15" fill="rgb(235,182,43)" fg:x="31129" fg:w="26"/><text x="47.8559%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (54 samples, 0.08%)</title><rect x="47.6456%" y="453" width="0.0826%" height="15" fill="rgb(242,16,51)" fg:x="31155" fg:w="54"/><text x="47.8956%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (450 samples, 0.69%)</title><rect x="47.3841%" y="485" width="0.6882%" height="15" fill="rgb(248,9,4)" fg:x="30984" fg:w="450"/><text x="47.6341%" y="495.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (367 samples, 0.56%)</title><rect x="47.5110%" y="469" width="0.5613%" height="15" fill="rgb(210,31,22)" fg:x="31067" fg:w="367"/><text x="47.7610%" y="479.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::len (225 samples, 0.34%)</title><rect x="47.7282%" y="453" width="0.3441%" height="15" fill="rgb(239,54,39)" fg:x="31209" fg:w="225"/><text x="47.9782%" y="463.50"></text></g><g><title>core::num::&lt;impl u128&gt;::count_ones (123 samples, 0.19%)</title><rect x="47.8842%" y="437" width="0.1881%" height="15" fill="rgb(230,99,41)" fg:x="31311" fg:w="123"/><text x="48.1342%" y="447.50"></text></g><g><title>core::cmp::min (12 samples, 0.02%)</title><rect x="48.5953%" y="469" width="0.0184%" height="15" fill="rgb(253,106,12)" fg:x="31776" fg:w="12"/><text x="48.8453%" y="479.50"></text></g><g><title>core::cmp::Ord::min (12 samples, 0.02%)</title><rect x="48.5953%" y="453" width="0.0184%" height="15" fill="rgb(213,46,41)" fg:x="31776" fg:w="12"/><text x="48.8453%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (35 samples, 0.05%)</title><rect x="48.6198%" y="469" width="0.0535%" height="15" fill="rgb(215,133,35)" fg:x="31792" fg:w="35"/><text x="48.8698%" y="479.50"></text></g><g><title>[libc.so.6] (35 samples, 0.05%)</title><rect x="48.6198%" y="453" width="0.0535%" height="15" fill="rgb(213,28,5)" fg:x="31792" fg:w="35"/><text x="48.8698%" y="463.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (33 samples, 0.05%)</title><rect x="48.9639%" y="437" width="0.0505%" height="15" fill="rgb(215,77,49)" fg:x="32017" fg:w="33"/><text x="49.2139%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (34 samples, 0.05%)</title><rect x="49.0174%" y="437" width="0.0520%" height="15" fill="rgb(248,100,22)" fg:x="32052" fg:w="34"/><text x="49.2674%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (862 samples, 1.32%)</title><rect x="48.6733%" y="469" width="1.3183%" height="15" fill="rgb(208,67,9)" fg:x="31827" fg:w="862"/><text x="48.9233%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (862 samples, 1.32%)</title><rect x="48.6733%" y="453" width="1.3183%" height="15" fill="rgb(219,133,21)" fg:x="31827" fg:w="862"/><text x="48.9233%" y="463.50"></text></g><g><title>core::mem::replace (603 samples, 0.92%)</title><rect x="49.0694%" y="437" width="0.9222%" height="15" fill="rgb(246,46,29)" fg:x="32086" fg:w="603"/><text x="49.3194%" y="447.50"></text></g><g><title>core::ptr::read (122 samples, 0.19%)</title><rect x="49.8050%" y="421" width="0.1866%" height="15" fill="rgb(246,185,52)" fg:x="32567" fg:w="122"/><text x="50.0550%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (215 samples, 0.33%)</title><rect x="49.9916%" y="469" width="0.3288%" height="15" fill="rgb(252,136,11)" fg:x="32689" fg:w="215"/><text x="50.2416%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (191 samples, 0.29%)</title><rect x="50.0283%" y="453" width="0.2921%" height="15" fill="rgb(219,138,53)" fg:x="32713" fg:w="191"/><text x="50.2783%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (29 samples, 0.04%)</title><rect x="50.3204%" y="469" width="0.0443%" height="15" fill="rgb(211,51,23)" fg:x="32904" fg:w="29"/><text x="50.5704%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (17 samples, 0.03%)</title><rect x="50.3387%" y="453" width="0.0260%" height="15" fill="rgb(247,221,28)" fg:x="32916" fg:w="17"/><text x="50.5887%" y="463.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (275 samples, 0.42%)</title><rect x="50.4963%" y="453" width="0.4206%" height="15" fill="rgb(251,222,45)" fg:x="33019" fg:w="275"/><text x="50.7463%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::partial_cmp (168 samples, 0.26%)</title><rect x="51.3037%" y="437" width="0.2569%" height="15" fill="rgb(217,162,53)" fg:x="33547" fg:w="168"/><text x="51.5537%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (110 samples, 0.17%)</title><rect x="51.3924%" y="421" width="0.1682%" height="15" fill="rgb(229,93,14)" fg:x="33605" fg:w="110"/><text x="51.6424%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (345 samples, 0.53%)</title><rect x="51.5607%" y="437" width="0.5276%" height="15" fill="rgb(209,67,49)" fg:x="33715" fg:w="345"/><text x="51.8107%" y="447.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (7 samples, 0.01%)</title><rect x="53.0670%" y="421" width="0.0107%" height="15" fill="rgb(213,87,29)" fg:x="34700" fg:w="7"/><text x="53.3170%" y="431.50"></text></g><g><title>sysvec_apic_timer_interrupt (7 samples, 0.01%)</title><rect x="53.0670%" y="405" width="0.0107%" height="15" fill="rgb(205,151,52)" fg:x="34700" fg:w="7"/><text x="53.3170%" y="415.50"></text></g><g><title>irq_exit_rcu (7 samples, 0.01%)</title><rect x="53.0670%" y="389" width="0.0107%" height="15" fill="rgb(253,215,39)" fg:x="34700" fg:w="7"/><text x="53.3170%" y="399.50"></text></g><g><title>__softirqentry_text_start (7 samples, 0.01%)</title><rect x="53.0670%" y="373" width="0.0107%" height="15" fill="rgb(221,220,41)" fg:x="34700" fg:w="7"/><text x="53.3170%" y="383.50"></text></g><g><title>run_timer_softirq (7 samples, 0.01%)</title><rect x="53.0670%" y="357" width="0.0107%" height="15" fill="rgb(218,133,21)" fg:x="34700" fg:w="7"/><text x="53.3170%" y="367.50"></text></g><g><title>__run_timers.part.0 (7 samples, 0.01%)</title><rect x="53.0670%" y="341" width="0.0107%" height="15" fill="rgb(221,193,43)" fg:x="34700" fg:w="7"/><text x="53.3170%" y="351.50"></text></g><g><title>call_timer_fn (7 samples, 0.01%)</title><rect x="53.0670%" y="325" width="0.0107%" height="15" fill="rgb(240,128,52)" fg:x="34700" fg:w="7"/><text x="53.3170%" y="335.50"></text></g><g><title>vbg_heartbeat_timer (7 samples, 0.01%)</title><rect x="53.0670%" y="309" width="0.0107%" height="15" fill="rgb(253,114,12)" fg:x="34700" fg:w="7"/><text x="53.3170%" y="319.50"></text></g><g><title>vbg_req_perform (7 samples, 0.01%)</title><rect x="53.0670%" y="293" width="0.0107%" height="15" fill="rgb(215,223,47)" fg:x="34700" fg:w="7"/><text x="53.3170%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (2,339 samples, 3.58%)</title><rect x="50.3739%" y="469" width="3.5771%" height="15" fill="rgb(248,225,23)" fg:x="32939" fg:w="2339"/><text x="50.6239%" y="479.50">core..</text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (1,984 samples, 3.03%)</title><rect x="50.9168%" y="453" width="3.0341%" height="15" fill="rgb(250,108,0)" fg:x="33294" fg:w="1984"/><text x="51.1668%" y="463.50">wfc..</text></g><g><title>wfc::wfc::bits256_set::Bits256Set::len (1,218 samples, 1.86%)</title><rect x="52.0883%" y="437" width="1.8627%" height="15" fill="rgb(228,208,7)" fg:x="34060" fg:w="1218"/><text x="52.3383%" y="447.50">w..</text></g><g><title>core::num::&lt;impl u128&gt;::count_ones (571 samples, 0.87%)</title><rect x="53.0777%" y="421" width="0.8732%" height="15" fill="rgb(244,45,10)" fg:x="34707" fg:w="571"/><text x="53.3277%" y="431.50"></text></g><g><title>core::slice::sort::partition (4,379 samples, 6.70%)</title><rect x="47.2572%" y="501" width="6.6968%" height="15" fill="rgb(207,125,25)" fg:x="30901" fg:w="4379"/><text x="47.5072%" y="511.50">core::sli..</text></g><g><title>core::slice::sort::partition_in_blocks (3,846 samples, 5.88%)</title><rect x="48.0723%" y="485" width="5.8817%" height="15" fill="rgb(210,195,18)" fg:x="31434" fg:w="3846"/><text x="48.3223%" y="495.50">core::s..</text></g><g><title>core::ptr::swap (11 samples, 0.02%)</title><rect x="54.4908%" y="485" width="0.0168%" height="15" fill="rgb(249,80,12)" fg:x="35631" fg:w="11"/><text x="54.7408%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="54.4969%" y="469" width="0.0107%" height="15" fill="rgb(221,65,9)" fg:x="35635" fg:w="7"/><text x="54.7469%" y="479.50"></text></g><g><title>[libc.so.6] (7 samples, 0.01%)</title><rect x="54.4969%" y="453" width="0.0107%" height="15" fill="rgb(235,49,36)" fg:x="35635" fg:w="7"/><text x="54.7469%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (26 samples, 0.04%)</title><rect x="54.5076%" y="485" width="0.0398%" height="15" fill="rgb(225,32,20)" fg:x="35642" fg:w="26"/><text x="54.7576%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (26 samples, 0.04%)</title><rect x="54.5076%" y="469" width="0.0398%" height="15" fill="rgb(215,141,46)" fg:x="35642" fg:w="26"/><text x="54.7576%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (15 samples, 0.02%)</title><rect x="54.5245%" y="453" width="0.0229%" height="15" fill="rgb(250,160,47)" fg:x="35653" fg:w="15"/><text x="54.7745%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (15 samples, 0.02%)</title><rect x="54.5245%" y="437" width="0.0229%" height="15" fill="rgb(216,222,40)" fg:x="35653" fg:w="15"/><text x="54.7745%" y="447.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (279 samples, 0.43%)</title><rect x="54.6376%" y="469" width="0.4267%" height="15" fill="rgb(234,217,39)" fg:x="35727" fg:w="279"/><text x="54.8876%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::partial_cmp (108 samples, 0.17%)</title><rect x="55.3503%" y="453" width="0.1652%" height="15" fill="rgb(207,178,40)" fg:x="36193" fg:w="108"/><text x="55.6003%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (78 samples, 0.12%)</title><rect x="55.3962%" y="437" width="0.1193%" height="15" fill="rgb(221,136,13)" fg:x="36223" fg:w="78"/><text x="55.6462%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (215 samples, 0.33%)</title><rect x="55.5155%" y="453" width="0.3288%" height="15" fill="rgb(249,199,10)" fg:x="36301" fg:w="215"/><text x="55.7655%" y="463.50"></text></g><g><title>core::slice::sort::partition_equal (2,225 samples, 3.40%)</title><rect x="53.9540%" y="501" width="3.4027%" height="15" fill="rgb(249,222,13)" fg:x="35280" fg:w="2225"/><text x="54.2040%" y="511.50">cor..</text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (1,837 samples, 2.81%)</title><rect x="54.5474%" y="485" width="2.8093%" height="15" fill="rgb(244,185,38)" fg:x="35668" fg:w="1837"/><text x="54.7974%" y="495.50">co..</text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (1,499 samples, 2.29%)</title><rect x="55.0643%" y="469" width="2.2924%" height="15" fill="rgb(236,202,9)" fg:x="36006" fg:w="1499"/><text x="55.3143%" y="479.50">w..</text></g><g><title>wfc::wfc::bits256_set::Bits256Set::len (989 samples, 1.51%)</title><rect x="55.8443%" y="453" width="1.5125%" height="15" fill="rgb(250,229,37)" fg:x="36516" fg:w="989"/><text x="56.0943%" y="463.50"></text></g><g><title>core::num::&lt;impl u128&gt;::count_ones (564 samples, 0.86%)</title><rect x="56.4942%" y="437" width="0.8625%" height="15" fill="rgb(206,174,23)" fg:x="36941" fg:w="564"/><text x="56.7442%" y="447.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (7 samples, 0.01%)</title><rect x="57.3460%" y="421" width="0.0107%" height="15" fill="rgb(211,33,43)" fg:x="37498" fg:w="7"/><text x="57.5960%" y="431.50"></text></g><g><title>sysvec_apic_timer_interrupt (7 samples, 0.01%)</title><rect x="57.3460%" y="405" width="0.0107%" height="15" fill="rgb(245,58,50)" fg:x="37498" fg:w="7"/><text x="57.5960%" y="415.50"></text></g><g><title>core::slice::sort::choose_pivot (19 samples, 0.03%)</title><rect x="57.3659%" y="485" width="0.0291%" height="15" fill="rgb(244,68,36)" fg:x="37511" fg:w="19"/><text x="57.6159%" y="495.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (19 samples, 0.03%)</title><rect x="57.3659%" y="469" width="0.0291%" height="15" fill="rgb(232,229,15)" fg:x="37511" fg:w="19"/><text x="57.6159%" y="479.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (19 samples, 0.03%)</title><rect x="57.3659%" y="453" width="0.0291%" height="15" fill="rgb(254,30,23)" fg:x="37511" fg:w="19"/><text x="57.6159%" y="463.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (13 samples, 0.02%)</title><rect x="57.3751%" y="437" width="0.0199%" height="15" fill="rgb(235,160,14)" fg:x="37517" fg:w="13"/><text x="57.6251%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (11 samples, 0.02%)</title><rect x="57.3782%" y="421" width="0.0168%" height="15" fill="rgb(212,155,44)" fg:x="37519" fg:w="11"/><text x="57.6282%" y="431.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (10 samples, 0.02%)</title><rect x="57.3797%" y="405" width="0.0153%" height="15" fill="rgb(226,2,50)" fg:x="37520" fg:w="10"/><text x="57.6297%" y="415.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::len (7 samples, 0.01%)</title><rect x="57.3843%" y="389" width="0.0107%" height="15" fill="rgb(234,177,6)" fg:x="37523" fg:w="7"/><text x="57.6343%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (35 samples, 0.05%)</title><rect x="57.4042%" y="469" width="0.0535%" height="15" fill="rgb(217,24,9)" fg:x="37536" fg:w="35"/><text x="57.6542%" y="479.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (27 samples, 0.04%)</title><rect x="57.4164%" y="453" width="0.0413%" height="15" fill="rgb(220,13,46)" fg:x="37544" fg:w="27"/><text x="57.6664%" y="463.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::len (20 samples, 0.03%)</title><rect x="57.4271%" y="437" width="0.0306%" height="15" fill="rgb(239,221,27)" fg:x="37551" fg:w="20"/><text x="57.6771%" y="447.50"></text></g><g><title>core::num::&lt;impl u128&gt;::count_ones (15 samples, 0.02%)</title><rect x="57.4347%" y="421" width="0.0229%" height="15" fill="rgb(222,198,25)" fg:x="37556" fg:w="15"/><text x="57.6847%" y="431.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (41 samples, 0.06%)</title><rect x="57.3965%" y="485" width="0.0627%" height="15" fill="rgb(211,99,13)" fg:x="37531" fg:w="41"/><text x="57.6465%" y="495.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (41 samples, 0.06%)</title><rect x="57.5387%" y="453" width="0.0627%" height="15" fill="rgb(232,111,31)" fg:x="37624" fg:w="41"/><text x="57.7887%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::partial_cmp (27 samples, 0.04%)</title><rect x="57.6320%" y="437" width="0.0413%" height="15" fill="rgb(245,82,37)" fg:x="37685" fg:w="27"/><text x="57.8820%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (22 samples, 0.03%)</title><rect x="57.6397%" y="421" width="0.0336%" height="15" fill="rgb(227,149,46)" fg:x="37690" fg:w="22"/><text x="57.8897%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (28 samples, 0.04%)</title><rect x="57.6733%" y="437" width="0.0428%" height="15" fill="rgb(218,36,50)" fg:x="37712" fg:w="28"/><text x="57.9233%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (235 samples, 0.36%)</title><rect x="57.5357%" y="469" width="0.3594%" height="15" fill="rgb(226,80,48)" fg:x="37622" fg:w="235"/><text x="57.7857%" y="479.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (192 samples, 0.29%)</title><rect x="57.6014%" y="453" width="0.2936%" height="15" fill="rgb(238,224,15)" fg:x="37665" fg:w="192"/><text x="57.8514%" y="463.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::len (117 samples, 0.18%)</title><rect x="57.7161%" y="437" width="0.1789%" height="15" fill="rgb(241,136,10)" fg:x="37740" fg:w="117"/><text x="57.9661%" y="447.50"></text></g><g><title>core::num::&lt;impl u128&gt;::count_ones (61 samples, 0.09%)</title><rect x="57.8018%" y="421" width="0.0933%" height="15" fill="rgb(208,32,45)" fg:x="37796" fg:w="61"/><text x="58.0518%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (63 samples, 0.10%)</title><rect x="58.0954%" y="453" width="0.0963%" height="15" fill="rgb(207,135,9)" fg:x="37988" fg:w="63"/><text x="58.3454%" y="463.50"></text></g><g><title>[libc.so.6] (63 samples, 0.10%)</title><rect x="58.0954%" y="437" width="0.0963%" height="15" fill="rgb(206,86,44)" fg:x="37988" fg:w="63"/><text x="58.3454%" y="447.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (14 samples, 0.02%)</title><rect x="58.3126%" y="421" width="0.0214%" height="15" fill="rgb(245,177,15)" fg:x="38130" fg:w="14"/><text x="58.5626%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (7 samples, 0.01%)</title><rect x="58.3233%" y="405" width="0.0107%" height="15" fill="rgb(206,64,50)" fg:x="38137" fg:w="7"/><text x="58.5733%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (9 samples, 0.01%)</title><rect x="58.3370%" y="421" width="0.0138%" height="15" fill="rgb(234,36,40)" fg:x="38146" fg:w="9"/><text x="58.5870%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (303 samples, 0.46%)</title><rect x="58.1917%" y="453" width="0.4634%" height="15" fill="rgb(213,64,8)" fg:x="38051" fg:w="303"/><text x="58.4417%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (301 samples, 0.46%)</title><rect x="58.1948%" y="437" width="0.4603%" height="15" fill="rgb(210,75,36)" fg:x="38053" fg:w="301"/><text x="58.4448%" y="447.50"></text></g><g><title>core::mem::replace (199 samples, 0.30%)</title><rect x="58.3508%" y="421" width="0.3043%" height="15" fill="rgb(229,88,21)" fg:x="38155" fg:w="199"/><text x="58.6008%" y="431.50"></text></g><g><title>core::ptr::read (42 samples, 0.06%)</title><rect x="58.5909%" y="405" width="0.0642%" height="15" fill="rgb(252,204,47)" fg:x="38312" fg:w="42"/><text x="58.8409%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (81 samples, 0.12%)</title><rect x="58.6551%" y="453" width="0.1239%" height="15" fill="rgb(208,77,27)" fg:x="38354" fg:w="81"/><text x="58.9051%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (78 samples, 0.12%)</title><rect x="58.6597%" y="437" width="0.1193%" height="15" fill="rgb(221,76,26)" fg:x="38357" fg:w="78"/><text x="58.9097%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (36 samples, 0.06%)</title><rect x="58.7790%" y="453" width="0.0551%" height="15" fill="rgb(225,139,18)" fg:x="38435" fg:w="36"/><text x="59.0290%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (28 samples, 0.04%)</title><rect x="58.7912%" y="437" width="0.0428%" height="15" fill="rgb(230,137,11)" fg:x="38443" fg:w="28"/><text x="59.0412%" y="447.50"></text></g><g><title>core::ptr::swap (8 samples, 0.01%)</title><rect x="58.8386%" y="453" width="0.0122%" height="15" fill="rgb(212,28,1)" fg:x="38474" fg:w="8"/><text x="59.0886%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="58.8402%" y="437" width="0.0107%" height="15" fill="rgb(248,164,17)" fg:x="38475" fg:w="7"/><text x="59.0902%" y="447.50"></text></g><g><title>[libc.so.6] (7 samples, 0.01%)</title><rect x="58.8402%" y="421" width="0.0107%" height="15" fill="rgb(222,171,42)" fg:x="38475" fg:w="7"/><text x="59.0902%" y="431.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (109 samples, 0.17%)</title><rect x="58.8891%" y="437" width="0.1667%" height="15" fill="rgb(243,84,45)" fg:x="38507" fg:w="109"/><text x="59.1391%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::partial_cmp (145 samples, 0.22%)</title><rect x="59.1781%" y="421" width="0.2217%" height="15" fill="rgb(252,49,23)" fg:x="38696" fg:w="145"/><text x="59.4281%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (77 samples, 0.12%)</title><rect x="59.2821%" y="405" width="0.1178%" height="15" fill="rgb(215,19,7)" fg:x="38764" fg:w="77"/><text x="59.5321%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (72 samples, 0.11%)</title><rect x="59.3999%" y="421" width="0.1101%" height="15" fill="rgb(238,81,41)" fg:x="38841" fg:w="72"/><text x="59.6499%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (830 samples, 1.27%)</title><rect x="58.8509%" y="453" width="1.2693%" height="15" fill="rgb(210,199,37)" fg:x="38482" fg:w="830"/><text x="59.1009%" y="463.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (696 samples, 1.06%)</title><rect x="59.0558%" y="437" width="1.0644%" height="15" fill="rgb(244,192,49)" fg:x="38616" fg:w="696"/><text x="59.3058%" y="447.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::len (399 samples, 0.61%)</title><rect x="59.5100%" y="421" width="0.6102%" height="15" fill="rgb(226,211,11)" fg:x="38913" fg:w="399"/><text x="59.7600%" y="431.50"></text></g><g><title>core::num::&lt;impl u128&gt;::count_ones (198 samples, 0.30%)</title><rect x="59.8174%" y="405" width="0.3028%" height="15" fill="rgb(236,162,54)" fg:x="39114" fg:w="198"/><text x="60.0674%" y="415.50"></text></g><g><title>core::slice::sort::partition (1,741 samples, 2.66%)</title><rect x="57.4592%" y="485" width="2.6625%" height="15" fill="rgb(220,229,9)" fg:x="37572" fg:w="1741"/><text x="57.7092%" y="495.50">co..</text></g><g><title>core::slice::sort::partition_in_blocks (1,456 samples, 2.23%)</title><rect x="57.8951%" y="469" width="2.2267%" height="15" fill="rgb(250,87,22)" fg:x="37857" fg:w="1456"/><text x="58.1451%" y="479.50">c..</text></g><g><title>core::ptr::swap (21 samples, 0.03%)</title><rect x="60.2043%" y="469" width="0.0321%" height="15" fill="rgb(239,43,17)" fg:x="39367" fg:w="21"/><text x="60.4543%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.03%)</title><rect x="60.2058%" y="453" width="0.0306%" height="15" fill="rgb(231,177,25)" fg:x="39368" fg:w="20"/><text x="60.4558%" y="463.50"></text></g><g><title>[libc.so.6] (20 samples, 0.03%)</title><rect x="60.2058%" y="437" width="0.0306%" height="15" fill="rgb(219,179,1)" fg:x="39368" fg:w="20"/><text x="60.4558%" y="447.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (37 samples, 0.06%)</title><rect x="60.2655%" y="453" width="0.0566%" height="15" fill="rgb(238,219,53)" fg:x="39407" fg:w="37"/><text x="60.5155%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::partial_cmp (42 samples, 0.06%)</title><rect x="60.3741%" y="437" width="0.0642%" height="15" fill="rgb(232,167,36)" fg:x="39478" fg:w="42"/><text x="60.6241%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (19 samples, 0.03%)</title><rect x="60.4092%" y="421" width="0.0291%" height="15" fill="rgb(244,19,51)" fg:x="39501" fg:w="19"/><text x="60.6592%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (26 samples, 0.04%)</title><rect x="60.4383%" y="437" width="0.0398%" height="15" fill="rgb(224,6,22)" fg:x="39520" fg:w="26"/><text x="60.6883%" y="447.50"></text></g><g><title>core::slice::sort::partition_equal (356 samples, 0.54%)</title><rect x="60.1217%" y="485" width="0.5444%" height="15" fill="rgb(224,145,5)" fg:x="39313" fg:w="356"/><text x="60.3717%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (277 samples, 0.42%)</title><rect x="60.2425%" y="469" width="0.4236%" height="15" fill="rgb(234,130,49)" fg:x="39392" fg:w="277"/><text x="60.4925%" y="479.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (225 samples, 0.34%)</title><rect x="60.3221%" y="453" width="0.3441%" height="15" fill="rgb(254,6,2)" fg:x="39444" fg:w="225"/><text x="60.5721%" y="463.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::len (123 samples, 0.19%)</title><rect x="60.4781%" y="437" width="0.1881%" height="15" fill="rgb(208,96,46)" fg:x="39546" fg:w="123"/><text x="60.7281%" y="447.50"></text></g><g><title>core::num::&lt;impl u128&gt;::count_ones (61 samples, 0.09%)</title><rect x="60.5729%" y="421" width="0.0933%" height="15" fill="rgb(239,3,39)" fg:x="39608" fg:w="61"/><text x="60.8229%" y="431.50"></text></g><g><title>core::slice::sort::choose_pivot (21 samples, 0.03%)</title><rect x="60.6769%" y="469" width="0.0321%" height="15" fill="rgb(233,210,1)" fg:x="39676" fg:w="21"/><text x="60.9269%" y="479.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (20 samples, 0.03%)</title><rect x="60.6784%" y="453" width="0.0306%" height="15" fill="rgb(244,137,37)" fg:x="39677" fg:w="20"/><text x="60.9284%" y="463.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (20 samples, 0.03%)</title><rect x="60.6784%" y="437" width="0.0306%" height="15" fill="rgb(240,136,2)" fg:x="39677" fg:w="20"/><text x="60.9284%" y="447.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (12 samples, 0.02%)</title><rect x="60.6906%" y="421" width="0.0184%" height="15" fill="rgb(239,18,37)" fg:x="39685" fg:w="12"/><text x="60.9406%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (10 samples, 0.02%)</title><rect x="60.6937%" y="405" width="0.0153%" height="15" fill="rgb(218,185,22)" fg:x="39687" fg:w="10"/><text x="60.9437%" y="415.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (7 samples, 0.01%)</title><rect x="60.6983%" y="389" width="0.0107%" height="15" fill="rgb(225,218,4)" fg:x="39690" fg:w="7"/><text x="60.9483%" y="399.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (15 samples, 0.02%)</title><rect x="60.7396%" y="437" width="0.0229%" height="15" fill="rgb(230,182,32)" fg:x="39717" fg:w="15"/><text x="60.9896%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::partial_cmp (7 samples, 0.01%)</title><rect x="60.7763%" y="421" width="0.0107%" height="15" fill="rgb(242,56,43)" fg:x="39741" fg:w="7"/><text x="61.0263%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (87 samples, 0.13%)</title><rect x="60.7350%" y="453" width="0.1330%" height="15" fill="rgb(233,99,24)" fg:x="39714" fg:w="87"/><text x="60.9850%" y="463.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (69 samples, 0.11%)</title><rect x="60.7625%" y="437" width="0.1055%" height="15" fill="rgb(234,209,42)" fg:x="39732" fg:w="69"/><text x="61.0125%" y="447.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::len (51 samples, 0.08%)</title><rect x="60.7900%" y="421" width="0.0780%" height="15" fill="rgb(227,7,12)" fg:x="39750" fg:w="51"/><text x="61.0400%" y="431.50"></text></g><g><title>core::num::&lt;impl u128&gt;::count_ones (26 samples, 0.04%)</title><rect x="60.8283%" y="405" width="0.0398%" height="15" fill="rgb(245,203,43)" fg:x="39775" fg:w="26"/><text x="61.0783%" y="415.50"></text></g><g><title>core::slice::sort::shift_head (9 samples, 0.01%)</title><rect x="60.8680%" y="453" width="0.0138%" height="15" fill="rgb(238,205,33)" fg:x="39801" fg:w="9"/><text x="61.1180%" y="463.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (118 samples, 0.18%)</title><rect x="60.7090%" y="469" width="0.1805%" height="15" fill="rgb(231,56,7)" fg:x="39697" fg:w="118"/><text x="60.9590%" y="479.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (17 samples, 0.03%)</title><rect x="60.9277%" y="437" width="0.0260%" height="15" fill="rgb(244,186,29)" fg:x="39840" fg:w="17"/><text x="61.1777%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::partial_cmp (12 samples, 0.02%)</title><rect x="60.9720%" y="421" width="0.0184%" height="15" fill="rgb(234,111,31)" fg:x="39869" fg:w="12"/><text x="61.2220%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (12 samples, 0.02%)</title><rect x="60.9904%" y="421" width="0.0184%" height="15" fill="rgb(241,149,10)" fg:x="39881" fg:w="12"/><text x="61.2404%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (107 samples, 0.16%)</title><rect x="60.9200%" y="453" width="0.1636%" height="15" fill="rgb(249,206,44)" fg:x="39835" fg:w="107"/><text x="61.1700%" y="463.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (85 samples, 0.13%)</title><rect x="60.9537%" y="437" width="0.1300%" height="15" fill="rgb(251,153,30)" fg:x="39857" fg:w="85"/><text x="61.2037%" y="447.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::len (49 samples, 0.07%)</title><rect x="61.0087%" y="421" width="0.0749%" height="15" fill="rgb(239,152,38)" fg:x="39893" fg:w="49"/><text x="61.2587%" y="431.50"></text></g><g><title>core::num::&lt;impl u128&gt;::count_ones (29 samples, 0.04%)</title><rect x="61.0393%" y="405" width="0.0443%" height="15" fill="rgb(249,139,47)" fg:x="39913" fg:w="29"/><text x="61.2893%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.02%)</title><rect x="61.1219%" y="437" width="0.0214%" height="15" fill="rgb(244,64,35)" fg:x="39967" fg:w="14"/><text x="61.3719%" y="447.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="61.1219%" y="421" width="0.0214%" height="15" fill="rgb(216,46,15)" fg:x="39967" fg:w="14"/><text x="61.3719%" y="431.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (7 samples, 0.01%)</title><rect x="61.1678%" y="405" width="0.0107%" height="15" fill="rgb(250,74,19)" fg:x="39997" fg:w="7"/><text x="61.4178%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (59 samples, 0.09%)</title><rect x="61.1433%" y="437" width="0.0902%" height="15" fill="rgb(249,42,33)" fg:x="39981" fg:w="59"/><text x="61.3933%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (59 samples, 0.09%)</title><rect x="61.1433%" y="421" width="0.0902%" height="15" fill="rgb(242,149,17)" fg:x="39981" fg:w="59"/><text x="61.3933%" y="431.50"></text></g><g><title>core::mem::replace (32 samples, 0.05%)</title><rect x="61.1846%" y="405" width="0.0489%" height="15" fill="rgb(244,29,21)" fg:x="40008" fg:w="32"/><text x="61.4346%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (19 samples, 0.03%)</title><rect x="61.2335%" y="437" width="0.0291%" height="15" fill="rgb(220,130,37)" fg:x="40040" fg:w="19"/><text x="61.4835%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (18 samples, 0.03%)</title><rect x="61.2351%" y="421" width="0.0275%" height="15" fill="rgb(211,67,2)" fg:x="40041" fg:w="18"/><text x="61.4851%" y="431.50"></text></g><g><title>core::ptr::swap (7 samples, 0.01%)</title><rect x="61.2672%" y="437" width="0.0107%" height="15" fill="rgb(235,68,52)" fg:x="40062" fg:w="7"/><text x="61.5172%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="61.2672%" y="421" width="0.0107%" height="15" fill="rgb(246,142,3)" fg:x="40062" fg:w="7"/><text x="61.5172%" y="431.50"></text></g><g><title>[libc.so.6] (7 samples, 0.01%)</title><rect x="61.2672%" y="405" width="0.0107%" height="15" fill="rgb(241,25,7)" fg:x="40062" fg:w="7"/><text x="61.5172%" y="415.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (21 samples, 0.03%)</title><rect x="61.2947%" y="421" width="0.0321%" height="15" fill="rgb(242,119,39)" fg:x="40080" fg:w="21"/><text x="61.5447%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::partial_cmp (20 samples, 0.03%)</title><rect x="61.3437%" y="405" width="0.0306%" height="15" fill="rgb(241,98,45)" fg:x="40112" fg:w="20"/><text x="61.5937%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (9 samples, 0.01%)</title><rect x="61.3605%" y="389" width="0.0138%" height="15" fill="rgb(254,28,30)" fg:x="40123" fg:w="9"/><text x="61.6105%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (15 samples, 0.02%)</title><rect x="61.3742%" y="405" width="0.0229%" height="15" fill="rgb(241,142,54)" fg:x="40132" fg:w="15"/><text x="61.6242%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (151 samples, 0.23%)</title><rect x="61.2779%" y="437" width="0.2309%" height="15" fill="rgb(222,85,15)" fg:x="40069" fg:w="151"/><text x="61.5279%" y="447.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (119 samples, 0.18%)</title><rect x="61.3268%" y="421" width="0.1820%" height="15" fill="rgb(210,85,47)" fg:x="40101" fg:w="119"/><text x="61.5768%" y="431.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::len (73 samples, 0.11%)</title><rect x="61.3972%" y="405" width="0.1116%" height="15" fill="rgb(224,206,25)" fg:x="40147" fg:w="73"/><text x="61.6472%" y="415.50"></text></g><g><title>core::num::&lt;impl u128&gt;::count_ones (42 samples, 0.06%)</title><rect x="61.4446%" y="389" width="0.0642%" height="15" fill="rgb(243,201,19)" fg:x="40178" fg:w="42"/><text x="61.6946%" y="399.50"></text></g><g><title>core::slice::sort::partition (406 samples, 0.62%)</title><rect x="60.8894%" y="469" width="0.6209%" height="15" fill="rgb(236,59,4)" fg:x="39815" fg:w="406"/><text x="61.1394%" y="479.50"></text></g><g><title>core::slice::sort::partition_in_blocks (279 samples, 0.43%)</title><rect x="61.0837%" y="453" width="0.4267%" height="15" fill="rgb(254,179,45)" fg:x="39942" fg:w="279"/><text x="61.3337%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.03%)</title><rect x="61.5975%" y="437" width="0.0336%" height="15" fill="rgb(226,14,10)" fg:x="40278" fg:w="22"/><text x="61.8475%" y="447.50"></text></g><g><title>[libc.so.6] (21 samples, 0.03%)</title><rect x="61.5990%" y="421" width="0.0321%" height="15" fill="rgb(244,27,41)" fg:x="40279" fg:w="21"/><text x="61.8490%" y="431.50"></text></g><g><title>core::ptr::swap (29 samples, 0.04%)</title><rect x="61.5899%" y="453" width="0.0443%" height="15" fill="rgb(235,35,32)" fg:x="40273" fg:w="29"/><text x="61.8399%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (10 samples, 0.02%)</title><rect x="61.6342%" y="453" width="0.0153%" height="15" fill="rgb(218,68,31)" fg:x="40302" fg:w="10"/><text x="61.8842%" y="463.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.02%)</title><rect x="61.6342%" y="437" width="0.0153%" height="15" fill="rgb(207,120,37)" fg:x="40302" fg:w="10"/><text x="61.8842%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (7 samples, 0.01%)</title><rect x="61.6388%" y="421" width="0.0107%" height="15" fill="rgb(227,98,0)" fg:x="40305" fg:w="7"/><text x="61.8888%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (7 samples, 0.01%)</title><rect x="61.6388%" y="405" width="0.0107%" height="15" fill="rgb(207,7,3)" fg:x="40305" fg:w="7"/><text x="61.8888%" y="415.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (31 samples, 0.05%)</title><rect x="61.6556%" y="437" width="0.0474%" height="15" fill="rgb(206,98,19)" fg:x="40316" fg:w="31"/><text x="61.9056%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::partial_cmp (33 samples, 0.05%)</title><rect x="61.7413%" y="421" width="0.0505%" height="15" fill="rgb(217,5,26)" fg:x="40372" fg:w="33"/><text x="61.9913%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (17 samples, 0.03%)</title><rect x="61.7657%" y="405" width="0.0260%" height="15" fill="rgb(235,190,38)" fg:x="40388" fg:w="17"/><text x="62.0157%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (24 samples, 0.04%)</title><rect x="61.7917%" y="421" width="0.0367%" height="15" fill="rgb(247,86,24)" fg:x="40405" fg:w="24"/><text x="62.0417%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (255 samples, 0.39%)</title><rect x="61.6495%" y="453" width="0.3900%" height="15" fill="rgb(205,101,16)" fg:x="40312" fg:w="255"/><text x="61.8995%" y="463.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (220 samples, 0.34%)</title><rect x="61.7030%" y="437" width="0.3364%" height="15" fill="rgb(246,168,33)" fg:x="40347" fg:w="220"/><text x="61.9530%" y="447.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::len (138 samples, 0.21%)</title><rect x="61.8284%" y="421" width="0.2110%" height="15" fill="rgb(231,114,1)" fg:x="40429" fg:w="138"/><text x="62.0784%" y="431.50"></text></g><g><title>core::num::&lt;impl u128&gt;::count_ones (77 samples, 0.12%)</title><rect x="61.9217%" y="405" width="0.1178%" height="15" fill="rgb(207,184,53)" fg:x="40490" fg:w="77"/><text x="62.1717%" y="415.50"></text></g><g><title>core::slice::sort::partition_equal (347 samples, 0.53%)</title><rect x="61.5103%" y="469" width="0.5307%" height="15" fill="rgb(224,95,51)" fg:x="40221" fg:w="347"/><text x="61.7603%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (37 samples, 0.06%)</title><rect x="62.0609%" y="437" width="0.0566%" height="15" fill="rgb(212,188,45)" fg:x="40581" fg:w="37"/><text x="62.3109%" y="447.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (31 samples, 0.05%)</title><rect x="62.0701%" y="421" width="0.0474%" height="15" fill="rgb(223,154,38)" fg:x="40587" fg:w="31"/><text x="62.3201%" y="431.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::len (21 samples, 0.03%)</title><rect x="62.0854%" y="405" width="0.0321%" height="15" fill="rgb(251,22,52)" fg:x="40597" fg:w="21"/><text x="62.3354%" y="415.50"></text></g><g><title>core::num::&lt;impl u128&gt;::count_ones (14 samples, 0.02%)</title><rect x="62.0961%" y="389" width="0.0214%" height="15" fill="rgb(229,209,22)" fg:x="40604" fg:w="14"/><text x="62.3461%" y="399.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (46 samples, 0.07%)</title><rect x="62.0502%" y="453" width="0.0703%" height="15" fill="rgb(234,138,34)" fg:x="40574" fg:w="46"/><text x="62.3002%" y="463.50"></text></g><g><title>core::slice::sort::partition (17 samples, 0.03%)</title><rect x="62.1205%" y="453" width="0.0260%" height="15" fill="rgb(212,95,11)" fg:x="40620" fg:w="17"/><text x="62.3705%" y="463.50"></text></g><g><title>core::slice::sort::partition_in_blocks (15 samples, 0.02%)</title><rect x="62.1236%" y="437" width="0.0229%" height="15" fill="rgb(240,179,47)" fg:x="40622" fg:w="15"/><text x="62.3736%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (7 samples, 0.01%)</title><rect x="62.1358%" y="421" width="0.0107%" height="15" fill="rgb(240,163,11)" fg:x="40630" fg:w="7"/><text x="62.3858%" y="431.50"></text></g><g><title>core::slice::sort::partition_equal (22 samples, 0.03%)</title><rect x="62.1465%" y="453" width="0.0336%" height="15" fill="rgb(236,37,12)" fg:x="40637" fg:w="22"/><text x="62.3965%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by::{{closure}} (15 samples, 0.02%)</title><rect x="62.1572%" y="437" width="0.0229%" height="15" fill="rgb(232,164,16)" fg:x="40644" fg:w="15"/><text x="62.4072%" y="447.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal::{{closure}} (13 samples, 0.02%)</title><rect x="62.1603%" y="421" width="0.0199%" height="15" fill="rgb(244,205,15)" fg:x="40646" fg:w="13"/><text x="62.4103%" y="431.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::len (10 samples, 0.02%)</title><rect x="62.1649%" y="405" width="0.0153%" height="15" fill="rgb(223,117,47)" fg:x="40649" fg:w="10"/><text x="62.4149%" y="415.50"></text></g><g><title>core::slice::sort::partial_insertion_sort (7 samples, 0.01%)</title><rect x="62.1802%" y="437" width="0.0107%" height="15" fill="rgb(244,107,35)" fg:x="40659" fg:w="7"/><text x="62.4302%" y="447.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal (40,455 samples, 61.87%)</title><rect x="0.3242%" y="565" width="61.8682%" height="15" fill="rgb(205,140,8)" fg:x="212" fg:w="40455"/><text x="0.5742%" y="575.50">wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::find_minimal</text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by (9,842 samples, 15.05%)</title><rect x="47.1410%" y="549" width="15.0515%" height="15" fill="rgb(228,84,46)" fg:x="30825" fg:w="9842"/><text x="47.3910%" y="559.50">core::slice::&lt;impl [T]&gt;..</text></g><g><title>core::slice::sort::quicksort (9,842 samples, 15.05%)</title><rect x="47.1410%" y="533" width="15.0515%" height="15" fill="rgb(254,188,9)" fg:x="30825" fg:w="9842"/><text x="47.3910%" y="543.50">core::slice::sort::quic..</text></g><g><title>core::slice::sort::recurse (9,842 samples, 15.05%)</title><rect x="47.1410%" y="517" width="15.0515%" height="15" fill="rgb(206,112,54)" fg:x="30825" fg:w="9842"/><text x="47.3910%" y="527.50">core::slice::sort::recu..</text></g><g><title>core::slice::sort::recurse (3,162 samples, 4.84%)</title><rect x="57.3567%" y="501" width="4.8357%" height="15" fill="rgb(216,84,49)" fg:x="37505" fg:w="3162"/><text x="57.6067%" y="511.50">core::..</text></g><g><title>core::slice::sort::recurse (998 samples, 1.53%)</title><rect x="60.6662%" y="485" width="1.5263%" height="15" fill="rgb(214,194,35)" fg:x="39669" fg:w="998"/><text x="60.9162%" y="495.50"></text></g><g><title>core::slice::sort::recurse (99 samples, 0.15%)</title><rect x="62.0410%" y="469" width="0.1514%" height="15" fill="rgb(249,28,3)" fg:x="40568" fg:w="99"/><text x="62.2910%" y="479.50"></text></g><g><title>core::slice::sort::recurse (8 samples, 0.01%)</title><rect x="62.1802%" y="453" width="0.0122%" height="15" fill="rgb(222,56,52)" fg:x="40659" fg:w="8"/><text x="62.4302%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.01%)</title><rect x="62.2092%" y="389" width="0.0138%" height="15" fill="rgb(245,217,50)" fg:x="40678" fg:w="9"/><text x="62.4592%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.01%)</title><rect x="62.2092%" y="373" width="0.0138%" height="15" fill="rgb(213,201,24)" fg:x="40678" fg:w="9"/><text x="62.4592%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (43 samples, 0.07%)</title><rect x="62.1924%" y="469" width="0.0658%" height="15" fill="rgb(248,116,28)" fg:x="40667" fg:w="43"/><text x="62.4424%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (43 samples, 0.07%)</title><rect x="62.1924%" y="453" width="0.0658%" height="15" fill="rgb(219,72,43)" fg:x="40667" fg:w="43"/><text x="62.4424%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.07%)</title><rect x="62.1924%" y="437" width="0.0658%" height="15" fill="rgb(209,138,14)" fg:x="40667" fg:w="43"/><text x="62.4424%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (43 samples, 0.07%)</title><rect x="62.1924%" y="421" width="0.0658%" height="15" fill="rgb(222,18,33)" fg:x="40667" fg:w="43"/><text x="62.4424%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (43 samples, 0.07%)</title><rect x="62.1924%" y="405" width="0.0658%" height="15" fill="rgb(213,199,7)" fg:x="40667" fg:w="43"/><text x="62.4424%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (23 samples, 0.04%)</title><rect x="62.2230%" y="389" width="0.0352%" height="15" fill="rgb(250,110,10)" fg:x="40687" fg:w="23"/><text x="62.4730%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (22 samples, 0.03%)</title><rect x="62.2245%" y="373" width="0.0336%" height="15" fill="rgb(248,123,6)" fg:x="40688" fg:w="22"/><text x="62.4745%" y="383.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::items::{{closure}} (20 samples, 0.03%)</title><rect x="62.2276%" y="357" width="0.0306%" height="15" fill="rgb(206,91,31)" fg:x="40690" fg:w="20"/><text x="62.4776%" y="367.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::contains (19 samples, 0.03%)</title><rect x="62.2291%" y="341" width="0.0291%" height="15" fill="rgb(211,154,13)" fg:x="40691" fg:w="19"/><text x="62.4791%" y="351.50"></text></g><g><title>core::num::&lt;impl u128&gt;::pow (15 samples, 0.02%)</title><rect x="62.2352%" y="325" width="0.0229%" height="15" fill="rgb(225,148,7)" fg:x="40695" fg:w="15"/><text x="62.4852%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="62.2582%" y="469" width="0.0199%" height="15" fill="rgb(220,160,43)" fg:x="40710" fg:w="13"/><text x="62.5082%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (13 samples, 0.02%)</title><rect x="62.2582%" y="453" width="0.0199%" height="15" fill="rgb(213,52,39)" fg:x="40710" fg:w="13"/><text x="62.5082%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.02%)</title><rect x="62.2582%" y="437" width="0.0199%" height="15" fill="rgb(243,137,7)" fg:x="40710" fg:w="13"/><text x="62.5082%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (11 samples, 0.02%)</title><rect x="62.2612%" y="421" width="0.0168%" height="15" fill="rgb(230,79,13)" fg:x="40712" fg:w="11"/><text x="62.5112%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.02%)</title><rect x="62.2612%" y="405" width="0.0168%" height="15" fill="rgb(247,105,23)" fg:x="40712" fg:w="11"/><text x="62.5112%" y="415.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::items::{{closure}} (11 samples, 0.02%)</title><rect x="62.2612%" y="389" width="0.0168%" height="15" fill="rgb(223,179,41)" fg:x="40712" fg:w="11"/><text x="62.5112%" y="399.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::contains (9 samples, 0.01%)</title><rect x="62.2643%" y="373" width="0.0138%" height="15" fill="rgb(218,9,34)" fg:x="40714" fg:w="9"/><text x="62.5143%" y="383.50"></text></g><g><title>core::num::&lt;impl u128&gt;::pow (7 samples, 0.01%)</title><rect x="62.2674%" y="357" width="0.0107%" height="15" fill="rgb(222,106,8)" fg:x="40716" fg:w="7"/><text x="62.5174%" y="367.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::format_solution (57 samples, 0.09%)</title><rect x="62.1924%" y="565" width="0.0872%" height="15" fill="rgb(211,220,0)" fg:x="40667" fg:w="57"/><text x="62.4424%" y="575.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::items (57 samples, 0.09%)</title><rect x="62.1924%" y="549" width="0.0872%" height="15" fill="rgb(229,52,16)" fg:x="40667" fg:w="57"/><text x="62.4424%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (57 samples, 0.09%)</title><rect x="62.1924%" y="533" width="0.0872%" height="15" fill="rgb(212,155,18)" fg:x="40667" fg:w="57"/><text x="62.4424%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (57 samples, 0.09%)</title><rect x="62.1924%" y="517" width="0.0872%" height="15" fill="rgb(242,21,14)" fg:x="40667" fg:w="57"/><text x="62.4424%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (57 samples, 0.09%)</title><rect x="62.1924%" y="501" width="0.0872%" height="15" fill="rgb(222,19,48)" fg:x="40667" fg:w="57"/><text x="62.4424%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (57 samples, 0.09%)</title><rect x="62.1924%" y="485" width="0.0872%" height="15" fill="rgb(232,45,27)" fg:x="40667" fg:w="57"/><text x="62.4424%" y="495.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::prepare_rules (7 samples, 0.01%)</title><rect x="62.2872%" y="565" width="0.0107%" height="15" fill="rgb(249,103,42)" fg:x="40729" fg:w="7"/><text x="62.5372%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.01%)</title><rect x="62.2872%" y="549" width="0.0107%" height="15" fill="rgb(246,81,33)" fg:x="40729" fg:w="7"/><text x="62.5372%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="62.2872%" y="533" width="0.0107%" height="15" fill="rgb(252,33,42)" fg:x="40729" fg:w="7"/><text x="62.5372%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="62.2872%" y="517" width="0.0107%" height="15" fill="rgb(209,212,41)" fg:x="40729" fg:w="7"/><text x="62.5372%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="62.2872%" y="501" width="0.0107%" height="15" fill="rgb(207,154,6)" fg:x="40729" fg:w="7"/><text x="62.5372%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.01%)</title><rect x="62.2872%" y="485" width="0.0107%" height="15" fill="rgb(223,64,47)" fg:x="40729" fg:w="7"/><text x="62.5372%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.01%)</title><rect x="62.2872%" y="469" width="0.0107%" height="15" fill="rgb(211,161,38)" fg:x="40729" fg:w="7"/><text x="62.5372%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.01%)</title><rect x="62.2872%" y="453" width="0.0107%" height="15" fill="rgb(219,138,40)" fg:x="40729" fg:w="7"/><text x="62.5372%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.01%)</title><rect x="62.2872%" y="437" width="0.0107%" height="15" fill="rgb(241,228,46)" fg:x="40729" fg:w="7"/><text x="62.5372%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.01%)</title><rect x="62.2872%" y="421" width="0.0107%" height="15" fill="rgb(223,209,38)" fg:x="40729" fg:w="7"/><text x="62.5372%" y="431.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::prepare_rules::{{closure}} (7 samples, 0.01%)</title><rect x="62.2872%" y="405" width="0.0107%" height="15" fill="rgb(236,164,45)" fg:x="40729" fg:w="7"/><text x="62.5372%" y="415.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::new_from_hash_set (7 samples, 0.01%)</title><rect x="62.2872%" y="389" width="0.0107%" height="15" fill="rgb(231,15,5)" fg:x="40729" fg:w="7"/><text x="62.5372%" y="399.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (7 samples, 0.01%)</title><rect x="62.3025%" y="549" width="0.0107%" height="15" fill="rgb(252,35,15)" fg:x="40739" fg:w="7"/><text x="62.5525%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.02%)</title><rect x="62.3530%" y="533" width="0.0214%" height="15" fill="rgb(248,181,18)" fg:x="40772" fg:w="14"/><text x="62.6030%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (14 samples, 0.02%)</title><rect x="62.3530%" y="517" width="0.0214%" height="15" fill="rgb(233,39,42)" fg:x="40772" fg:w="14"/><text x="62.6030%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (14 samples, 0.02%)</title><rect x="62.3530%" y="501" width="0.0214%" height="15" fill="rgb(238,110,33)" fg:x="40772" fg:w="14"/><text x="62.6030%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (7 samples, 0.01%)</title><rect x="62.4295%" y="453" width="0.0107%" height="15" fill="rgb(233,195,10)" fg:x="40822" fg:w="7"/><text x="62.6795%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (7 samples, 0.01%)</title><rect x="62.4295%" y="437" width="0.0107%" height="15" fill="rgb(254,105,3)" fg:x="40822" fg:w="7"/><text x="62.6795%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (115 samples, 0.18%)</title><rect x="64.0735%" y="373" width="0.1759%" height="15" fill="rgb(221,225,9)" fg:x="41897" fg:w="115"/><text x="64.3235%" y="383.50"></text></g><g><title>core::ptr::invalid (74 samples, 0.11%)</title><rect x="64.3090%" y="357" width="0.1132%" height="15" fill="rgb(224,227,45)" fg:x="42051" fg:w="74"/><text x="64.5590%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (890 samples, 1.36%)</title><rect x="63.1375%" y="389" width="1.3611%" height="15" fill="rgb(229,198,43)" fg:x="41285" fg:w="890"/><text x="63.3875%" y="399.50"></text></g><g><title>core::ptr::null (163 samples, 0.25%)</title><rect x="64.2493%" y="373" width="0.2493%" height="15" fill="rgb(206,209,35)" fg:x="42012" fg:w="163"/><text x="64.4993%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (50 samples, 0.08%)</title><rect x="64.4222%" y="357" width="0.0765%" height="15" fill="rgb(245,195,53)" fg:x="42125" fg:w="50"/><text x="64.6722%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (692 samples, 1.06%)</title><rect x="65.3688%" y="373" width="1.0583%" height="15" fill="rgb(240,92,26)" fg:x="42744" fg:w="692"/><text x="65.6188%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (313 samples, 0.48%)</title><rect x="65.9484%" y="357" width="0.4787%" height="15" fill="rgb(207,40,23)" fg:x="43123" fg:w="313"/><text x="66.1984%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1,377 samples, 2.11%)</title><rect x="64.4986%" y="389" width="2.1059%" height="15" fill="rgb(223,111,35)" fg:x="42175" fg:w="1377"/><text x="64.7486%" y="399.50">c..</text></g><g><title>core::ptr::null_mut (116 samples, 0.18%)</title><rect x="66.4271%" y="373" width="0.1774%" height="15" fill="rgb(229,147,28)" fg:x="43436" fg:w="116"/><text x="66.6771%" y="383.50"></text></g><g><title>core::ptr::invalid_mut (78 samples, 0.12%)</title><rect x="66.4852%" y="357" width="0.1193%" height="15" fill="rgb(211,29,28)" fg:x="43474" fg:w="78"/><text x="66.7352%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,690 samples, 4.11%)</title><rect x="62.5442%" y="405" width="4.1138%" height="15" fill="rgb(228,72,33)" fg:x="40897" fg:w="2690"/><text x="62.7942%" y="415.50">&lt;cor..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (35 samples, 0.05%)</title><rect x="66.6045%" y="389" width="0.0535%" height="15" fill="rgb(205,214,31)" fg:x="43552" fg:w="35"/><text x="66.8545%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (14 samples, 0.02%)</title><rect x="66.6366%" y="373" width="0.0214%" height="15" fill="rgb(224,111,15)" fg:x="43573" fg:w="14"/><text x="66.8866%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (13 samples, 0.02%)</title><rect x="66.6381%" y="357" width="0.0199%" height="15" fill="rgb(253,21,26)" fg:x="43574" fg:w="13"/><text x="66.8881%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (71 samples, 0.11%)</title><rect x="67.3569%" y="357" width="0.1086%" height="15" fill="rgb(245,139,43)" fg:x="44044" fg:w="71"/><text x="67.6069%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (71 samples, 0.11%)</title><rect x="67.3569%" y="341" width="0.1086%" height="15" fill="rgb(252,170,7)" fg:x="44044" fg:w="71"/><text x="67.6069%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (294 samples, 0.45%)</title><rect x="67.1933%" y="373" width="0.4496%" height="15" fill="rgb(231,118,14)" fg:x="43937" fg:w="294"/><text x="67.4433%" y="383.50"></text></g><g><title>core::ptr::write (116 samples, 0.18%)</title><rect x="67.4655%" y="357" width="0.1774%" height="15" fill="rgb(238,83,0)" fg:x="44115" fg:w="116"/><text x="67.7155%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (556 samples, 0.85%)</title><rect x="66.7972%" y="389" width="0.8503%" height="15" fill="rgb(221,39,39)" fg:x="43678" fg:w="556"/><text x="67.0472%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (43 samples, 0.07%)</title><rect x="68.0145%" y="325" width="0.0658%" height="15" fill="rgb(222,119,46)" fg:x="44474" fg:w="43"/><text x="68.2645%" y="335.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (28 samples, 0.04%)</title><rect x="68.0374%" y="309" width="0.0428%" height="15" fill="rgb(222,165,49)" fg:x="44489" fg:w="28"/><text x="68.2874%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (820 samples, 1.25%)</title><rect x="68.6721%" y="309" width="1.2540%" height="15" fill="rgb(219,113,52)" fg:x="44904" fg:w="820"/><text x="68.9221%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (328 samples, 0.50%)</title><rect x="69.4245%" y="293" width="0.5016%" height="15" fill="rgb(214,7,15)" fg:x="45396" fg:w="328"/><text x="69.6745%" y="303.50"></text></g><g><title>core::ptr::invalid_mut (75 samples, 0.11%)</title><rect x="69.9858%" y="293" width="0.1147%" height="15" fill="rgb(235,32,4)" fg:x="45763" fg:w="75"/><text x="70.2358%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1,448 samples, 2.21%)</title><rect x="67.9090%" y="341" width="2.2144%" height="15" fill="rgb(238,90,54)" fg:x="44405" fg:w="1448"/><text x="68.1590%" y="351.50">a..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1,335 samples, 2.04%)</title><rect x="68.0818%" y="325" width="2.0416%" height="15" fill="rgb(213,208,19)" fg:x="44518" fg:w="1335"/><text x="68.3318%" y="335.50">c..</text></g><g><title>core::ptr::null_mut (129 samples, 0.20%)</title><rect x="69.9261%" y="309" width="0.1973%" height="15" fill="rgb(233,156,4)" fg:x="45724" fg:w="129"/><text x="70.1761%" y="319.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (15 samples, 0.02%)</title><rect x="70.1005%" y="293" width="0.0229%" height="15" fill="rgb(207,194,5)" fg:x="45838" fg:w="15"/><text x="70.3505%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,468 samples, 2.25%)</title><rect x="67.9074%" y="357" width="2.2450%" height="15" fill="rgb(206,111,30)" fg:x="44404" fg:w="1468"/><text x="68.1574%" y="367.50">&lt;..</text></g><g><title>core::slice::raw::from_raw_parts (19 samples, 0.03%)</title><rect x="70.1234%" y="341" width="0.0291%" height="15" fill="rgb(243,70,54)" fg:x="45853" fg:w="19"/><text x="70.3734%" y="351.50"></text></g><g><title>core::ptr::slice_from_raw_parts (11 samples, 0.02%)</title><rect x="70.1356%" y="325" width="0.0168%" height="15" fill="rgb(242,28,8)" fg:x="45861" fg:w="11"/><text x="70.3856%" y="335.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (11 samples, 0.02%)</title><rect x="70.1356%" y="309" width="0.0168%" height="15" fill="rgb(219,106,18)" fg:x="45861" fg:w="11"/><text x="70.3856%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1,552 samples, 2.37%)</title><rect x="67.8249%" y="373" width="2.3735%" height="15" fill="rgb(244,222,10)" fg:x="44350" fg:w="1552"/><text x="68.0749%" y="383.50">&lt;a..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (29 samples, 0.04%)</title><rect x="70.1540%" y="357" width="0.0443%" height="15" fill="rgb(236,179,52)" fg:x="45873" fg:w="29"/><text x="70.4040%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (20 samples, 0.03%)</title><rect x="70.1678%" y="341" width="0.0306%" height="15" fill="rgb(213,23,39)" fg:x="45882" fg:w="20"/><text x="70.4178%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (209 samples, 0.32%)</title><rect x="70.4017%" y="293" width="0.3196%" height="15" fill="rgb(238,48,10)" fg:x="46035" fg:w="209"/><text x="70.6517%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (87 samples, 0.13%)</title><rect x="70.5883%" y="277" width="0.1330%" height="15" fill="rgb(251,196,23)" fg:x="46157" fg:w="87"/><text x="70.8383%" y="287.50"></text></g><g><title>core::ptr::invalid_mut (33 samples, 0.05%)</title><rect x="70.7214%" y="277" width="0.0505%" height="15" fill="rgb(250,152,24)" fg:x="46244" fg:w="33"/><text x="70.9714%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (366 samples, 0.56%)</title><rect x="70.2381%" y="325" width="0.5597%" height="15" fill="rgb(209,150,17)" fg:x="45928" fg:w="366"/><text x="70.4881%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (365 samples, 0.56%)</title><rect x="70.2396%" y="309" width="0.5582%" height="15" fill="rgb(234,202,34)" fg:x="45929" fg:w="365"/><text x="70.4896%" y="319.50"></text></g><g><title>core::ptr::null_mut (50 samples, 0.08%)</title><rect x="70.7214%" y="293" width="0.0765%" height="15" fill="rgb(253,148,53)" fg:x="46244" fg:w="50"/><text x="70.9714%" y="303.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (17 samples, 0.03%)</title><rect x="70.7718%" y="277" width="0.0260%" height="15" fill="rgb(218,129,16)" fg:x="46277" fg:w="17"/><text x="71.0218%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (374 samples, 0.57%)</title><rect x="70.2381%" y="341" width="0.5720%" height="15" fill="rgb(216,85,19)" fg:x="45928" fg:w="374"/><text x="70.4881%" y="351.50"></text></g><g><title>core::slice::raw::from_raw_parts (8 samples, 0.01%)</title><rect x="70.7978%" y="325" width="0.0122%" height="15" fill="rgb(235,228,7)" fg:x="46294" fg:w="8"/><text x="71.0478%" y="335.50"></text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::back (410 samples, 0.63%)</title><rect x="70.1999%" y="373" width="0.6270%" height="15" fill="rgb(245,175,0)" fg:x="45903" fg:w="410"/><text x="70.4499%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (401 samples, 0.61%)</title><rect x="70.2136%" y="357" width="0.6133%" height="15" fill="rgb(208,168,36)" fg:x="45912" fg:w="401"/><text x="70.4636%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.02%)</title><rect x="70.8101%" y="341" width="0.0168%" height="15" fill="rgb(246,171,24)" fg:x="46302" fg:w="11"/><text x="71.0601%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.01%)</title><rect x="70.8147%" y="325" width="0.0122%" height="15" fill="rgb(215,142,24)" fg:x="46305" fg:w="8"/><text x="71.0647%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (285 samples, 0.44%)</title><rect x="71.1068%" y="293" width="0.4359%" height="15" fill="rgb(250,187,7)" fg:x="46496" fg:w="285"/><text x="71.3568%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (129 samples, 0.20%)</title><rect x="71.3453%" y="277" width="0.1973%" height="15" fill="rgb(228,66,33)" fg:x="46652" fg:w="129"/><text x="71.5953%" y="287.50"></text></g><g><title>core::ptr::invalid_mut (42 samples, 0.06%)</title><rect x="71.5426%" y="277" width="0.0642%" height="15" fill="rgb(234,215,21)" fg:x="46781" fg:w="42"/><text x="71.7926%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (496 samples, 0.76%)</title><rect x="70.8774%" y="325" width="0.7585%" height="15" fill="rgb(222,191,20)" fg:x="46346" fg:w="496"/><text x="71.1274%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (490 samples, 0.75%)</title><rect x="70.8865%" y="309" width="0.7494%" height="15" fill="rgb(245,79,54)" fg:x="46352" fg:w="490"/><text x="71.1365%" y="319.50"></text></g><g><title>core::ptr::null_mut (61 samples, 0.09%)</title><rect x="71.5426%" y="293" width="0.0933%" height="15" fill="rgb(240,10,37)" fg:x="46781" fg:w="61"/><text x="71.7926%" y="303.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (19 samples, 0.03%)</title><rect x="71.6068%" y="277" width="0.0291%" height="15" fill="rgb(214,192,32)" fg:x="46823" fg:w="19"/><text x="71.8568%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (501 samples, 0.77%)</title><rect x="70.8774%" y="341" width="0.7662%" height="15" fill="rgb(209,36,54)" fg:x="46346" fg:w="501"/><text x="71.1274%" y="351.50"></text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::down (552 samples, 0.84%)</title><rect x="70.8269%" y="373" width="0.8442%" height="15" fill="rgb(220,10,11)" fg:x="46313" fg:w="552"/><text x="71.0769%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (536 samples, 0.82%)</title><rect x="70.8514%" y="357" width="0.8197%" height="15" fill="rgb(221,106,17)" fg:x="46329" fg:w="536"/><text x="71.1014%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (17 samples, 0.03%)</title><rect x="71.6451%" y="341" width="0.0260%" height="15" fill="rgb(251,142,44)" fg:x="46848" fg:w="17"/><text x="71.8951%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (14 samples, 0.02%)</title><rect x="71.6497%" y="325" width="0.0214%" height="15" fill="rgb(238,13,15)" fg:x="46851" fg:w="14"/><text x="71.8997%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (15 samples, 0.02%)</title><rect x="71.6818%" y="293" width="0.0229%" height="15" fill="rgb(208,107,27)" fg:x="46872" fg:w="15"/><text x="71.9318%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (24 samples, 0.04%)</title><rect x="71.6726%" y="325" width="0.0367%" height="15" fill="rgb(205,136,37)" fg:x="46866" fg:w="24"/><text x="71.9226%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (24 samples, 0.04%)</title><rect x="71.6726%" y="309" width="0.0367%" height="15" fill="rgb(250,205,27)" fg:x="46866" fg:w="24"/><text x="71.9226%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (26 samples, 0.04%)</title><rect x="71.6726%" y="341" width="0.0398%" height="15" fill="rgb(210,80,43)" fg:x="46866" fg:w="26"/><text x="71.9226%" y="351.50"></text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::front (29 samples, 0.04%)</title><rect x="71.6711%" y="373" width="0.0443%" height="15" fill="rgb(247,160,36)" fg:x="46865" fg:w="29"/><text x="71.9211%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (28 samples, 0.04%)</title><rect x="71.6726%" y="357" width="0.0428%" height="15" fill="rgb(234,13,49)" fg:x="46866" fg:w="28"/><text x="71.9226%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (94 samples, 0.14%)</title><rect x="71.8072%" y="293" width="0.1438%" height="15" fill="rgb(234,122,0)" fg:x="46954" fg:w="94"/><text x="72.0572%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (34 samples, 0.05%)</title><rect x="71.8989%" y="277" width="0.0520%" height="15" fill="rgb(207,146,38)" fg:x="47014" fg:w="34"/><text x="72.1489%" y="287.50"></text></g><g><title>core::ptr::invalid_mut (11 samples, 0.02%)</title><rect x="71.9509%" y="277" width="0.0168%" height="15" fill="rgb(207,177,25)" fg:x="47048" fg:w="11"/><text x="72.2009%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (157 samples, 0.24%)</title><rect x="71.7338%" y="325" width="0.2401%" height="15" fill="rgb(211,178,42)" fg:x="46906" fg:w="157"/><text x="71.9838%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (153 samples, 0.23%)</title><rect x="71.7399%" y="309" width="0.2340%" height="15" fill="rgb(230,69,54)" fg:x="46910" fg:w="153"/><text x="71.9899%" y="319.50"></text></g><g><title>core::ptr::null_mut (15 samples, 0.02%)</title><rect x="71.9509%" y="293" width="0.0229%" height="15" fill="rgb(214,135,41)" fg:x="47048" fg:w="15"/><text x="72.2009%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (158 samples, 0.24%)</title><rect x="71.7338%" y="341" width="0.2416%" height="15" fill="rgb(237,67,25)" fg:x="46906" fg:w="158"/><text x="71.9838%" y="351.50"></text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::left (178 samples, 0.27%)</title><rect x="71.7154%" y="373" width="0.2722%" height="15" fill="rgb(222,189,50)" fg:x="46894" fg:w="178"/><text x="71.9654%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (171 samples, 0.26%)</title><rect x="71.7261%" y="357" width="0.2615%" height="15" fill="rgb(245,148,34)" fg:x="46901" fg:w="171"/><text x="71.9761%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.01%)</title><rect x="71.9754%" y="341" width="0.0122%" height="15" fill="rgb(222,29,6)" fg:x="47064" fg:w="8"/><text x="72.2254%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (122 samples, 0.19%)</title><rect x="72.0916%" y="293" width="0.1866%" height="15" fill="rgb(221,189,43)" fg:x="47140" fg:w="122"/><text x="72.3416%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (49 samples, 0.07%)</title><rect x="72.2033%" y="277" width="0.0749%" height="15" fill="rgb(207,36,27)" fg:x="47213" fg:w="49"/><text x="72.4533%" y="287.50"></text></g><g><title>core::ptr::invalid_mut (19 samples, 0.03%)</title><rect x="72.2782%" y="277" width="0.0291%" height="15" fill="rgb(217,90,24)" fg:x="47262" fg:w="19"/><text x="72.5282%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (211 samples, 0.32%)</title><rect x="72.0045%" y="325" width="0.3227%" height="15" fill="rgb(224,66,35)" fg:x="47083" fg:w="211"/><text x="72.2545%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (209 samples, 0.32%)</title><rect x="72.0075%" y="309" width="0.3196%" height="15" fill="rgb(221,13,50)" fg:x="47085" fg:w="209"/><text x="72.2575%" y="319.50"></text></g><g><title>core::ptr::null_mut (32 samples, 0.05%)</title><rect x="72.2782%" y="293" width="0.0489%" height="15" fill="rgb(236,68,49)" fg:x="47262" fg:w="32"/><text x="72.5282%" y="303.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (13 samples, 0.02%)</title><rect x="72.3073%" y="277" width="0.0199%" height="15" fill="rgb(229,146,28)" fg:x="47281" fg:w="13"/><text x="72.5573%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (217 samples, 0.33%)</title><rect x="72.0045%" y="341" width="0.3319%" height="15" fill="rgb(225,31,38)" fg:x="47083" fg:w="217"/><text x="72.2545%" y="351.50"></text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::right (233 samples, 0.36%)</title><rect x="71.9876%" y="373" width="0.3563%" height="15" fill="rgb(250,208,3)" fg:x="47072" fg:w="233"/><text x="72.2376%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (228 samples, 0.35%)</title><rect x="71.9953%" y="357" width="0.3487%" height="15" fill="rgb(246,54,23)" fg:x="47077" fg:w="228"/><text x="72.2453%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (60 samples, 0.09%)</title><rect x="72.4021%" y="293" width="0.0918%" height="15" fill="rgb(243,76,11)" fg:x="47343" fg:w="60"/><text x="72.6521%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (23 samples, 0.04%)</title><rect x="72.4587%" y="277" width="0.0352%" height="15" fill="rgb(245,21,50)" fg:x="47380" fg:w="23"/><text x="72.7087%" y="287.50"></text></g><g><title>core::ptr::invalid_mut (9 samples, 0.01%)</title><rect x="72.4938%" y="277" width="0.0138%" height="15" fill="rgb(228,9,43)" fg:x="47403" fg:w="9"/><text x="72.7438%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (107 samples, 0.16%)</title><rect x="72.3516%" y="325" width="0.1636%" height="15" fill="rgb(208,100,47)" fg:x="47310" fg:w="107"/><text x="72.6016%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (106 samples, 0.16%)</title><rect x="72.3531%" y="309" width="0.1621%" height="15" fill="rgb(232,26,8)" fg:x="47311" fg:w="106"/><text x="72.6031%" y="319.50"></text></g><g><title>core::ptr::null_mut (14 samples, 0.02%)</title><rect x="72.4938%" y="293" width="0.0214%" height="15" fill="rgb(216,166,38)" fg:x="47403" fg:w="14"/><text x="72.7438%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (109 samples, 0.17%)</title><rect x="72.3516%" y="341" width="0.1667%" height="15" fill="rgb(251,202,51)" fg:x="47310" fg:w="109"/><text x="72.6016%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3,833 samples, 5.86%)</title><rect x="66.6580%" y="405" width="5.8618%" height="15" fill="rgb(254,216,34)" fg:x="43587" fg:w="3833"/><text x="66.9080%" y="415.50">core::i..</text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::legal_tiles::{{closure}} (3,186 samples, 4.87%)</title><rect x="67.6475%" y="389" width="4.8724%" height="15" fill="rgb(251,32,27)" fg:x="44234" fg:w="3186"/><text x="67.8975%" y="399.50">wfc::w..</text></g><g><title>wfc::wfc::direction_mapping::DirectionMapping&lt;T&gt;::up (115 samples, 0.18%)</title><rect x="72.3440%" y="373" width="0.1759%" height="15" fill="rgb(208,127,28)" fg:x="47305" fg:w="115"/><text x="72.5940%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (113 samples, 0.17%)</title><rect x="72.3470%" y="357" width="0.1728%" height="15" fill="rgb(224,137,22)" fg:x="47307" fg:w="113"/><text x="72.5970%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,592 samples, 10.08%)</title><rect x="62.4555%" y="437" width="10.0812%" height="15" fill="rgb(254,70,32)" fg:x="40839" fg:w="6592"/><text x="62.7055%" y="447.50">&lt;core::iter::ad..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (6,588 samples, 10.08%)</title><rect x="62.4616%" y="421" width="10.0751%" height="15" fill="rgb(229,75,37)" fg:x="40843" fg:w="6588"/><text x="62.7116%" y="431.50">core::iter::tra..</text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::map_fold&lt;&amp;u8,wfc::wfc::bits256_set::Bits256Set,(),wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::legal_tiles::{{closure}},core::iter::traits::iterator::Iterator::for_each::call&lt;wfc::wfc::bits256_set::Bits256Set,&lt;alloc::vec::Vec&lt;wfc::wfc::bits256_set::Bits256Set&gt; as alloc::vec::spec_extend::SpecExtend&lt;wfc::wfc::bits256_set::Bits256Set,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u8&gt;,wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::legal_tiles::{{closure}}&gt;&gt;&gt;::spec_extend::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt; (11 samples, 0.02%)</title><rect x="72.5198%" y="405" width="0.0168%" height="15" fill="rgb(252,64,23)" fg:x="47420" fg:w="11"/><text x="72.7698%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6,626 samples, 10.13%)</title><rect x="62.4096%" y="469" width="10.1332%" height="15" fill="rgb(232,162,48)" fg:x="40809" fg:w="6626"/><text x="62.6596%" y="479.50">&lt;alloc::vec::Ve..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6,602 samples, 10.10%)</title><rect x="62.4463%" y="453" width="10.0965%" height="15" fill="rgb(246,160,12)" fg:x="40833" fg:w="6602"/><text x="62.6963%" y="463.50">core::iter::tra..</text></g><g><title>alloc::alloc::alloc (33 samples, 0.05%)</title><rect x="72.5596%" y="373" width="0.0505%" height="15" fill="rgb(247,166,0)" fg:x="47446" fg:w="33"/><text x="72.8096%" y="383.50"></text></g><g><title>malloc (28 samples, 0.04%)</title><rect x="72.5673%" y="357" width="0.0428%" height="15" fill="rgb(249,219,21)" fg:x="47451" fg:w="28"/><text x="72.8173%" y="367.50"></text></g><g><title>[libc.so.6] (19 samples, 0.03%)</title><rect x="72.5810%" y="341" width="0.0291%" height="15" fill="rgb(205,209,3)" fg:x="47460" fg:w="19"/><text x="72.8310%" y="351.50"></text></g><g><title>[libc.so.6] (15 samples, 0.02%)</title><rect x="72.5871%" y="325" width="0.0229%" height="15" fill="rgb(243,44,1)" fg:x="47464" fg:w="15"/><text x="72.8371%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (7 samples, 0.01%)</title><rect x="72.6238%" y="341" width="0.0107%" height="15" fill="rgb(206,159,16)" fg:x="47488" fg:w="7"/><text x="72.8738%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (52 samples, 0.08%)</title><rect x="72.5581%" y="405" width="0.0795%" height="15" fill="rgb(244,77,30)" fg:x="47445" fg:w="52"/><text x="72.8081%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (52 samples, 0.08%)</title><rect x="72.5581%" y="389" width="0.0795%" height="15" fill="rgb(218,69,12)" fg:x="47445" fg:w="52"/><text x="72.8081%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (18 samples, 0.03%)</title><rect x="72.6101%" y="373" width="0.0275%" height="15" fill="rgb(212,87,7)" fg:x="47479" fg:w="18"/><text x="72.8601%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (16 samples, 0.02%)</title><rect x="72.6131%" y="357" width="0.0245%" height="15" fill="rgb(245,114,25)" fg:x="47481" fg:w="16"/><text x="72.8631%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array (7 samples, 0.01%)</title><rect x="72.6376%" y="405" width="0.0107%" height="15" fill="rgb(210,61,42)" fg:x="47497" fg:w="7"/><text x="72.8876%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (7 samples, 0.01%)</title><rect x="72.6376%" y="389" width="0.0107%" height="15" fill="rgb(211,52,33)" fg:x="47497" fg:w="7"/><text x="72.8876%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6,716 samples, 10.27%)</title><rect x="62.3805%" y="533" width="10.2708%" height="15" fill="rgb(234,58,33)" fg:x="40790" fg:w="6716"/><text x="62.6305%" y="543.50">core::iter::tra..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6,713 samples, 10.27%)</title><rect x="62.3851%" y="517" width="10.2663%" height="15" fill="rgb(220,115,36)" fg:x="40793" fg:w="6713"/><text x="62.6351%" y="527.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6,709 samples, 10.26%)</title><rect x="62.3912%" y="501" width="10.2601%" height="15" fill="rgb(243,153,54)" fg:x="40797" fg:w="6709"/><text x="62.6412%" y="511.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6,707 samples, 10.26%)</title><rect x="62.3943%" y="485" width="10.2571%" height="15" fill="rgb(251,47,18)" fg:x="40799" fg:w="6707"/><text x="62.6443%" y="495.50">&lt;alloc::vec::Ve..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (66 samples, 0.10%)</title><rect x="72.5504%" y="469" width="0.1009%" height="15" fill="rgb(242,102,42)" fg:x="47440" fg:w="66"/><text x="72.8004%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (66 samples, 0.10%)</title><rect x="72.5504%" y="453" width="0.1009%" height="15" fill="rgb(234,31,38)" fg:x="47440" fg:w="66"/><text x="72.8004%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (66 samples, 0.10%)</title><rect x="72.5504%" y="437" width="0.1009%" height="15" fill="rgb(221,117,51)" fg:x="47440" fg:w="66"/><text x="72.8004%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (65 samples, 0.10%)</title><rect x="72.5520%" y="421" width="0.0994%" height="15" fill="rgb(212,20,18)" fg:x="47441" fg:w="65"/><text x="72.8020%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="72.6529%" y="517" width="0.0214%" height="15" fill="rgb(245,133,36)" fg:x="47507" fg:w="14"/><text x="72.9029%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (13 samples, 0.02%)</title><rect x="72.6544%" y="501" width="0.0199%" height="15" fill="rgb(212,6,19)" fg:x="47508" fg:w="13"/><text x="72.9044%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (12 samples, 0.02%)</title><rect x="72.6560%" y="485" width="0.0184%" height="15" fill="rgb(218,1,36)" fg:x="47509" fg:w="12"/><text x="72.9060%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.02%)</title><rect x="72.6743%" y="485" width="0.0199%" height="15" fill="rgb(246,84,54)" fg:x="47521" fg:w="13"/><text x="72.9243%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.02%)</title><rect x="72.6758%" y="469" width="0.0184%" height="15" fill="rgb(242,110,6)" fg:x="47522" fg:w="12"/><text x="72.9258%" y="479.50"></text></g><g><title>free (9 samples, 0.01%)</title><rect x="72.6804%" y="453" width="0.0138%" height="15" fill="rgb(214,47,5)" fg:x="47525" fg:w="9"/><text x="72.9304%" y="463.50"></text></g><g><title>[libc.so.6] (7 samples, 0.01%)</title><rect x="72.6835%" y="437" width="0.0107%" height="15" fill="rgb(218,159,25)" fg:x="47527" fg:w="7"/><text x="72.9335%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (9 samples, 0.01%)</title><rect x="72.7034%" y="469" width="0.0138%" height="15" fill="rgb(215,211,28)" fg:x="47540" fg:w="9"/><text x="72.9534%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (9 samples, 0.01%)</title><rect x="72.7034%" y="453" width="0.0138%" height="15" fill="rgb(238,59,32)" fg:x="47540" fg:w="9"/><text x="72.9534%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (44 samples, 0.07%)</title><rect x="72.6529%" y="533" width="0.0673%" height="15" fill="rgb(226,82,3)" fg:x="47507" fg:w="44"/><text x="72.9029%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (30 samples, 0.05%)</title><rect x="72.6743%" y="517" width="0.0459%" height="15" fill="rgb(240,164,32)" fg:x="47521" fg:w="30"/><text x="72.9243%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.05%)</title><rect x="72.6743%" y="501" width="0.0459%" height="15" fill="rgb(232,46,7)" fg:x="47521" fg:w="30"/><text x="72.9243%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (17 samples, 0.03%)</title><rect x="72.6942%" y="485" width="0.0260%" height="15" fill="rgb(229,129,53)" fg:x="47534" fg:w="17"/><text x="72.9442%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (24 samples, 0.04%)</title><rect x="72.7202%" y="533" width="0.0367%" height="15" fill="rgb(234,188,29)" fg:x="47551" fg:w="24"/><text x="72.9702%" y="543.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (19 samples, 0.03%)</title><rect x="72.7278%" y="517" width="0.0291%" height="15" fill="rgb(246,141,4)" fg:x="47556" fg:w="19"/><text x="72.9778%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (14 samples, 0.02%)</title><rect x="72.7355%" y="501" width="0.0214%" height="15" fill="rgb(229,23,39)" fg:x="47561" fg:w="14"/><text x="72.9855%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (16 samples, 0.02%)</title><rect x="72.7676%" y="517" width="0.0245%" height="15" fill="rgb(206,12,3)" fg:x="47582" fg:w="16"/><text x="73.0176%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.02%)</title><rect x="72.7676%" y="501" width="0.0245%" height="15" fill="rgb(252,226,20)" fg:x="47582" fg:w="16"/><text x="73.0176%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (15 samples, 0.02%)</title><rect x="72.7691%" y="485" width="0.0229%" height="15" fill="rgb(216,123,35)" fg:x="47583" fg:w="15"/><text x="73.0191%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (15 samples, 0.02%)</title><rect x="72.7691%" y="469" width="0.0229%" height="15" fill="rgb(212,68,40)" fg:x="47583" fg:w="15"/><text x="73.0191%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (10 samples, 0.02%)</title><rect x="72.7768%" y="453" width="0.0153%" height="15" fill="rgb(254,125,32)" fg:x="47588" fg:w="10"/><text x="73.0268%" y="463.50"></text></g><g><title>wfc::vec3d::Vec3D&lt;T&gt;::get (29 samples, 0.04%)</title><rect x="72.7569%" y="533" width="0.0443%" height="15" fill="rgb(253,97,22)" fg:x="47575" fg:w="29"/><text x="73.0069%" y="543.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::FromResidual&gt;::from_residual (207 samples, 0.32%)</title><rect x="76.7744%" y="373" width="0.3166%" height="15" fill="rgb(241,101,14)" fg:x="50202" fg:w="207"/><text x="77.0244%" y="383.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (502 samples, 0.77%)</title><rect x="77.0909%" y="373" width="0.7677%" height="15" fill="rgb(238,103,29)" fg:x="50409" fg:w="502"/><text x="77.3409%" y="383.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (18 samples, 0.03%)</title><rect x="77.8587%" y="373" width="0.0275%" height="15" fill="rgb(233,195,47)" fg:x="50911" fg:w="18"/><text x="78.1087%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (18 samples, 0.03%)</title><rect x="77.8587%" y="357" width="0.0275%" height="15" fill="rgb(246,218,30)" fg:x="50911" fg:w="18"/><text x="78.1087%" y="367.50"></text></g><g><title>irq_exit_rcu (18 samples, 0.03%)</title><rect x="77.8587%" y="341" width="0.0275%" height="15" fill="rgb(219,145,47)" fg:x="50911" fg:w="18"/><text x="78.1087%" y="351.50"></text></g><g><title>__softirqentry_text_start (18 samples, 0.03%)</title><rect x="77.8587%" y="325" width="0.0275%" height="15" fill="rgb(243,12,26)" fg:x="50911" fg:w="18"/><text x="78.1087%" y="335.50"></text></g><g><title>run_timer_softirq (15 samples, 0.02%)</title><rect x="77.8632%" y="309" width="0.0229%" height="15" fill="rgb(214,87,16)" fg:x="50914" fg:w="15"/><text x="78.1132%" y="319.50"></text></g><g><title>__run_timers.part.0 (15 samples, 0.02%)</title><rect x="77.8632%" y="293" width="0.0229%" height="15" fill="rgb(208,99,42)" fg:x="50914" fg:w="15"/><text x="78.1132%" y="303.50"></text></g><g><title>call_timer_fn (15 samples, 0.02%)</title><rect x="77.8632%" y="277" width="0.0229%" height="15" fill="rgb(253,99,2)" fg:x="50914" fg:w="15"/><text x="78.1132%" y="287.50"></text></g><g><title>vbg_heartbeat_timer (15 samples, 0.02%)</title><rect x="77.8632%" y="261" width="0.0229%" height="15" fill="rgb(220,168,23)" fg:x="50914" fg:w="15"/><text x="78.1132%" y="271.50"></text></g><g><title>vbg_req_perform (15 samples, 0.02%)</title><rect x="77.8632%" y="245" width="0.0229%" height="15" fill="rgb(242,38,24)" fg:x="50914" fg:w="15"/><text x="78.1132%" y="255.50"></text></g><g><title>&lt;u8 as core::iter::range::Step&gt;::forward_unchecked (486 samples, 0.74%)</title><rect x="79.7550%" y="341" width="0.7432%" height="15" fill="rgb(225,182,9)" fg:x="52151" fg:w="486"/><text x="80.0050%" y="351.50"></text></g><g><title>core::num::&lt;impl u8&gt;::unchecked_add (189 samples, 0.29%)</title><rect x="80.2092%" y="325" width="0.2890%" height="15" fill="rgb(243,178,37)" fg:x="52448" fg:w="189"/><text x="80.4592%" y="335.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u8&gt;::clone (20 samples, 0.03%)</title><rect x="80.5028%" y="341" width="0.0306%" height="15" fill="rgb(232,139,19)" fg:x="52640" fg:w="20"/><text x="80.7528%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::lt (49 samples, 0.07%)</title><rect x="80.5334%" y="341" width="0.0749%" height="15" fill="rgb(225,201,24)" fg:x="52660" fg:w="49"/><text x="80.7834%" y="351.50"></text></g><g><title>core::ptr::read (306 samples, 0.47%)</title><rect x="80.7659%" y="325" width="0.4680%" height="15" fill="rgb(221,47,46)" fg:x="52812" fg:w="306"/><text x="81.0159%" y="335.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (164 samples, 0.25%)</title><rect x="80.9830%" y="309" width="0.2508%" height="15" fill="rgb(249,23,13)" fg:x="52954" fg:w="164"/><text x="81.2330%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,133 samples, 3.26%)</title><rect x="78.4169%" y="357" width="3.2620%" height="15" fill="rgb(219,9,5)" fg:x="51276" fg:w="2133"/><text x="78.6669%" y="367.50">&lt;co..</text></g><g><title>core::mem::replace (700 samples, 1.07%)</title><rect x="80.6084%" y="341" width="1.0705%" height="15" fill="rgb(254,171,16)" fg:x="52709" fg:w="700"/><text x="80.8584%" y="351.50"></text></g><g><title>core::ptr::write (291 samples, 0.45%)</title><rect x="81.2338%" y="325" width="0.4450%" height="15" fill="rgb(230,171,20)" fg:x="53118" fg:w="291"/><text x="81.4838%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,482 samples, 3.80%)</title><rect x="77.8862%" y="373" width="3.7957%" height="15" fill="rgb(210,71,41)" fg:x="50929" fg:w="2482"/><text x="78.1362%" y="383.50">core..</text></g><g><title>asm_sysvec_apic_timer_interrupt (23 samples, 0.04%)</title><rect x="92.1378%" y="293" width="0.0352%" height="15" fill="rgb(206,173,20)" fg:x="60248" fg:w="23"/><text x="92.3878%" y="303.50"></text></g><g><title>sysvec_apic_timer_interrupt (23 samples, 0.04%)</title><rect x="92.1378%" y="277" width="0.0352%" height="15" fill="rgb(233,88,34)" fg:x="60248" fg:w="23"/><text x="92.3878%" y="287.50"></text></g><g><title>irq_exit_rcu (23 samples, 0.04%)</title><rect x="92.1378%" y="261" width="0.0352%" height="15" fill="rgb(223,209,46)" fg:x="60248" fg:w="23"/><text x="92.3878%" y="271.50"></text></g><g><title>__softirqentry_text_start (23 samples, 0.04%)</title><rect x="92.1378%" y="245" width="0.0352%" height="15" fill="rgb(250,43,18)" fg:x="60248" fg:w="23"/><text x="92.3878%" y="255.50"></text></g><g><title>run_timer_softirq (22 samples, 0.03%)</title><rect x="92.1394%" y="229" width="0.0336%" height="15" fill="rgb(208,13,10)" fg:x="60249" fg:w="22"/><text x="92.3894%" y="239.50"></text></g><g><title>__run_timers.part.0 (22 samples, 0.03%)</title><rect x="92.1394%" y="213" width="0.0336%" height="15" fill="rgb(212,200,36)" fg:x="60249" fg:w="22"/><text x="92.3894%" y="223.50"></text></g><g><title>call_timer_fn (22 samples, 0.03%)</title><rect x="92.1394%" y="197" width="0.0336%" height="15" fill="rgb(225,90,30)" fg:x="60249" fg:w="22"/><text x="92.3894%" y="207.50"></text></g><g><title>vbg_heartbeat_timer (22 samples, 0.03%)</title><rect x="92.1394%" y="181" width="0.0336%" height="15" fill="rgb(236,182,39)" fg:x="60249" fg:w="22"/><text x="92.3894%" y="191.50"></text></g><g><title>vbg_req_perform (22 samples, 0.03%)</title><rect x="92.1394%" y="165" width="0.0336%" height="15" fill="rgb(212,144,35)" fg:x="60249" fg:w="22"/><text x="92.3894%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12,046 samples, 18.42%)</title><rect x="73.7525%" y="389" width="18.4221%" height="15" fill="rgb(228,63,44)" fg:x="48226" fg:w="12046"/><text x="74.0025%" y="399.50">core::iter::traits::iterator:..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (6,861 samples, 10.49%)</title><rect x="81.6819%" y="373" width="10.4926%" height="15" fill="rgb(228,109,6)" fg:x="53411" fg:w="6861"/><text x="81.9319%" y="383.50">core::iter::tra..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6,133 samples, 9.38%)</title><rect x="82.7953%" y="357" width="9.3793%" height="15" fill="rgb(238,117,24)" fg:x="54139" fg:w="6133"/><text x="83.0453%" y="367.50">core::ops::fu..</text></g><g><title>wfc::wfc::bits256_set::Bits256Set::items::{{closure}} (5,803 samples, 8.87%)</title><rect x="83.2999%" y="341" width="8.8746%" height="15" fill="rgb(242,26,26)" fg:x="54469" fg:w="5803"/><text x="83.5499%" y="351.50">wfc::wfc::bit..</text></g><g><title>wfc::wfc::bits256_set::Bits256Set::contains (5,259 samples, 8.04%)</title><rect x="84.1319%" y="325" width="8.0426%" height="15" fill="rgb(221,92,48)" fg:x="55013" fg:w="5259"/><text x="84.3819%" y="335.50">wfc::wfc::b..</text></g><g><title>core::num::&lt;impl u128&gt;::pow (4,310 samples, 6.59%)</title><rect x="85.5832%" y="309" width="6.5913%" height="15" fill="rgb(209,209,32)" fg:x="55962" fg:w="4310"/><text x="85.8332%" y="319.50">core::num..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (12,647 samples, 19.34%)</title><rect x="73.2356%" y="421" width="19.3412%" height="15" fill="rgb(221,70,22)" fg:x="47888" fg:w="12647"/><text x="73.4856%" y="431.50">&lt;core::iter::adapters::filter:..</text></g><g><title>core::iter::traits::iterator::Iterator::find (12,538 samples, 19.17%)</title><rect x="73.4023%" y="405" width="19.1745%" height="15" fill="rgb(248,145,5)" fg:x="47997" fg:w="12538"/><text x="73.6523%" y="415.50">core::iter::traits::iterator::..</text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (263 samples, 0.40%)</title><rect x="92.1745%" y="389" width="0.4022%" height="15" fill="rgb(226,116,26)" fg:x="60272" fg:w="263"/><text x="92.4245%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (9 samples, 0.01%)</title><rect x="92.5767%" y="421" width="0.0138%" height="15" fill="rgb(244,5,17)" fg:x="60535" fg:w="9"/><text x="92.8267%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (10 samples, 0.02%)</title><rect x="92.5981%" y="405" width="0.0153%" height="15" fill="rgb(252,159,33)" fg:x="60549" fg:w="10"/><text x="92.8481%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (717 samples, 1.10%)</title><rect x="93.5142%" y="389" width="1.0965%" height="15" fill="rgb(206,71,0)" fg:x="61148" fg:w="717"/><text x="93.7642%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (310 samples, 0.47%)</title><rect x="94.1366%" y="373" width="0.4741%" height="15" fill="rgb(233,118,54)" fg:x="61555" fg:w="310"/><text x="94.3866%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1,447 samples, 2.21%)</title><rect x="92.5905%" y="421" width="2.2129%" height="15" fill="rgb(234,83,48)" fg:x="60544" fg:w="1447"/><text x="92.8405%" y="431.50">a..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1,432 samples, 2.19%)</title><rect x="92.6134%" y="405" width="2.1900%" height="15" fill="rgb(228,3,54)" fg:x="60559" fg:w="1432"/><text x="92.8634%" y="415.50">c..</text></g><g><title>core::ptr::null_mut (126 samples, 0.19%)</title><rect x="94.6107%" y="389" width="0.1927%" height="15" fill="rgb(226,155,13)" fg:x="61865" fg:w="126"/><text x="94.8607%" y="399.50"></text></g><g><title>core::ptr::invalid_mut (83 samples, 0.13%)</title><rect x="94.6765%" y="373" width="0.1269%" height="15" fill="rgb(241,28,37)" fg:x="61908" fg:w="83"/><text x="94.9265%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (17 samples, 0.03%)</title><rect x="94.8034%" y="421" width="0.0260%" height="15" fill="rgb(233,93,10)" fg:x="61991" fg:w="17"/><text x="95.0534%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (17 samples, 0.03%)</title><rect x="94.8034%" y="405" width="0.0260%" height="15" fill="rgb(225,113,19)" fg:x="61991" fg:w="17"/><text x="95.0534%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (7 samples, 0.01%)</title><rect x="94.8294%" y="421" width="0.0107%" height="15" fill="rgb(241,2,18)" fg:x="62008" fg:w="7"/><text x="95.0794%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array (16 samples, 0.02%)</title><rect x="94.8829%" y="341" width="0.0245%" height="15" fill="rgb(228,207,21)" fg:x="62043" fg:w="16"/><text x="95.1329%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (16 samples, 0.02%)</title><rect x="94.8829%" y="325" width="0.0245%" height="15" fill="rgb(213,211,35)" fg:x="62043" fg:w="16"/><text x="95.1329%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (26 samples, 0.04%)</title><rect x="94.8753%" y="357" width="0.0398%" height="15" fill="rgb(209,83,10)" fg:x="62038" fg:w="26"/><text x="95.1253%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (9 samples, 0.01%)</title><rect x="94.9150%" y="357" width="0.0138%" height="15" fill="rgb(209,164,1)" fg:x="62064" fg:w="9"/><text x="95.1650%" y="367.50"></text></g><g><title>__rdl_realloc (16 samples, 0.02%)</title><rect x="94.9716%" y="293" width="0.0245%" height="15" fill="rgb(213,184,43)" fg:x="62101" fg:w="16"/><text x="95.2216%" y="303.50"></text></g><g><title>alloc::alloc::realloc (53 samples, 0.08%)</title><rect x="94.9686%" y="309" width="0.0811%" height="15" fill="rgb(231,61,34)" fg:x="62099" fg:w="53"/><text x="95.2186%" y="319.50"></text></g><g><title>realloc (32 samples, 0.05%)</title><rect x="95.0007%" y="293" width="0.0489%" height="15" fill="rgb(235,75,3)" fg:x="62120" fg:w="32"/><text x="95.2507%" y="303.50"></text></g><g><title>[libc.so.6] (22 samples, 0.03%)</title><rect x="95.0160%" y="277" width="0.0336%" height="15" fill="rgb(220,106,47)" fg:x="62130" fg:w="22"/><text x="95.2660%" y="287.50"></text></g><g><title>[libc.so.6] (18 samples, 0.03%)</title><rect x="95.0221%" y="261" width="0.0275%" height="15" fill="rgb(210,196,33)" fg:x="62134" fg:w="18"/><text x="95.2721%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (26 samples, 0.04%)</title><rect x="95.0970%" y="277" width="0.0398%" height="15" fill="rgb(229,154,42)" fg:x="62183" fg:w="26"/><text x="95.3470%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (9 samples, 0.01%)</title><rect x="95.1230%" y="261" width="0.0138%" height="15" fill="rgb(228,114,26)" fg:x="62200" fg:w="9"/><text x="95.3730%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (132 samples, 0.20%)</title><rect x="94.9426%" y="341" width="0.2019%" height="15" fill="rgb(208,144,1)" fg:x="62082" fg:w="132"/><text x="95.1926%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (128 samples, 0.20%)</title><rect x="94.9487%" y="325" width="0.1958%" height="15" fill="rgb(239,112,37)" fg:x="62086" fg:w="128"/><text x="95.1987%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (60 samples, 0.09%)</title><rect x="95.0527%" y="309" width="0.0918%" height="15" fill="rgb(210,96,50)" fg:x="62154" fg:w="60"/><text x="95.3027%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (54 samples, 0.08%)</title><rect x="95.0619%" y="293" width="0.0826%" height="15" fill="rgb(222,178,2)" fg:x="62160" fg:w="54"/><text x="95.3119%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (149 samples, 0.23%)</title><rect x="94.9288%" y="357" width="0.2279%" height="15" fill="rgb(226,74,18)" fg:x="62073" fg:w="149"/><text x="95.1788%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array (18 samples, 0.03%)</title><rect x="95.1567%" y="357" width="0.0275%" height="15" fill="rgb(225,67,54)" fg:x="62222" fg:w="18"/><text x="95.4067%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (18 samples, 0.03%)</title><rect x="95.1567%" y="341" width="0.0275%" height="15" fill="rgb(251,92,32)" fg:x="62222" fg:w="18"/><text x="95.4067%" y="351.50"></text></g><g><title>core::cmp::max (29 samples, 0.04%)</title><rect x="95.1842%" y="357" width="0.0443%" height="15" fill="rgb(228,149,22)" fg:x="62240" fg:w="29"/><text x="95.4342%" y="367.50"></text></g><g><title>core::cmp::Ord::max (26 samples, 0.04%)</title><rect x="95.1888%" y="341" width="0.0398%" height="15" fill="rgb(243,54,13)" fg:x="62243" fg:w="26"/><text x="95.4388%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (23 samples, 0.04%)</title><rect x="95.2286%" y="357" width="0.0352%" height="15" fill="rgb(243,180,28)" fg:x="62269" fg:w="23"/><text x="95.4786%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (7 samples, 0.01%)</title><rect x="95.2530%" y="341" width="0.0107%" height="15" fill="rgb(208,167,24)" fg:x="62285" fg:w="7"/><text x="95.5030%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (265 samples, 0.41%)</title><rect x="94.8600%" y="373" width="0.4053%" height="15" fill="rgb(245,73,45)" fg:x="62028" fg:w="265"/><text x="95.1100%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (283 samples, 0.43%)</title><rect x="94.8401%" y="421" width="0.4328%" height="15" fill="rgb(237,203,48)" fg:x="62015" fg:w="283"/><text x="95.0901%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (280 samples, 0.43%)</title><rect x="94.8447%" y="405" width="0.4282%" height="15" fill="rgb(211,197,16)" fg:x="62018" fg:w="280"/><text x="95.0947%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (272 samples, 0.42%)</title><rect x="94.8569%" y="389" width="0.4160%" height="15" fill="rgb(243,99,51)" fg:x="62026" fg:w="272"/><text x="95.1069%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14,720 samples, 22.51%)</title><rect x="72.8211%" y="453" width="22.5114%" height="15" fill="rgb(215,123,29)" fg:x="47617" fg:w="14720"/><text x="73.0711%" y="463.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (14,719 samples, 22.51%)</title><rect x="72.8226%" y="437" width="22.5099%" height="15" fill="rgb(239,186,37)" fg:x="47618" fg:w="14719"/><text x="73.0726%" y="447.50">alloc::vec::Vec&lt;T,A&gt;::extend_desugar..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (36 samples, 0.06%)</title><rect x="95.2775%" y="421" width="0.0551%" height="15" fill="rgb(252,136,39)" fg:x="62301" fg:w="36"/><text x="95.5275%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (23 samples, 0.04%)</title><rect x="95.2974%" y="405" width="0.0352%" height="15" fill="rgb(223,213,32)" fg:x="62314" fg:w="23"/><text x="95.5474%" y="415.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (32 samples, 0.05%)</title><rect x="95.5528%" y="405" width="0.0489%" height="15" fill="rgb(233,115,5)" fg:x="62481" fg:w="32"/><text x="95.8028%" y="415.50"></text></g><g><title>&lt;u8 as core::iter::range::Step&gt;::forward_unchecked (52 samples, 0.08%)</title><rect x="95.7669%" y="373" width="0.0795%" height="15" fill="rgb(207,226,44)" fg:x="62621" fg:w="52"/><text x="96.0169%" y="383.50"></text></g><g><title>core::num::&lt;impl u8&gt;::unchecked_add (15 samples, 0.02%)</title><rect x="95.8235%" y="357" width="0.0229%" height="15" fill="rgb(208,126,0)" fg:x="62658" fg:w="15"/><text x="96.0735%" y="367.50"></text></g><g><title>core::ptr::read (32 samples, 0.05%)</title><rect x="95.8862%" y="357" width="0.0489%" height="15" fill="rgb(244,66,21)" fg:x="62699" fg:w="32"/><text x="96.1362%" y="367.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (32 samples, 0.05%)</title><rect x="95.8862%" y="341" width="0.0489%" height="15" fill="rgb(222,97,12)" fg:x="62699" fg:w="32"/><text x="96.1362%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (211 samples, 0.32%)</title><rect x="95.6399%" y="389" width="0.3227%" height="15" fill="rgb(219,213,19)" fg:x="62538" fg:w="211"/><text x="95.8899%" y="399.50"></text></g><g><title>core::mem::replace (71 samples, 0.11%)</title><rect x="95.8540%" y="373" width="0.1086%" height="15" fill="rgb(252,169,30)" fg:x="62678" fg:w="71"/><text x="96.1040%" y="383.50"></text></g><g><title>core::ptr::write (18 samples, 0.03%)</title><rect x="95.9351%" y="357" width="0.0275%" height="15" fill="rgb(206,32,51)" fg:x="62731" fg:w="18"/><text x="96.1851%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (236 samples, 0.36%)</title><rect x="95.6032%" y="405" width="0.3609%" height="15" fill="rgb(250,172,42)" fg:x="62514" fg:w="236"/><text x="95.8532%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (853 samples, 1.30%)</title><rect x="95.3433%" y="421" width="1.3045%" height="15" fill="rgb(209,34,43)" fg:x="62344" fg:w="853"/><text x="95.5933%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (447 samples, 0.68%)</title><rect x="95.9642%" y="405" width="0.6836%" height="15" fill="rgb(223,11,35)" fg:x="62750" fg:w="447"/><text x="96.2142%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (398 samples, 0.61%)</title><rect x="96.0391%" y="389" width="0.6087%" height="15" fill="rgb(251,219,26)" fg:x="62799" fg:w="398"/><text x="96.2891%" y="399.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::items::{{closure}} (373 samples, 0.57%)</title><rect x="96.0773%" y="373" width="0.5704%" height="15" fill="rgb(231,119,3)" fg:x="62824" fg:w="373"/><text x="96.3273%" y="383.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::contains (318 samples, 0.49%)</title><rect x="96.1614%" y="357" width="0.4863%" height="15" fill="rgb(216,97,11)" fg:x="62879" fg:w="318"/><text x="96.4114%" y="367.50"></text></g><g><title>core::num::&lt;impl u128&gt;::pow (238 samples, 0.36%)</title><rect x="96.2838%" y="341" width="0.3640%" height="15" fill="rgb(223,59,9)" fg:x="62959" fg:w="238"/><text x="96.5338%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (864 samples, 1.32%)</title><rect x="95.3325%" y="453" width="1.3213%" height="15" fill="rgb(233,93,31)" fg:x="62337" fg:w="864"/><text x="95.5825%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (861 samples, 1.32%)</title><rect x="95.3371%" y="437" width="1.3167%" height="15" fill="rgb(239,81,33)" fg:x="62340" fg:w="861"/><text x="95.5871%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (8 samples, 0.01%)</title><rect x="96.6554%" y="453" width="0.0122%" height="15" fill="rgb(213,120,34)" fg:x="63202" fg:w="8"/><text x="96.9054%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (8 samples, 0.01%)</title><rect x="96.6554%" y="437" width="0.0122%" height="15" fill="rgb(243,49,53)" fg:x="63202" fg:w="8"/><text x="96.9054%" y="447.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.02%)</title><rect x="96.6738%" y="357" width="0.0199%" height="15" fill="rgb(247,216,33)" fg:x="63214" fg:w="13"/><text x="96.9238%" y="367.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="96.6814%" y="341" width="0.0122%" height="15" fill="rgb(226,26,14)" fg:x="63219" fg:w="8"/><text x="96.9314%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (8 samples, 0.01%)</title><rect x="96.7074%" y="325" width="0.0122%" height="15" fill="rgb(215,49,53)" fg:x="63236" fg:w="8"/><text x="96.9574%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (19 samples, 0.03%)</title><rect x="96.6936%" y="357" width="0.0291%" height="15" fill="rgb(245,162,40)" fg:x="63227" fg:w="19"/><text x="96.9436%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (15 samples, 0.02%)</title><rect x="96.6998%" y="341" width="0.0229%" height="15" fill="rgb(229,68,17)" fg:x="63231" fg:w="15"/><text x="96.9498%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (37 samples, 0.06%)</title><rect x="96.6707%" y="389" width="0.0566%" height="15" fill="rgb(213,182,10)" fg:x="63212" fg:w="37"/><text x="96.9207%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (37 samples, 0.06%)</title><rect x="96.6707%" y="373" width="0.0566%" height="15" fill="rgb(245,125,30)" fg:x="63212" fg:w="37"/><text x="96.9207%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (48 samples, 0.07%)</title><rect x="96.6676%" y="453" width="0.0734%" height="15" fill="rgb(232,202,2)" fg:x="63210" fg:w="48"/><text x="96.9176%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (48 samples, 0.07%)</title><rect x="96.6676%" y="437" width="0.0734%" height="15" fill="rgb(237,140,51)" fg:x="63210" fg:w="48"/><text x="96.9176%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (48 samples, 0.07%)</title><rect x="96.6676%" y="421" width="0.0734%" height="15" fill="rgb(236,157,25)" fg:x="63210" fg:w="48"/><text x="96.9176%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (47 samples, 0.07%)</title><rect x="96.6692%" y="405" width="0.0719%" height="15" fill="rgb(219,209,0)" fg:x="63211" fg:w="47"/><text x="96.9192%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array (8 samples, 0.01%)</title><rect x="96.7288%" y="389" width="0.0122%" height="15" fill="rgb(240,116,54)" fg:x="63250" fg:w="8"/><text x="96.9788%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (8 samples, 0.01%)</title><rect x="96.7288%" y="373" width="0.0122%" height="15" fill="rgb(216,10,36)" fg:x="63250" fg:w="8"/><text x="96.9788%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15,655 samples, 23.94%)</title><rect x="72.8028%" y="517" width="23.9413%" height="15" fill="rgb(222,72,44)" fg:x="47605" fg:w="15655"/><text x="73.0528%" y="527.50">core::iter::traits::iterator::Iterator..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15,652 samples, 23.94%)</title><rect x="72.8074%" y="501" width="23.9367%" height="15" fill="rgb(232,159,9)" fg:x="47608" fg:w="15652"/><text x="73.0574%" y="511.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::tra..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15,650 samples, 23.93%)</title><rect x="72.8104%" y="485" width="23.9337%" height="15" fill="rgb(210,39,32)" fg:x="47610" fg:w="15650"/><text x="73.0604%" y="495.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spe..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15,649 samples, 23.93%)</title><rect x="72.8119%" y="469" width="23.9322%" height="15" fill="rgb(216,194,45)" fg:x="47611" fg:w="15649"/><text x="73.0619%" y="479.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spe..</text></g><g><title>wfc::wfc::bits256_set::Bits256Set::items (15,659 samples, 23.95%)</title><rect x="72.8012%" y="533" width="23.9475%" height="15" fill="rgb(218,18,35)" fg:x="47604" fg:w="15659"/><text x="73.0512%" y="543.50">wfc::wfc::bits256_set::Bits256Set::ite..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (7 samples, 0.01%)</title><rect x="96.7732%" y="469" width="0.0107%" height="15" fill="rgb(207,83,51)" fg:x="63279" fg:w="7"/><text x="97.0232%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (24 samples, 0.04%)</title><rect x="96.7487%" y="517" width="0.0367%" height="15" fill="rgb(225,63,43)" fg:x="63263" fg:w="24"/><text x="96.9987%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.03%)</title><rect x="96.7594%" y="501" width="0.0260%" height="15" fill="rgb(207,57,36)" fg:x="63270" fg:w="17"/><text x="97.0094%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (14 samples, 0.02%)</title><rect x="96.7640%" y="485" width="0.0214%" height="15" fill="rgb(216,99,33)" fg:x="63273" fg:w="14"/><text x="97.0140%" y="495.50"></text></g><g><title>wfc::wfc::bits256_set::Bits256Set::new_intersection (30 samples, 0.05%)</title><rect x="96.7487%" y="533" width="0.0459%" height="15" fill="rgb(225,42,16)" fg:x="63263" fg:w="30"/><text x="96.9987%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (9 samples, 0.01%)</title><rect x="96.8190%" y="469" width="0.0138%" height="15" fill="rgb(220,201,45)" fg:x="63309" fg:w="9"/><text x="97.0690%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (19 samples, 0.03%)</title><rect x="96.8068%" y="517" width="0.0291%" height="15" fill="rgb(225,33,4)" fg:x="63301" fg:w="19"/><text x="97.0568%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (18 samples, 0.03%)</title><rect x="96.8083%" y="501" width="0.0275%" height="15" fill="rgb(224,33,50)" fg:x="63302" fg:w="18"/><text x="97.0583%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (18 samples, 0.03%)</title><rect x="96.8083%" y="485" width="0.0275%" height="15" fill="rgb(246,198,51)" fg:x="63302" fg:w="18"/><text x="97.0583%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (29 samples, 0.04%)</title><rect x="97.9308%" y="469" width="0.0443%" height="15" fill="rgb(205,22,4)" fg:x="64036" fg:w="29"/><text x="98.1808%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (316 samples, 0.48%)</title><rect x="97.5103%" y="485" width="0.4833%" height="15" fill="rgb(206,3,8)" fg:x="63761" fg:w="316"/><text x="97.7603%" y="495.50"></text></g><g><title>core::ptr::null (12 samples, 0.02%)</title><rect x="97.9752%" y="469" width="0.0184%" height="15" fill="rgb(251,23,15)" fg:x="64065" fg:w="12"/><text x="98.2252%" y="479.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (12 samples, 0.02%)</title><rect x="97.9752%" y="453" width="0.0184%" height="15" fill="rgb(252,88,28)" fg:x="64065" fg:w="12"/><text x="98.2252%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (670 samples, 1.02%)</title><rect x="98.4906%" y="469" width="1.0246%" height="15" fill="rgb(212,127,14)" fg:x="64402" fg:w="670"/><text x="98.7406%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (249 samples, 0.38%)</title><rect x="99.1344%" y="453" width="0.3808%" height="15" fill="rgb(247,145,37)" fg:x="64823" fg:w="249"/><text x="99.3844%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1,077 samples, 1.65%)</title><rect x="97.9935%" y="485" width="1.6471%" height="15" fill="rgb(209,117,53)" fg:x="64077" fg:w="1077"/><text x="98.2435%" y="495.50"></text></g><g><title>core::ptr::null_mut (82 samples, 0.13%)</title><rect x="99.5152%" y="469" width="0.1254%" height="15" fill="rgb(212,90,42)" fg:x="65072" fg:w="82"/><text x="99.7652%" y="479.50"></text></g><g><title>core::ptr::invalid_mut (39 samples, 0.06%)</title><rect x="99.5810%" y="453" width="0.0596%" height="15" fill="rgb(218,164,37)" fg:x="65115" fg:w="39"/><text x="99.8310%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (17 samples, 0.03%)</title><rect x="99.6666%" y="469" width="0.0260%" height="15" fill="rgb(246,65,34)" fg:x="65171" fg:w="17"/><text x="99.9166%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (17 samples, 0.03%)</title><rect x="99.6666%" y="453" width="0.0260%" height="15" fill="rgb(231,100,33)" fg:x="65171" fg:w="17"/><text x="99.9166%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,590 samples, 2.43%)</title><rect x="97.2901%" y="501" width="2.4316%" height="15" fill="rgb(228,126,14)" fg:x="63617" fg:w="1590"/><text x="97.5401%" y="511.50">&lt;c..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (53 samples, 0.08%)</title><rect x="99.6406%" y="485" width="0.0811%" height="15" fill="rgb(215,173,21)" fg:x="65154" fg:w="53"/><text x="99.8906%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (19 samples, 0.03%)</title><rect x="99.6926%" y="469" width="0.0291%" height="15" fill="rgb(210,6,40)" fg:x="65188" fg:w="19"/><text x="99.9426%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,942 samples, 2.97%)</title><rect x="96.8359%" y="517" width="2.9699%" height="15" fill="rgb(212,48,18)" fg:x="63320" fg:w="1942"/><text x="97.0859%" y="527.50">cor..</text></g><g><title>wfc::wfc::bits256_set::Bits256Set::new_sum::{{closure}} (52 samples, 0.08%)</title><rect x="99.7263%" y="501" width="0.0795%" height="15" fill="rgb(230,214,11)" fg:x="65210" fg:w="52"/><text x="99.9763%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.03%)</title><rect x="99.8165%" y="469" width="0.0306%" height="15" fill="rgb(254,105,39)" fg:x="65269" fg:w="20"/><text x="100.0665%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.03%)</title><rect x="99.8180%" y="453" width="0.0291%" height="15" fill="rgb(245,158,5)" fg:x="65270" fg:w="19"/><text x="100.0680%" y="463.50"></text></g><g><title>free (13 samples, 0.02%)</title><rect x="99.8272%" y="437" width="0.0199%" height="15" fill="rgb(249,208,11)" fg:x="65276" fg:w="13"/><text x="100.0772%" y="447.50"></text></g><g><title>[libc.so.6] (10 samples, 0.02%)</title><rect x="99.8318%" y="421" width="0.0153%" height="15" fill="rgb(210,39,28)" fg:x="65279" fg:w="10"/><text x="100.0818%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;wfc::wfc::bits256_set::Bits256Set&gt;&gt; (32 samples, 0.05%)</title><rect x="99.8058%" y="517" width="0.0489%" height="15" fill="rgb(211,56,53)" fg:x="65262" fg:w="32"/><text x="100.0558%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;wfc::wfc::bits256_set::Bits256Set&gt;&gt; (28 samples, 0.04%)</title><rect x="99.8119%" y="501" width="0.0428%" height="15" fill="rgb(226,201,30)" fg:x="65266" fg:w="28"/><text x="100.0619%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.04%)</title><rect x="99.8150%" y="485" width="0.0398%" height="15" fill="rgb(239,101,34)" fg:x="65268" fg:w="26"/><text x="100.0650%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (9 samples, 0.01%)</title><rect x="99.8547%" y="517" width="0.0138%" height="15" fill="rgb(226,209,5)" fg:x="65294" fg:w="9"/><text x="100.1047%" y="527.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (7 samples, 0.01%)</title><rect x="99.8578%" y="501" width="0.0107%" height="15" fill="rgb(250,105,47)" fg:x="65296" fg:w="7"/><text x="100.1078%" y="511.50"></text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::propagate (24,570 samples, 37.58%)</title><rect x="62.2979%" y="565" width="37.5751%" height="15" fill="rgb(230,72,3)" fg:x="40736" fg:w="24570"/><text x="62.5479%" y="575.50">wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::propag..</text></g><g><title>wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::legal_tiles (24,542 samples, 37.53%)</title><rect x="62.3408%" y="549" width="37.5323%" height="15" fill="rgb(232,218,39)" fg:x="40764" fg:w="24542"/><text x="62.5908%" y="559.50">wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet::legal_..</text></g><g><title>wfc::wfc::bits256_set::Bits256Set::new_sum (2,013 samples, 3.08%)</title><rect x="96.7946%" y="533" width="3.0785%" height="15" fill="rgb(248,166,6)" fg:x="63293" fg:w="2013"/><text x="97.0446%" y="543.50">wfc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="99.8731%" y="549" width="0.0122%" height="15" fill="rgb(247,89,20)" fg:x="65306" fg:w="8"/><text x="100.1231%" y="559.50"></text></g><g><title>&lt;wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet as wfc::wfc::traits::WFC&gt;::solve (65,317 samples, 99.89%)</title><rect x="0.0092%" y="581" width="99.8899%" height="15" fill="rgb(248,130,54)" fg:x="6" fg:w="65317"/><text x="0.2592%" y="591.50">&lt;wfc::wfc::queueprop_bitarrayset::QueuePropBitArraySet as wfc::wfc::traits::WFC&gt;::solve</text></g><g><title>wfc::wfc::utils::get_random (17 samples, 0.03%)</title><rect x="99.8731%" y="565" width="0.0260%" height="15" fill="rgb(234,196,4)" fg:x="65306" fg:w="17"/><text x="100.1231%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (15 samples, 0.02%)</title><rect x="99.9220%" y="165" width="0.0229%" height="15" fill="rgb(250,143,31)" fg:x="65338" fg:w="15"/><text x="100.1720%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.02%)</title><rect x="99.9220%" y="149" width="0.0229%" height="15" fill="rgb(211,110,34)" fg:x="65338" fg:w="15"/><text x="100.1720%" y="159.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (15 samples, 0.02%)</title><rect x="99.9220%" y="133" width="0.0229%" height="15" fill="rgb(215,124,48)" fg:x="65338" fg:w="15"/><text x="100.1720%" y="143.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (8 samples, 0.01%)</title><rect x="99.9557%" y="85" width="0.0122%" height="15" fill="rgb(216,46,13)" fg:x="65360" fg:w="8"/><text x="100.2057%" y="95.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (7 samples, 0.01%)</title><rect x="99.9572%" y="69" width="0.0107%" height="15" fill="rgb(205,184,25)" fg:x="65361" fg:w="7"/><text x="100.2072%" y="79.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.01%)</title><rect x="99.9572%" y="53" width="0.0107%" height="15" fill="rgb(228,1,10)" fg:x="65361" fg:w="7"/><text x="100.2072%" y="63.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="99.9572%" y="37" width="0.0107%" height="15" fill="rgb(213,116,27)" fg:x="65361" fg:w="7"/><text x="100.2072%" y="47.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (20 samples, 0.03%)</title><rect x="99.9480%" y="149" width="0.0306%" height="15" fill="rgb(241,95,50)" fg:x="65355" fg:w="20"/><text x="100.1980%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (20 samples, 0.03%)</title><rect x="99.9480%" y="133" width="0.0306%" height="15" fill="rgb(238,48,32)" fg:x="65355" fg:w="20"/><text x="100.1980%" y="143.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (20 samples, 0.03%)</title><rect x="99.9480%" y="117" width="0.0306%" height="15" fill="rgb(235,113,49)" fg:x="65355" fg:w="20"/><text x="100.1980%" y="127.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (20 samples, 0.03%)</title><rect x="99.9480%" y="101" width="0.0306%" height="15" fill="rgb(205,127,43)" fg:x="65355" fg:w="20"/><text x="100.1980%" y="111.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (52 samples, 0.08%)</title><rect x="99.9067%" y="229" width="0.0795%" height="15" fill="rgb(250,162,2)" fg:x="65328" fg:w="52"/><text x="100.1567%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (50 samples, 0.08%)</title><rect x="99.9098%" y="213" width="0.0765%" height="15" fill="rgb(220,13,41)" fg:x="65330" fg:w="50"/><text x="100.1598%" y="223.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (49 samples, 0.07%)</title><rect x="99.9113%" y="197" width="0.0749%" height="15" fill="rgb(249,221,25)" fg:x="65331" fg:w="49"/><text x="100.1613%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (49 samples, 0.07%)</title><rect x="99.9113%" y="181" width="0.0749%" height="15" fill="rgb(215,208,19)" fg:x="65331" fg:w="49"/><text x="100.1613%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (27 samples, 0.04%)</title><rect x="99.9449%" y="165" width="0.0413%" height="15" fill="rgb(236,175,2)" fg:x="65353" fg:w="27"/><text x="100.1949%" y="175.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (56 samples, 0.09%)</title><rect x="99.9067%" y="245" width="0.0856%" height="15" fill="rgb(241,52,2)" fg:x="65328" fg:w="56"/><text x="100.1567%" y="255.50"></text></g><g><title>all (65,389 samples, 100%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(248,140,14)" fg:x="0" fg:w="65389"/><text x="0.2500%" y="911.50"></text></g><g><title>wfc (65,389 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(253,22,42)" fg:x="0" fg:w="65389"/><text x="0.2500%" y="895.50">wfc</text></g><g><title>_start (65,383 samples, 99.99%)</title><rect x="0.0092%" y="869" width="99.9908%" height="15" fill="rgb(234,61,47)" fg:x="6" fg:w="65383"/><text x="0.2592%" y="879.50">_start</text></g><g><title>__libc_start_main (65,383 samples, 99.99%)</title><rect x="0.0092%" y="853" width="99.9908%" height="15" fill="rgb(208,226,15)" fg:x="6" fg:w="65383"/><text x="0.2592%" y="863.50">__libc_start_main</text></g><g><title>[libc.so.6] (65,383 samples, 99.99%)</title><rect x="0.0092%" y="837" width="99.9908%" height="15" fill="rgb(217,221,4)" fg:x="6" fg:w="65383"/><text x="0.2592%" y="847.50">[libc.so.6]</text></g><g><title>main (65,383 samples, 99.99%)</title><rect x="0.0092%" y="821" width="99.9908%" height="15" fill="rgb(212,174,34)" fg:x="6" fg:w="65383"/><text x="0.2592%" y="831.50">main</text></g><g><title>std::rt::lang_start (65,383 samples, 99.99%)</title><rect x="0.0092%" y="805" width="99.9908%" height="15" fill="rgb(253,83,4)" fg:x="6" fg:w="65383"/><text x="0.2592%" y="815.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (65,383 samples, 99.99%)</title><rect x="0.0092%" y="789" width="99.9908%" height="15" fill="rgb(250,195,49)" fg:x="6" fg:w="65383"/><text x="0.2592%" y="799.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (65,383 samples, 99.99%)</title><rect x="0.0092%" y="773" width="99.9908%" height="15" fill="rgb(241,192,25)" fg:x="6" fg:w="65383"/><text x="0.2592%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (65,383 samples, 99.99%)</title><rect x="0.0092%" y="757" width="99.9908%" height="15" fill="rgb(208,124,10)" fg:x="6" fg:w="65383"/><text x="0.2592%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (65,383 samples, 99.99%)</title><rect x="0.0092%" y="741" width="99.9908%" height="15" fill="rgb(222,33,0)" fg:x="6" fg:w="65383"/><text x="0.2592%" y="751.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (65,383 samples, 99.99%)</title><rect x="0.0092%" y="725" width="99.9908%" height="15" fill="rgb(234,209,28)" fg:x="6" fg:w="65383"/><text x="0.2592%" y="735.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (65,383 samples, 99.99%)</title><rect x="0.0092%" y="709" width="99.9908%" height="15" fill="rgb(224,11,23)" fg:x="6" fg:w="65383"/><text x="0.2592%" y="719.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (65,383 samples, 99.99%)</title><rect x="0.0092%" y="693" width="99.9908%" height="15" fill="rgb(232,99,1)" fg:x="6" fg:w="65383"/><text x="0.2592%" y="703.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (65,383 samples, 99.99%)</title><rect x="0.0092%" y="677" width="99.9908%" height="15" fill="rgb(237,95,45)" fg:x="6" fg:w="65383"/><text x="0.2592%" y="687.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (65,383 samples, 99.99%)</title><rect x="0.0092%" y="661" width="99.9908%" height="15" fill="rgb(208,109,11)" fg:x="6" fg:w="65383"/><text x="0.2592%" y="671.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (65,383 samples, 99.99%)</title><rect x="0.0092%" y="645" width="99.9908%" height="15" fill="rgb(216,190,48)" fg:x="6" fg:w="65383"/><text x="0.2592%" y="655.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (65,383 samples, 99.99%)</title><rect x="0.0092%" y="629" width="99.9908%" height="15" fill="rgb(251,171,36)" fg:x="6" fg:w="65383"/><text x="0.2592%" y="639.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (65,383 samples, 99.99%)</title><rect x="0.0092%" y="613" width="99.9908%" height="15" fill="rgb(230,62,22)" fg:x="6" fg:w="65383"/><text x="0.2592%" y="623.50">core::ops::function::FnOnce::call_once</text></g><g><title>wfc::main (65,383 samples, 99.99%)</title><rect x="0.0092%" y="597" width="99.9908%" height="15" fill="rgb(225,114,35)" fg:x="6" fg:w="65383"/><text x="0.2592%" y="607.50">wfc::main</text></g><g><title>wfc::wfc::rules::get_pipes_rules (66 samples, 0.10%)</title><rect x="99.8991%" y="581" width="0.1009%" height="15" fill="rgb(215,118,42)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (66 samples, 0.10%)</title><rect x="99.8991%" y="565" width="0.1009%" height="15" fill="rgb(243,119,21)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (66 samples, 0.10%)</title><rect x="99.8991%" y="549" width="0.1009%" height="15" fill="rgb(252,177,53)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (66 samples, 0.10%)</title><rect x="99.8991%" y="533" width="0.1009%" height="15" fill="rgb(237,209,29)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (66 samples, 0.10%)</title><rect x="99.8991%" y="517" width="0.1009%" height="15" fill="rgb(212,65,23)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (66 samples, 0.10%)</title><rect x="99.8991%" y="501" width="0.1009%" height="15" fill="rgb(230,222,46)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (66 samples, 0.10%)</title><rect x="99.8991%" y="485" width="0.1009%" height="15" fill="rgb(215,135,32)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (66 samples, 0.10%)</title><rect x="99.8991%" y="469" width="0.1009%" height="15" fill="rgb(246,101,22)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (66 samples, 0.10%)</title><rect x="99.8991%" y="453" width="0.1009%" height="15" fill="rgb(206,107,13)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (66 samples, 0.10%)</title><rect x="99.8991%" y="437" width="0.1009%" height="15" fill="rgb(250,100,44)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="447.50"></text></g><g><title>wfc::wfc::rules::get_pipes_rules::{{closure}} (66 samples, 0.10%)</title><rect x="99.8991%" y="421" width="0.1009%" height="15" fill="rgb(231,147,38)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="431.50"></text></g><g><title>wfc::wfc::rules::get_pipe_rules (66 samples, 0.10%)</title><rect x="99.8991%" y="405" width="0.1009%" height="15" fill="rgb(229,8,40)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="415.50"></text></g><g><title>wfc::wfc::rules::get_pipe_dir_rules (66 samples, 0.10%)</title><rect x="99.8991%" y="389" width="0.1009%" height="15" fill="rgb(221,135,30)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="399.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (66 samples, 0.10%)</title><rect x="99.8991%" y="373" width="0.1009%" height="15" fill="rgb(249,193,18)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="383.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (66 samples, 0.10%)</title><rect x="99.8991%" y="357" width="0.1009%" height="15" fill="rgb(209,133,39)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="367.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (66 samples, 0.10%)</title><rect x="99.8991%" y="341" width="0.1009%" height="15" fill="rgb(232,100,14)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="351.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (66 samples, 0.10%)</title><rect x="99.8991%" y="325" width="0.1009%" height="15" fill="rgb(224,185,1)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (66 samples, 0.10%)</title><rect x="99.8991%" y="309" width="0.1009%" height="15" fill="rgb(223,139,8)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (66 samples, 0.10%)</title><rect x="99.8991%" y="293" width="0.1009%" height="15" fill="rgb(232,213,38)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (66 samples, 0.10%)</title><rect x="99.8991%" y="277" width="0.1009%" height="15" fill="rgb(207,94,22)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (66 samples, 0.10%)</title><rect x="99.8991%" y="261" width="0.1009%" height="15" fill="rgb(219,183,54)" fg:x="65323" fg:w="66"/><text x="100.1491%" y="271.50"></text></g></svg></svg>